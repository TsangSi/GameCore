syntax = "proto3";

package msg;

enum PCK {
  Default_ID = 0;
  C2SLogin_ID = 1;
  S2CLogin_ID = 2;
  S2CRoleInfo_ID = 3;
  S2CServerInfo_ID = 4;
  C2SGM_ID = 5;
  S2CKill_ID = 6; //用户被踢下线
  C2SRoleBaseInfo_ID = 7; //获取用户信息
  S2CRoleBaseInfo_ID = 8; //获取用户信息
  S2CRoleData_ID = 9; //用户除属性之外的数据

  C2SOtherInfo_ID = 10;
  S2COtherInfo_ID = 11;
  S2CNotice_ID = 12; //公告信息

  C2SRespect_ID = 13; //膜拜
  S2CRespect_ID = 14; //膜拜

  S2COfflinePrize_ID = 15; //离线挂机奖励
  C2SGetOfflinePrize_ID = 16; //领取离线挂机奖励
  S2CGetOfflinePrize_ID = 17; //领取离线挂机奖励

  C2SGetGift1_ID = 18; //领取新号礼包1奖励
  S2CGetGift1_ID = 19; //领取新号礼包1奖励
  C2SGetGift2_ID = 20; //领取新号礼包2奖励
  S2CGetGift2_ID = 21; //领取新号礼包2奖励

  Ping_ID = 22; //心跳包
  Pong_ID = 23; //心跳包

  LoginFinish_ID = 24; // 登录数据发送完成

  C2SAchieveShow_ID = 25;
  S2CAchieveShow_ID = 26;
  C2SUserInfo_ID = 27;
  S2CUserInfo_ID = 28;
  C2SLoginEnd_ID = 29; //客户端登录成功后发

  S2CReportFcm_ID = 30;
  C2SSetFcm_ID = 31; //改防沉迷状态

  C2SFocusPrice_ID = 32;
  S2CFocusPrice_ID = 33;
  C2SFirstInvite_ID = 34;
  S2CFirstInvite_ID = 35;
  C2SNewStory_ID = 36;
  S2CNewStory_ID = 37;
  S2KCrossPing_ID = 38;
  S2CAllData_ID = 39;
  K2SNewEvent_ID = 40; //跨服服务器发送NewEvent事件
  C2SAutoJump_ID = 41;
  S2CRealNamePopups_ID = 42; //实名防沉迷弹窗
  K2SNewEnemyRecord_ID = 43;
  K2SPrizeReport_ID = 44;

  S2COtherInfoEquip_ID = 45;
  S2COtherInfoPet_ID = 46;
  S2COtherInfoFV_ID = 47;
  S2CRoleTask_ID = 48;
  C2SRoleInfo_ID = 49;
  C2SChangeMap_ID = 50; //请求切换地图
  S2CChangeMap_ID = 51; //切换地图
  C2SStartMove_ID = 52; //开始移动
  S2CStartMove_ID = 53; //开始移动结果
  S2CPlayerMove_ID = 54; //玩家移动

  C2SStopMove_ID = 55; //移动停止
  S2CPlayerStopMove_ID = 56; //其他玩家停止移动aw

  S2CPlayerEnterMap_ID = 57; //其他玩家进入地图

  S2CPlayerLeaveMap_ID = 58; //其他玩家离开地图
  S2CMonsterEnterMap_ID = 59; //怪物进入地图
  S2CMonsterLeaveMap_ID = 60; //怪物离开地图
  C2SStartFight_ID = 61; //
  S2CStartFight_ID = 62; //挑战
  S2CUpMonsterInfo_ID = 63; //更新地图里怪物的信息
  S2CTransfer_ID = 64; //传送

  C2SCheckFight_ID = 65; // 检查场景战斗
  S2CCheckFight_ID = 66; // 检查战斗返回
  S2CStopMove_ID = 67; //移动停止
  C2SUpdateMapInfo_ID = 68; //更新地图上屏幕内的信息

  C2SSearchPlayer_ID = 69; //模糊搜索玩家
  S2CSearchPlayer_ID = 70; //模糊搜索玩家

  C2SRoleSkillUp_ID = 71; //升级单个玩家技能
  C2SRoleSkillUpAuto_ID = 72; //一键自动升级技能
  S2CRoleSkillUp_ID = 73; //玩家技能升级
  C2SRoleSkillOrder_ID = 74; //玩家技能顺序修改
  S2CRoleSkillOrder_ID = 75; //玩家技能顺序修改
  C2SWelcome_ID = 76;
  S2CReLoginState_ID = 77; //重连状态包。当客户端要求重连，但是服务端已经删除了玩家数据或token时，发这个包
  C2SUnlockSkin_ID = 81; //解锁皮肤
  S2CUnlockSkin_ID = 82; //解锁皮肤
  C2SWearSkin_ID = 83; //穿戴幻化皮肤
  S2CWearSkin_ID = 84; //穿戴幻化皮肤

  C2SGetVipPrize_ID = 85; //领取VIP礼包
  S2CGetVipPrize_ID = 86; //领取VIP礼包

  C2SGetNewPrize_ID = 87; //领取新手礼包
  S2CGetNewPrize_ID = 88; //领取新手礼包

  C2SClientSwitch_ID = 89; // 修改客户端参数
  S2CClientSwitch_ID = 90; // 修改客户端参数

  C2SReLogin_ID = 91; //重连登录
  S2CReLogin_ID = 92; //重连结果

  C2SStartCollect_ID = 93; //开始采集
  S2CStartCollect_ID = 94; //
  C2SEndCollect_ID = 95; // 结束采集
  S2CEndCollect_ID = 96; //
  C2SShareSuccess_ID = 97; //分享成功
  S2CMonsterTalk_ID = 98; //怪物喊话
  C2SNewPlayerZF_ID = 99; //阵法系统结束引导

  S2CPrizeReport_ID = 100;
  S2CBattlefieldReport_ID = 101;
  C2SEndFight_ID = 102; //结束战斗
  C2SStageFight_ID = 103;
  S2CStageFight_ID = 104;
  C2SAutoStage_ID = 105;
  C2SStageSeek_ID = 106;
  S2CStageSeek_ID = 107;
  C2SStageHelp_ID = 108;
  S2CStageHelp_ID = 109;
  S2CStagePrize_ID = 110;
  C2SGetStagePrize_ID = 111;
  S2CGetStagePrize_ID = 112;
  C2SCatchPet_ID = 113;
  S2CCatchPet_ID = 114;
  C2SStagePrize_ID = 115;
  C2SGetAllStagePrize_ID = 116;
  S2CGetAllStagePrize_ID = 117;
  C2SStageDraw_ID = 118;
  S2CStageDraw_ID = 119;
  C2SRealName_ID = 120;
  S2CRealName_ID = 121;
  C2SGetRealNamePrize_ID = 122;
  S2CGetRealNamePrize_ID = 123;
  C2SGetLimitCloth_ID = 124;
  S2CGetLimitCloth_ID = 125;
  S2CGetLimitClothEnd_ID = 126;

  C2SSkinUp_ID = 127;
  S2CSkinUp_ID = 128;
  C2SStageDrawEnd_ID = 129;
  C2SBuyVipPrize_ID = 130;
  S2CBuyVipPrize_ID = 131;

  C2SGetSuperVipQQ_ID = 132;
  S2CGetSuperVipQQ_ID = 133;

  C2SFightContinue_ID = 135; //前端战斗进行中
  C2SGetVipDayGift_ID = 136;
  S2CGetVipDayGift_ID = 137;

  C2SMoving_ID = 138; //玩家移动中，帧同步，广播坐标
  S2CMoving_ID = 139; //玩家移动中，帧同步，广播坐标

  C2SDropSkin_ID = 140;
  S2CDropSkin_ID = 141;

  C2SSkinReikiUp_ID = 142;
  S2CSkinReikiUp_ID = 143;
  C2SSkinSpiritUp_ID = 144;
  S2CSkinSpiritUp_ID = 145;
  C2SActiveSkinExt_ID = 146;
  S2CActiveSkinExt_ID = 147;
  C2SSkinSuitUp_ID = 148;
  S2CSkinSuitUp_ID = 149;
  C2SWearSkinSuit_ID = 150;
  S2CWearSkinSuit_ID = 151;
  C2SDropSkinSuit_ID = 152;
  S2CDropSkinSuit_ID = 153;

  C2SRoutePath_ID = 154;
  S2CRoutePath_ID = 155;

  C2SSkinSuitExtAttr_ID = 156;
  S2CSkinSuitExtAttr_ID = 157;

  S2CSimpleBattleReport_ID = 160;
  S2CFightCD_ID = 161;

  C2SOpenMomoMsg_ID = 170;
  C2SGetMomoPrize_ID = 171;
  S2CGetMomoPrize_ID = 172;

  C2SGradeUp_ID = 201;
  S2CGradeUp_ID = 202;
  C2SGetGradePrize_ID = 203;
  S2CGetGradePrize_ID = 204;
  C2SGradeHuaJin_ID = 205;
  S2CGradeHuaJin_ID = 206;
  S2CUserGrade_ID = 210;

  C2SReborn_ID = 216;
  S2CReborn_ID = 217;
  C2SGetFnPreviewPrize_ID = 218;
  S2CGetFnPreviewPrize_ID = 219;
  C2SFnPreviewCfg_ID = 220;

  S2CGetFriends_ID = 302;
  C2SFocus_ID = 303;
  S2CFocus_ID = 304;
  C2SCancelFocus_ID = 305;
  S2CCancelFocus_ID = 306;
  C2SHate_ID = 307;
  S2CHate_ID = 308;
  C2SCancelHate_ID = 309;
  S2CCancelHate_ID = 310;
  C2SGiveCoin_ID = 311;
  S2CGiveCoin_ID = 312;
  C2SGetCoin_ID = 313;
  S2CGetCoin_ID = 314;
  C2SGetSuggest_ID = 315;
  S2CGetSuggest_ID = 316;
  C2SOneKeyGiveCoin_ID = 317;
  S2COneKeyGiveCoin_ID = 318;
  C2SOneKeyGetCoin_ID = 319;
  S2COneKeyGetCoin_ID = 320;
  C2SOneKeyFocus_ID = 321;
  S2COneKeyFocus_ID = 322;
  C2SEnemyRecord_ID = 330;
  S2CEnemyRecord_ID = 331;
  C2SDelEnemy_ID = 332;
  S2CDelEnemy_ID = 333;
  C2SAddNewEnemy_ID = 334;
  S2CAddNewEnemy_ID = 335;

  C2SGetFriendInfos_ID = 340;
  S2CGetFriendInfos_ID = 341;
  C2SBlack_ID = 342;
  S2CBlack_ID = 343;

  S2CMasterMessage_ID = 350;
  C2SSendMasterNotice_ID = 351;
  S2CSendMasterNotice_ID = 352;
  S2CMasterAds_ID = 353;
  C2SMasterInvite_ID = 354;
  S2CMasterInvite_ID = 355;
  S2CInvitePupil_ID = 356;
  C2SHandleMasterInvite_ID = 357;
  S2CHandleMasterInvite_ID = 358;
  C2SMasterGiveExp_ID = 359;
  S2CMasterGiveExp_ID = 360;
  C2SGetMasterExp_ID = 361;
  S2CGetMasterExp_ID = 362;
  C2SDeletePupil_ID = 363;
  S2CDeletePupil_ID = 364;
  C2SDeleteMaster_ID = 365;
  S2CDeleteMaster_ID = 366;
  C2SGetPupilTask_ID = 367;
  S2CGetPupilTask_ID = 368;

  S2CMarryStatus_ID = 370;
  C2SGetMarryList_ID = 371;
  S2CGetMarryList_ID = 372;
  C2SGetMarry_ID = 373;
  S2CGetMarry_ID = 374;
  S2CSendMarry_ID = 375;
  C2SSendFlower_ID = 377;
  S2CSendFlower_ID = 378;
  S2CGetFlower_ID = 379;
  C2SMarryUpdate_ID = 381;
  S2CMarryUpdate_ID = 382;
  C2SHouseUpdate_ID = 383;
  S2CHouseUpdate_ID = 384;
  C2SGetUpdate_ID = 386;
  S2CGetUpdate_ID = 387;
  S2CNewMarry_ID = 388;
  C2SSendMarryGift_ID = 389;
  S2CSendMarryGift_ID = 390;
  C2SHandelMarry_ID = 391;
  S2CHandelMarry_ID = 392;
  C2SDeleteWife_ID = 393;
  S2CDeleteWife_ID = 394;
  S2CMateOnline_ID = 395;


  C2SGetHistoryChat_ID = 401;
  S2CGetHistoryChat_ID = 402;
  S2CNewChatMsg_ID = 403;
  C2SSendChatMsg_ID = 404;
  S2CSendChatMsg_ID = 405;
  S2CDelHistoryChat_ID = 408;
  C2SWhisper_ID = 411;
  S2CWhisper_ID = 412;
  C2SGetWhisper_ID = 413;
  S2CGetWhisper_ID = 414;
  S2CAllUnreadWhisper_ID = 415;
  C2SGetOnlineStatus_ID = 416;
  S2CGetOnlineStatus_ID = 417;
  C2SRemoveWhisper_ID = 418; //删除私聊
  S2CRemoveWhisper_ID = 419;

  C2SChangeNick_ID = 420; //修改昵称
  S2CChangeNick_ID = 421;
  S2CNewAtMsg_ID = 422; //有新的@信息

  C2SGetShopMallTypeList_ID = 428;
  S2CGetShopMallTypeList_ID = 429;
  C2SGetShopMallList_ID = 430; //虚拟商店列表
  S2CGetShopMallList_ID = 431;
  C2SShopBuy_ID = 432; //虚拟商店购买
  S2CShopBuy_ID = 433;
  C2SGetGoodsLimit_ID = 438;
  S2CGetGoodsLimit_ID = 439;
  C2SMailList_ID = 440;
  S2CMailList_ID = 441;
  C2SGetMailAttach_ID = 444;
  S2CGetMailAttach_ID = 445;
  S2CNewMail_ID = 446;
  C2SReadMail_ID = 448;
  S2CReadMail_ID = 449;
  S2CQuizAsk_ID = 450;
  C2SAnswerQuiz_ID = 451;
  S2CAnswerQuiz_ID = 452;
  S2CQuizSum_ID = 453;
  S2CQuizRank_ID = 454;
  S2CQuizFirst_ID = 455;
  S2CQuizStart_ID = 456;
  C2SDelMail_ID = 457;
  S2CDelMail_ID = 458;


  S2CWestExp_ID = 460;
  C2SGetProtectPlayer_ID = 461;
  S2CGetProtectPlayer_ID = 462;
  C2SGetWestExp_ID = 463;
  S2CGetWestExp_ID = 464;
  C2SQuickFinishWestExp_ID = 465;
  S2CQuickFinishWestExp_ID = 466;
  S2CFinishWestExp_ID = 467;
  C2SGetWestPrize_ID = 468;
  S2CGetWestPrize_ID = 469;
  C2SGetRobbedList_ID = 470;
  S2CGetRobbedList_ID = 471;
  C2SSendRevenge_ID = 472;
  S2CSendRevenge_ID = 473;
  C2SStartWestExp_ID = 474;
  S2CStartWestExp_ID = 475;
  C2SSendRob_ID = 476;
  S2CSendRob_ID = 477;
  S2CBeRob_ID = 478;
  S2CWestExpStart_ID = 480;
  S2CNewProtectPlayer_ID = 481;
  S2CEndProtectPlayer_ID = 482;
  C2SWestPray_ID = 483;
  S2CWestPray_ID = 484;
  S2CWestPlayerPray_ID = 485;

  C2SExtendEquipBag_ID = 490;
  S2CExtendEquipBag_ID = 491;
  C2SBagEquipBreak_ID = 492;
  S2CBagEquipBreak_ID = 493;

  C2SUserBag_ID = 500;
  S2CUserBag_ID = 501;
  C2SExtendBag_ID = 504;
  S2CExtendBag_ID = 505;
  C2SExchange_ID = 502;
  S2CExchange_ID = 503;
  C2SWearEquip_ID = 506;
  S2CWearEquip_ID = 507;
  C2SMeltEquip_ID = 508;
  S2CMeltEquip_ID = 509;
  C2SOpenTreasure_ID = 510;
  S2COpenTreasure_ID = 511;
  C2SAutoMelt_ID = 512;
  S2CAutoMelt_ID = 513;
  C2SBatchExchange_ID = 514;
  S2CBatchExchange_ID = 515;
  S2CBagChange_ID = 520;
  C2SGetBattlePrize_ID = 523;
  ItemFly_ID = 524;
  C2SWearOneEquip_ID = 525;
  S2CWearOneEquip_ID = 526;
  C2SItemStick_ID = 527;
  S2CItemStick_ID = 528;

  C2SGoldBag_ID = 530;
  S2CGoldBag_ID = 531;
  C2SGetGoldBagInfo_ID = 532;
  S2CGetGoldBagInfo_ID = 533;

  C2SMeltRecord_ID = 534;
  S2CMeltRecord_ID = 535;
  C2SMeltSetting_ID = 536;
  S2CMeltSetting_ID = 537;

  C2SRemItemNew_ID = 538;
  S2CRemItemNew_ID = 539;

  S2CClientDb_ID = 540;
  C2SClinetSet_ID = 541;
  S2CClinetSet_ID = 542;

  // 货币兑换
  C2SCurrencyExchange_ID = 545;
  S2CCurrencyExchange_ID = 546;

  C2SItemSell_ID = 547;
  S2CItemSell_ID = 548;

  S2CEquipPosInfo_ID = 550;
  C2SEquipSteel_ID = 551;
  S2CEquipSteel_ID = 552;
  C2SEquipStarGive_ID = 553;
  S2CEquipStarGive_ID = 554;
  C2SEquipStrength_ID = 555;
  S2CEquipStrength_ID = 556;
  C2SEquipStrengthOneKey_ID = 557;
  S2CEquipStrengthOneKey_ID = 558;
  C2SEquipStrengthSuit_ID = 559;
  S2CEquipStrengthSuit_ID = 560;
  C2SEquipForge_ID = 561;
  S2CEquipForge_ID = 562;
  C2SEquipStoneWearChange_ID = 563;
  S2CEquipStoneWearChange_ID = 564;
  C2SEquipStoneStickChange_ID = 565;
  S2CEquipStoneStickChange_ID = 566;
  C2SEquipStoneStick_ID = 567;
  S2CEquipStoneStick_ID = 568;
  C2SEquipRiseStar_ID = 569;
  S2CEquipRiseStar_ID = 570;
  C2SEquipOneKeyRiseStar_ID = 571;
  S2CEquipOneKeyRiseStar_ID = 572;
  C2SEquipBuild_ID = 573;
  S2CEquipBuild_ID = 574;
  S2CAutoMeltGain_ID = 575;
  C2SEquipOneKeyRiseStarRobot_ID = 576;
  S2CEquipOneKeyRiseStarRobot_ID = 577;
  C2SEquipForgeLevel_ID = 578;
  S2CEquipForgeLevel_ID = 579;
  C2SEquipForgeOpen_ID = 580;

  C2SGetBossGoodDrop_ID = 599;
  S2CGetBossGoodDrop_ID = 600;

  S2CBossPersonalInfo_ID = 601;
  C2SBossPersonalFight_ID = 602;
  S2CBossPersonalFight_ID = 603;
  C2SBossPersonalSweep_ID = 604;
  S2CBossPersonalSweep_ID = 605;

  S2CInstanceMaterialInfo_ID = 606;
  C2SInstanceMaterialFight_ID = 607;
  S2CInstanceMaterialFight_ID = 608;
  C2SInstanceMaterialSweep_ID = 609;
  S2CInstanceMaterialSweep_ID = 610;

  S2CInstanceTreasureInfo_ID = 611;
  C2SInstanceTreasureFight_ID = 612;
  S2CInstanceTreasureFight_ID = 613;
  C2SInstanceTreasureSweep_ID = 614;
  S2CInstanceTreasureSweep_ID = 615;
  C2SGetInstanceTreasureBox_ID = 616;
  S2CGetInstanceTreasureBox_ID = 617;

  S2CInstanceHeavenlyInfo_ID = 618;
  C2SInstanceHeavenlyFight_ID = 619;
  S2CInstanceHeavenlyFight_ID = 620;
  C2SInstanceHeavenlySweep_ID = 621;
  S2CInstanceHeavenlySweep_ID = 622;
  C2SGetInstanceHeavenlyBox_ID = 623;
  S2CGetInstanceHeavenlyBox_ID = 624;

  S2CInstanceTowerInfo_ID = 625;
  C2SInstanceTowerFight_ID = 626;
  S2CInstanceTowerFight_ID = 627;

  S2CBossVipInfo_ID = 661;
  C2SBossVipStart_ID = 662;
  S2CBossVipStart_ID = 663;
  C2SBossVipSweep_ID = 664;
  S2CBossVipSweep_ID = 665;

  S2CBossHillData_ID = 671;
  C2SBossHillFight_ID = 672;
  S2CBossHillFight_ID = 673;
  C2SBossHillReplace_ID = 674;
  S2CBossHillReplace_ID = 675;
  C2SBossHillOpen_ID = 676;
  S2CBossHillOpen_ID = 677;

  S2CInstanceDemonInfo_ID = 684;
  C2SInstanceDemonFight_ID = 685;
  S2CInstanceDemonFight_ID = 686;
  C2SInstanceDemonSweep_ID = 687;
  S2CInstanceDemonSweep_ID = 688;
  C2SGetInstanceDemonBox_ID = 689;
  S2CGetInstanceDemonBox_ID = 690;

  C2SGetTaskPrize_ID = 703;
  S2CGetTaskPrize_ID = 704;
  S2CLastDayRemain_ID = 710;
  C2SLifeFind_ID = 711;
  S2CLifeFind_ID = 712;
  C2SGetHistoryTaskPrize_ID = 713;
  S2CGetHistoryTaskPrize_ID = 714;
  C2SPeaceFinish_ID = 715;
  S2CPeaceFinish_ID = 716;
  C2SLifeFastFind_ID = 717;
  S2CLifeFastFind_ID = 718;
  C2SWorldLevel_ID = 719;

  S2CSMMonster_ID = 720;
  C2SSMFight_ID = 721;
  S2CSMFight_ID = 722;
  C2SSMRefreshStar_ID = 723;
  S2CSMRefreshStar_ID = 724;
  C2SSMFastFinish_ID = 725;
  S2CSMFastFinish_ID = 726;
  C2SSignPrize_ID = 730;
  S2CSignPrize_ID = 731;

  C2SRobotCompleteTask_ID = 734;
  S2CRobotCompleteTask_ID = 735;

  C2SHistoryTaskInfo_ID = 740;
  S2CHistoryTaskInfo_ID = 741;

  C2SGetAllPartnerByType_ID = 799;
  S2CGetAllPartnerByType_ID = 800;
  C2SPartnerLevelUp_ID = 801;
  S2CPartnerLevelUp_ID = 802;
  C2SPartnerStarUp_ID = 803;
  S2CPartnerStarUp_ID = 804;
  C2SPartnerBattlePos_ID = 805;
  S2CPartnerBattlePos_ID = 806;
  C2SPartnerRefreshSkill_ID = 807;
  S2CPartnerRefreshSkill_ID = 808;
  C2SPartnerReplaceSkill_ID = 809;
  S2CPartnerReplaceSkill_ID = 810;
  C2SPartnerNick_ID = 811;
  S2CPartnerNick_ID = 812;
  C2SPartnerSuit_ID = 813;
  S2CPartnerSuit_ID = 814;
  C2SUnlockNewPartner_ID = 815;
  S2CUnlockNewPartner_ID = 816;
  C2SPartnerGradeUp_ID = 817;
  S2CPartnerGradeUp_ID = 818;
  C2SStickPartner_ID = 819;
  S2CStickPartner_ID = 820;

  C2SPartnerSuitRobot_ID = 822;

  S2CUserDevil_ID = 841;
  C2SDevilAwake_ID = 842;
  S2CDevilAwake_ID = 843;
  C2SDevilLevelUp_ID = 844;
  S2CDevilLevelUp_ID = 845;
  C2SDevilPos_ID = 846;
  S2CDevilPos_ID = 847;

  C2SPartnerDelSkill_ID = 860;
  S2CPartnerDelSkill_ID = 861;
  C2SPartnerUpSkill_ID = 862;
  S2CPartnerUpSkill_ID = 863;
  S2CPartnerNewSkill_ID = 864;

  C2SPartnerBattlePosRobot_ID = 895;
  C2SGetPartner_ID = 896;
  S2CGetPartner_ID = 897;

  C2SAllRank_ID = 900;
  S2CAllRank_ID = 901;

  S2CTeamFightStateChange_ID = 906; //队伍状态变化

  S2CServerTime_ID = 1001;
  S2CServerAge_ID = 1002;

  C2SJJCList_ID = 1101;
  S2CJJCList_ID = 1102;
  C2SJJCFight_ID = 1103;
  S2CJJCFight_ID = 1104;
  C2SJJCBuyTimes_ID = 1105;
  S2CJJCBuyTimes_ID = 1106;
  C2SJJCGetBuyInfo_ID = 1107;
  S2CJJCGetBuyInfo_ID = 1108;
  C2SJJCSweep_ID = 1109;
  S2CJJCSweep_ID = 1110;

  C2SMultiBossInfo_ID = 1130;
  S2CMultiBossInfo_ID = 1111;
  C2SMultiBossStart_ID = 1112;
  S2CMultiBossStart_ID = 1113;
  C2SMultiBossCfg_ID = 1114;
  C2SMultiBossInspire_ID = 1115;
  S2CMultiBossInspire_ID = 1116;
  C2SMultiBossGetBuyInfo_ID = 1117;
  S2CMultiBossGetBuyInfo_ID = 1118;
  C2SMultiBossBuyTimes_ID = 1119;
  S2CMultiBossBuyTimes_ID = 1120;
  C2SMultiBossGetDamageLog_ID = 1121;
  S2CMultiBossGetDamageLog_ID = 1122;
  C2SMultiBossJoinScene_ID = 1123;
  S2CMultiBossJoinScene_ID = 1124;
  C2SMultiBossPlayerInBoss_ID = 1125;
  S2CMultiBossPlayerInBoss_ID = 1126;
  C2SMultiBossLeaveScene_ID = 1127;
  S2CMultiBossLeaveScene_ID = 1128;
  S2CMultiBossGetMyDamage_ID = 1129;

  C2SBossInspire_ID = 1150;
  S2CBossInspire_ID = 1151;

  /************************************************JS工具消息************************************************/
  J2SUserLogin_ID = 1200;
  J2SUserLogout_ID = 1201;
  S2JUserState_ID = 1202;
  J2SStartLogin_ID = 1203;

  /************************************************神装系统************************************************/
  C2SIntoSoulGradeUp_ID = 1351;
  S2CIntoSoulGradeUp_ID = 1352;
  C2SGodEquipAwake_ID = 1353;
  S2CGodEquipAwake_ID = 1354;
  C2SGodForge_ID = 1355;
  S2CGodForge_ID = 1356;
  C2SGodForgeSave_ID = 1357;
  S2CGodForgeSave_ID = 1358;
  C2SGodEquipMelt_ID = 1359;
  S2CGodEquipMelt_ID = 1360;

  /************************************************法宝系统************************************************/
  C2SCreatePrecious_ID = 1401;
  S2CCreatePrecious_ID = 1402;
  C2SMeltPrecious_ID = 1403;
  S2CMeltPrecious_ID = 1404;
  C2SWearPrecious_ID = 1405;
  S2CWearPrecious_ID = 1406;
  C2SLockPrecious_ID = 1407;
  S2CLockPrecious_ID = 1408;
  C2SGetPreciousPos_ID = 1409;
  S2CGetPreciousPos_ID = 1410;
  C2SPreciousForge_ID = 1411;
  S2CPreciousForge_ID = 1412;
  C2SPreciousEat_ID = 1413;
  S2CPreciousEat_ID = 1414;
  C2SPreciousSoul_ID = 1415;
  S2CPreciousSoul_ID = 1416;
  C2SPreciousSoulUp_ID = 1417;
  S2CPreciousSoulUp_ID = 1418;
  C2SPreciousGive_ID = 1419;
  S2CPreciousGive_ID = 1420;
  C2SCreatePreciousFast_ID = 1421;
  S2CCreatePreciousFast_ID = 1422;
  C2SPreciousRobot_ID = 1423;
  S2CPreciousRobot_ID = 1424;

  /************************************************活动类************************************************/
  C2SReviveLife_ID = 1501;
  S2CReviveLife_ID = 1502;
  C2SJoinActive_ID = 1507;
  S2CJoinActive_ID = 1508;
  C2SLeaveActive_ID = 1509;
  S2CLeaveActive_ID = 1510;
  C2SActTeamRecruit_ID = 1515;
  S2CActTeamRecruit_ID = 1516;
  K2SJoinFuncActiveHandleEvent_ID = 1517;
  C2STreatPlayer_ID = 1518;
  S2CTreatPlayer_ID = 1519;
  S2CTreatData_ID = 1520;

  C2SActCreateTeam_ID = 1527;
  S2CActCreateTeam_ID = 1528;
  C2SActFindTeams_ID = 1529;
  S2CActFindTeams_ID = 1530;
  C2SActJoinTeam_ID = 1531;
  S2CActJoinTeam_ID = 1532;
  C2SActFindTeam_ID = 1533;
  S2CActFindTeam_ID = 1534;
  ActTeamInfo_ID = 1535;
  ActTeamMemInfo_ID = 1536;
  C2SActNeedFightVal_ID = 1537;
  S2CActNeedFightVal_ID = 1538;

  C2SGetActTimestamp_ID = 1541;
  S2CGetActTimestamp_ID = 1542;

  S2CActStart_ID = 1561;
  S2CActOver_ID = 1565;
  S2CActIcon_ID = 1566;
  S2CActShowWindow_ID = 1567;

  ActPreReport_ID = 1568;
  S2CActStartPre_ID = 1569;
  S2CActOverPre_ID = 1570;
  S2CActList_ID = 1571;

  C2SActExitTeam_ID = 1576;
  S2CActExitTeam_ID = 1577;

  //寄售行
  C2SGetSendShopList_ID = 1601;
  S2CGetSendShopList_ID = 1602;
  C2SGetSendShopById_ID = 1603;
  S2CGetSendShopById_ID = 1604;
  C2SSendShopBuy_ID = 1605;
  S2CSendShopBuy_ID = 1606;
  C2SSendShopClear_ID = 1607;
  S2CSendShopClear_ID = 1608;
  C2SSendShopOnSale_ID = 1609;
  S2CSendShopOnSale_ID = 1610;
  C2SGetMySendShop_ID = 1611;
  S2CGetMySendShop_ID = 1612;
  C2SSaleLog_ID = 1613;
  S2CSaleLog_ID = 1614;
  C2SMarkSendShop_ID = 1615;
  S2CMarkSendShop_ID = 1616;
  S2KGetSendShopList_ID = 1617;
  S2KGetMySendShopList_ID = 1618;
  S2KSendShopPreBuy_ID = 1619;
  K2SSendShopPreBuy_ID = 1620;
  S2KSendShopBuy_ID = 1621;
  S2KSendShopClear_ID = 1623;
  K2SSendShopClear_ID = 1624;
  S2KSendShopOnSale_ID = 1625;
  S2KGetSaleLog_ID = 1626;
  C2SGetSendCfg_ID = 1627;
  S2CGetSendCfg_ID = 1628;
  C2SSendItem_ID = 1629;
  S2CSendItem_ID = 1630;
  C2SGetSendUserInfo_ID = 1631;
  S2CGetSendUserInfo_ID = 1632;
  K2SSendShopBuy_ID = 1633;
  //
  C2SGetDragonLog_ID = 1701;
  S2CGetDragonLog_ID = 1702;
  C2SStartFightDragon_ID = 1703;
  S2CStartFightDragon_ID = 1704;

  C2SShowItem_ID = 1801;
  S2CShowItem_ID = 1802;
  S2CReportShowItem_ID = 1803;
  C2SGetShowInfo_ID = 1804;
  S2CGetShowInfo_ID = 1805;
  S2KShowItem_ID = 1806;
  K2SAddBossGoodDrop_ID = 1807;
  K2SAllPlayerCheckSingleRed_ID = 1808;

  S2C81Info_ID = 1901;
  C2S81Sweep_ID = 1902;
  S2C81Sweep_ID = 1903;
  C2S81BuyBox_ID = 1904;
  S2C81BuyBox_ID = 1905;
  C2SViewInstance81Data_ID = 1906;
  S2CViewInstance81Data_ID = 1907;

  C2SGodClubSignUp_ID = 2101;
  S2CGodClubSignUp_ID = 2102;
  C2SGodClubFight_ID = 2103;
  S2CGodClubFight_ID = 2104;
  C2SGodClubFightReport_ID = 2105;
  S2CGodClubFightReport_ID = 2106;
  C2SGodClub16_ID = 2107;
  S2CGodClub16_ID = 2108;
  C2SGodClubStakeInfo_ID = 2109;
  S2CGodClubStakeInfo_ID = 2110;
  C2SGodClubStake_ID = 2111;
  S2CGodClubStake_ID = 2112;

  C2SEquipDuJin_ID = 2210; //装备镀金
  S2CEquipDuJin_ID = 2211;
  C2SEquipJingLian_ID = 2212; //装备精炼
  S2CEquipJingLian_ID = 2213;
  C2SEquipZhuHun_ID = 2214; //装备铸魂
  S2CEquipZhuHun_ID = 2215;
  C2SEquipZhuHunCancel_ID = 2216; //装备铸魂剥离
  S2CEquipZhuHunCancel_ID = 2217;


  C2STotemUnlock_ID = 2300; //宠物图腾解锁
  S2CTotemUnlock_ID = 2301;
  C2STotemPetChange_ID = 2302; //宠物图腾上下阵
  S2CTotemPetChange_ID = 2303;
  C2STotemHelpPetChange_ID = 2304; //外援宠物上下阵
  S2CTotemHelpPetChange_ID = 2305;
  S2CFamilyTotemPetsUpd_ID = 2306; //家族宠物池子更新
  C2STotemPetAutoChange_ID = 2307; //一键上阵 一键替换 一键下阵
  S2CTotemPetAutoChange_ID = 2308;
  C2STotemPetPassiveNotice_ID = 2309; //宠物被下阵图腾变化通知，已读
  S2CTotemPetPassiveNoticeStatus_ID = 2310; //宠物被下阵图腾变化通知状态
  S2CTotemPetPassiveNotice_ID = 2311; //宠物被下阵图腾变化通知
  C2STotemGearUp_ID = 2313; //宠物图腾附灵
  S2CTotemGearUp_ID = 2314;

  /************************************************阵法系统************************************************/
  C2SGetZF_ID = 3001;
  S2CGetZF_ID = 3002;
  C2SZFPetUp_ID = 3003;
  S2CZFPetUp_ID = 3004;
  C2SZFState_ID = 3005;
  S2CZFState_ID = 3006;
  C2SFuncOpen_ID = 3101;
  S2CFuncOpen_ID = 3102;
  C2SRobotZF_ID = 3103;
  C2SZFUnlock_ID = 3104;
  S2CZFUnlock_ID = 3105;

  /************************************************剑魂系统************************************************/
  C2SSwordSoulEquip_ID = 3201; //剑魂镶嵌
  S2CSwordSoulEquip_ID = 3202;
  C2SSwordSoulLvUp_ID = 3203; //剑魂升级
  S2CSwordSoulLvUp_ID = 3204;
  C2SSwordSoulResolve_ID = 3205; //剑魂分解
  S2CSwordSoulResolve_ID = 3206;
  C2SSwordSoulHeCheng_ID = 3207; //剑魂合成
  S2CSwordSoulHeCheng_ID = 3208;
  C2SSwordSoulStarUp_ID = 3209; //剑魂图录升星
  S2CSwordSoulStarUp_ID = 3210;
  C2SSwordSoulStarDown_ID = 3211; //剑魂图录降星
  S2CSwordSoulStarDown_ID = 3212;
  C2SSwordSoulStrength_ID = 3213; //剑魂图录大师激活
  S2CSwordSoulStrength_ID = 3214;
  C2SSwordSoulResolveQuality_ID = 3215; //保存分解品质
  S2CSwordSoulResolveQuality_ID = 3216;
  C2SSwordZhenActive_ID = 3217; //剑阵激活
  S2CSwordZhenActive_ID = 3218;
  C2SSwordZhenStar_ID = 3219; //剑阵升星
  S2CSwordZhenStar_ID = 3220;
  S2CSwordZhenData_ID = 3221; //剑阵数据
  C2SSwordSoulDisassemble_ID = 3222;
  S2CSwordSoulDisassemble_ID = 3223; //剑魂拆解
  C2SSwordZhenGradeUp_ID = 3224; //剑阵突破
  S2CSwordZhenGradeUp_ID = 3225;

  C2SItemLianHua_ID = 3300; //物品炼化
  S2CItemLianHua_ID = 3301;

  C2SListLianHua_ID = 3302; //炼化系统列表
  S2CListLianHua_ID = 3303;

  S2CUserPhotoBook_ID = 4101;
  C2SPhotoBookLevelUp_ID = 4102;
  S2CPhotoBookLevelUp_ID = 4103;
  C2SPhotoBookDel_ID = 4104;
  S2CPhotoBookDel_ID = 4105;
  C2SPhotoBookPrize_ID = 4106;
  S2CPhotoBookPrize_ID = 4107;
  C2SPhotoBookStrength_ID = 4108;
  S2CPhotoBookStrength_ID = 4109;

  S2KLoginSuccess_ID = 8001; //用户登录成功，用来发送一些跨服的数据
  K2SBattlefieldReport_ID = 8002; //战报
  K2SEnterMap_ID = 8003;
  S2KEnterMap_ID = 8004;
  S2KLeaveMap_ID = 8005;
  S2KLeaveInstanceTeam_ID = 8006;
  K2SAddItem_ID = 8007;
  K2SChangeAttr_ID = 8008; //修改用户属性
  S2KLogout_ID = 8009; //用户下线
  S2KPlayerData_ID = 8011;
  K2SUnlockSkin_ID = 8012;
  K2SDeleteSkin_ID = 8013;
  K2SMail_ID = 8014;
  K2SActState_ID = 8015; //修改活动状态
  S2KReviveLife_ID = 8017; //用户复活
  S2KWorldLevel_ID = 8018; //世界等级
  K2SAddRedPkg_ID = 8019; //添加红包
  C2SGetTeamList_ID = 8101; //获取跨服队伍列表
  S2CGetTeamList_ID = 8102; //获取跨服队伍列表返回
  C2SGetMemberList_ID = 8103; //获取队伍成员列表
  S2CGetMemberList_ID = 8104; //获取队伍成员列表返回
  S2KCrossChat_ID = 8105; // 跨服聊天
  K2SCrossChat_ID = 8106; // 跨服聊天
  K2SAddTmpTitle_ID = 8107; // 增加临时称号

  C2SJoinInstance_ID = 8108; //加入副本
  S2CJoinInstance_ID = 8109; //加入副本
  C2SLeaveInstance_ID = 8110;
  S2CLeaveInstance_ID = 8111;
  C2SKillInstance_ID = 8112;
  S2CKillInstance_ID = 8113;
  C2SStartInstance_ID = 8114;
  S2CStartInstance_ID = 8115;
  C2SLeaveInstanceCopy_ID = 8118;
  S2CLeaveInstanceCopy_ID = 8119;
  S2KCreateServerIds_ID = 8120; //通知跨服服务器，本服务器包含的用户createserverId

  K2SGetPlayerByLevel_ID = 8121; //通知跨服服务器，加载一个指定等级的用户

  S2KGetPlayerOtherInfo_ID = 8122; //获取跨服玩家的基础信息
  S2KTreatPlayer_ID = 8123;

  S2SServerInfo_ID = 9996;
  S2SServerPlayerHandle_ID = 9997;
  S2SResponseMsg_ID = 9998;
  S2SRequestMsg_ID = 9999;
  S2SServerPlayerPck_ID = 10000;

  /************************************************运营活动************************************************/
  C2SGoldTree_ID = 8201;
  S2CGoldTree_ID = 8202;
  C2SGetGoldTreeInfo_ID = 8203;
  S2CGetGoldTreeInfo_ID = 8204;

  S2CAllActivity_ID = 8300;
  S2CActivityStart_ID = 8301;
  S2CActivityEnd_ID = 8302;
  S2CActivityInit_ID = 8303;
  S2CActivityRedPoint_ID = 8304;
  S2CActivityData_ID = 8305;
  S2CActivityIcon_ID = 8306;
  S2CContinueRechargeTaskNum_ID = 8307;
  C2SActivityFreeTag_ID = 8308;
  S2CActivityFreeTag_ID = 8309;

  C2SGetActRechargeTurntabInfo_ID = 8310;
  S2CGetActRechargeTurntabInfo_ID = 8311;
  C2SActRechargeTurntabItem_ID = 8312;
  S2CActRechargeTurntabItem_ID = 8313;
  C2SActRechargeTurntabReward_ID = 8314;
  S2CActRechargeTurntabReward_ID = 8315;
  C2SGetRechargeTurntabLog_ID = 8316;
  S2CGetRechargeTurntabLog_ID = 8317;

  C2SBuyDrawItem_ID = 11001;
  S2CBuyDrawItem_ID = 11002;
  C2SDraw_ID = 11003;
  S2CDraw_ID = 11004;
  C2SGetDrawLog_ID = 11005;
  S2CGetDrawLog_ID = 11006;
  C2SGetDrawData_ID = 11007;
  S2CGetDrawData_ID = 11008;
  C2SPlayerDrawData_ID = 11009;
  S2CPlayerDrawData_ID = 11010;
  C2SGetDrawListRate_ID = 11011;
  S2CGetDrawListRate_ID = 11012;

  C2SGetActTurntabInfo_ID = 11021;
  S2CGetActTurntabInfo_ID = 11022;
  C2SGetActTurntabData_ID = 11023;
  S2CGetActTurntabData_ID = 11024;
  C2SActTurntabDraw_ID = 11025;
  S2CActTurntabDraw_ID = 11026;
  C2SGeTurntabDrawLog_ID = 11027;
  S2CGetTurntabDrawLog_ID = 11028;
  C2SActXunBaoJump_ID = 11029;
  S2CActXunBaoJump_ID = 11030;
  C2SGetActXunBaoInfo_ID = 11031;
  S2CGetActXunBaoInfo_ID = 11032;
  C2SGetActXunBaoData_ID = 11033;
  S2CGetActXunBaoData_ID = 11034;
  C2SActXunBaoDraw_ID = 11035;
  S2CActXunBaoDraw_ID = 11036;
  C2SGetXunBaoLog_ID = 11037;
  S2CGetXunBaoLog_ID = 11038;
  C2SActXunBaoScoreDraw_ID = 11039;
  S2CActXunBaoScoreDraw_ID = 11040;
  C2SActXunBaoAllTake_ID = 11041;
  S2CActXunBaoAllTake_ID = 11042;
  C2SGetXunBaoScoreLog_ID = 11043;
  S2CGetXunBaoScoreLog_ID = 11044;
  C2SGetActXunBaoExchangeData_ID = 11045;
  S2CGetActXunBaoExchangeData_ID = 11046;
  C2SActXunBaoExchange_ID = 11047;
  S2CActXunBaoExchange_ID = 11048;
  C2SActXunBaoExchangeFocus_ID = 11049;
  S2CActXunBaoExchangeFocus_ID = 11050;

  C2SGetScoreXunBaoData_ID = 11051;
  S2CGetScoreXunBaoData_ID = 11052;
  C2SReceiveActReachReward_ID = 11053;
  S2CReceiveActReachReward_ID = 11054;
  C2SGetRankPlayerData_ID = 11055;
  S2CGetRankPlayerData_ID = 11056;
  C2SGetWorshipPlayerData_ID = 11057;
  S2CGetWorshipPlayerData_ID = 11058;
  C2SActWorship_ID = 11059;
  S2CActWorship_ID = 11060;
  C2SRecvStepReward_ID = 11061;
  S2CRecvStepReward_ID = 11062;
  C2SGetWorshipGiftPlayerData_ID = 11063;
  S2CGetWorshipGiftPlayerData_ID = 11064;
  C2SGetWorshipRecord_ID = 11065;
  S2CGetWorshipRecord_ID = 11066;

  C2SPlayDice_ID = 11067;
  S2CPlayDice_ID = 11068;
  C2SDoPlayDice_ID = 11069;
  S2CDoPlayDice_ID = 11070;
  C2SPlayDiceGift_ID = 11071;
  S2CPlayDiceGift_ID = 11072;
  C2SReceiveFloorReward_ID = 11073;
  S2CReceiveFloorReward_ID = 11074;

  C2SRuinsPlayerData_ID = 11075;
  S2CRuinsPlayerData_ID = 11076;
  C2SSelectGrid_ID = 11077;
  S2CSelectGrid_ID = 11078;
  C2SGetLeftGird_ID = 11079;
  S2CGetLeftGird_ID = 11080;
  C2SSelectReward_ID = 11081;
  S2CSelectReward_ID = 11082;
  C2SFilterRewards_ID = 11083;
  S2CFilterRewards_ID = 11084;
  S2CUpdateAmount_ID = 11086;

  C2SGetWishXunBaoData_ID = 11087;
  S2CGetWishXunBaoData_ID = 11088;
  C2SGetWishList_ID = 11089;
  S2CGetWishList_ID = 11090;
  C2SSelectWishReward_ID = 11091;
  S2CSelectWishReward_ID = 11092;

  C2SGetDragonXunBaoData_ID = 11093;
  S2CGetDragonXunBaoData_ID = 11094;
  C2SDragonXBBuyTimes_ID = 11095;
  S2CDragonXBBuyTimes_ID = 11096;
  C2SDragonChangeHotState_ID = 11097;
  S2CDragonChangeHotState_ID = 11098;

  C2SGetActBossInfo_ID = 11101;
  S2CGetActBossInfo_ID = 11102;
  C2SFightActBoss_ID = 11103;
  S2CFightActBoss_ID = 11104;
  C2SGetActBossPrize_ID = 11105;
  S2CGetActBossPrize_ID = 11106;
  C2SPlayerBossInfo_ID = 11107;
  S2CPlayerBossInfo_ID = 11108;

  C2SGetWishGiftData_ID = 11121;
  S2CGetWishGiftData_ID = 11122;
  C2SReceiveWishGift_ID = 11123;
  S2CReceiveWishGift_ID = 11124;

  C2SGetChargeReturnData_ID = 11150;
  S2CGetChargeReturnData_ID = 11151;
  C2SPlayerChargeReturnData_ID = 11152;
  S2CPlayerChargeReturnData_ID = 11153;
  C2SChargeReturn_ID = 11154;
  S2CChargeReturn_ID = 11155;
  C2SGetChargeReturnLog_ID = 11156;
  S2CGetChargeReturnLog_ID = 11157;
  C2SChargeReturnReceivePrize_ID = 11158;
  S2CChargeReturnReceivePrize_ID = 11159;

  C2SGetActDareBossInfo_ID = 11201;
  S2CGetActDareBossInfo_ID = 11202;
  C2SFightActDareBoss_ID = 11203;
  S2CFightActDareBoss_ID = 11204;
  C2SGetActDareBossPrize_ID = 11205;
  S2CGetActDareBossPrize_ID = 11206;
  C2SPlayerDareBossInfo_ID = 11207;
  S2CPlayerDareBossInfo_ID = 11208;
  C2SPlayerDareState_ID = 11209;
  S2CPlayerDareState_ID = 11210;
  C2SPlayerDareIsOpen_ID = 11211;
  S2CPlayerDareIsOpen_ID = 11212;

  C2SGetSignActPlayerData_ID = 11301;
  S2CGetSignActPlayerData_ID = 11302;

  C2SGetActShopList_ID = 12001;
  S2CGetActShopList_ID = 12002;
  C2SActShopBuy_ID = 12003;
  S2CActShopBuy_ID = 12004;

  C2SGetActGiftList_ID = 12005;
  S2CGetActGiftList_ID = 12006;
  C2SActGiftBuy_ID = 12007;
  S2CActGiftBuy_ID = 12008;
  C2SGetActGiftNewList_ID = 12009;
  S2CGetActGiftNewList_ID = 12010;
  C2SActGiftNewReceive_ID = 12011;
  S2CActGiftNewReceive_ID = 12012;

  C2SActShopHideRed_ID = 12013;
  S2CActShopUnionBuy_ID = 12014;
  C2SActRechargeShopHideRed_ID = 12015;

  C2SGetActLiangYuanState_ID = 12021;
  S2CGetActLiangYuanState_ID = 12022;
  C2SActLiangYuanReceive_ID = 12023;
  S2CActLiangYuanReceive_ID = 12024;
  C2SGetActLiangYuanLog_ID = 12025;
  S2CGetActLiangYuanLog_ID = 12026;

  C2SGetActYiJiTanBaoInfo_ID = 12031;
  S2CGetActYiJiTanBaoInfo_ID = 12032;
  C2SActYiJiTanBaoDice_ID = 12033;
  S2CActYiJiTanBaoDice_ID = 12034;
  C2SActYiJiTanBaoGetAllPrize_ID = 12035;
  S2CActYiJiTanBaoGetAllPrize_ID = 12036;

  C2SGetChargeMallList_ID = 12101;
  S2CGetChargeMallList_ID = 12102;
  C2SChargeMallBuy_ID = 12103;
  S2CChargeMallBuy_ID = 12104;
  S2CPayNotify_ID = 12105;
  S2CVipService_ID = 12106;

  C2SGetActTask_ID = 12151;
  S2CGetActTask_ID = 12152;
  S2CGetFirstRechargeTask_ID = 12153;
  C2SActTaskOneKeyFinish_ID = 12154;
  S2CActTaskOneKeyFinish_ID = 12155;

  C2SGetGodTowerActTaskDay_ID = 12161;
  S2CGetGodTowerActTaskDay_ID = 12162;

  C2SGetInvestInfo_ID = 12201;
  S2CGetInvestInfo_ID = 12202;
  C2SBuyInvest_ID = 12203;
  S2CBuyInvest_ID = 12204;
  C2SPlayerInvestData_ID = 12205;
  S2CPlayerInvestData_ID = 12206;
  C2SActInvestHideRed_ID = 12207;

  C2SGetActRankInfo_ID = 12301;
  S2CGetActRankInfo_ID = 12302;
  C2SGetActRankData_ID = 12303;
  S2CGetActRankData_ID = 12304;
  C2SGetActRankEndData_ID = 12305;
  S2CGetActRankEndData_ID = 12306;
  C2SGetActRankEndDataN_ID = 12307;
  S2CGetActRankEndDataN_ID = 12308;
  //    C2SGetTomorrowRankActId_ID = 12307;
  //    S2CGetTomorrowRankActId_ID = 12308;

  C2SGetActPicture_ID = 12350;
  S2CGetActPicture_ID = 12351;
  C2SActPictureLight_ID = 12352;
  S2CActPictureLight_ID = 12353;

  C2SRedeemCode_ID = 12401;
  S2CRedeemCode_ID = 12402;

  //当前悬赏boss信息
  C2SXuanShangBossInfo_ID = 12451;
  S2CXuanShangBossInfo_ID = 12452;
  //购买讨伐次数
  C2SXuanShangBossBuyTimes_ID = 12453;
  S2CXuanShangBossBuyTimes_ID = 12454;
  //刷新悬赏boss（提品）
  C2SXuanShangBossRefresh_ID = 12455;
  S2CXuanShangBossRefresh_ID = 12456;
  //接取悬赏
  C2SXuanShangBossAccept_ID = 12457;
  S2CXuanShangBossAccept_ID = 12458;
  //进入场景
  C2SXuanShangBossJoinScene_ID = 12459;
  S2CXuanShangBossJoinScene_ID = 12460;
  //召唤帮手
  C2SXuanShangBossCallHelp_ID = 12461;
  S2CXuanShangBossCallHelp_ID = 12462;
  //放弃任务
  C2SXuanShangBossGiveUp_ID = 12463;
  S2CXuanShangBossGiveUp_ID = 12464;
  //悬赏结果(放弃任务、倒计时结束、战斗胜利时发送，发送后会再次发送S2CXuanShangBossInfd包）
  S2CXuanShangResult_ID = 12465;
  //领取积分奖励
  C2SXuanShangBossScoreReward_ID = 12466;
  S2CXuanShangBossScoreReward_ID = 12467;
  //怪物信息
  S2CXuanShangMonsterData_ID = 12469;

  S2CAllGodItem_ID = 13000;
  C2SUnlockGodItem_ID = 13001;
  S2CUnlockGodItem_ID = 13002;
  C2SGodItemLevelUp_ID = 13003;
  S2CGodItemLevelUp_ID = 13004;
  C2SGodItemSoulUp_ID = 13005;
  S2CGodItemSoulUp_ID = 13006;
  C2SGodItemSoul2Up_ID = 13007;
  S2CGodItemSoul2Up_ID = 13008;
  C2SGodItemSoul2SkillUp_ID = 13009;
  S2CGodItemSoul2SkillUp_ID = 13010;
  C2SGodItemSoul3Up_ID = 13011;
  S2CGodItemSoul3Up_ID = 13012;
  C2SGodItemForge_ID = 13013;
  S2CGodItemForge_ID = 13014;
  C2SGodItemForgeSave_ID = 13015;
  S2CGodItemForgeSave_ID = 13016;
  C2SGodItemSoul4Up_ID = 13017;
  S2CGodItemSoul4Up_ID = 13018;
  C2SGodItemStoneUp_ID = 13019;
  S2CGodItemStoneUp_ID = 13020;
  C2SGodItemStoneCut_ID = 13021;
  S2CGodItemStoneCut_ID = 13022;

  C2SKingState_ID = 14000;
  S2CKingState_ID = 14001;
  C2SKingMatch_ID = 14002;
  S2CKingMatch_ID = 14003;
  C2SKingFight_ID = 14004;
  S2CKingFight_ID = 14005;
  C2SKingRank_ID = 14006;
  S2CKingRank_ID = 14007;
  C2SKingPlayer_ID = 14010;
  S2CKingPlayer_ID = 14011;
  C2SKingBuyTimes_ID = 14012;
  S2CKingBuyTimes_ID = 14013;
  C2SKingInfo_ID = 14014;
  S2CKingInfo_ID = 14015;
  C2SKingRespect_ID = 14016;
  S2CKingRespect_ID = 14017;

  S2CWorldBossRank5_ID = 15001;
  S2CActWorldBossSettlement_ID = 15002;
  K2SWorldBossKillData_ID = 15003;
  C2SGetWorldBossKillData_ID = 15004;
  S2CGetWorldBossKillData_ID = 15006;
  S2CBossRefreshTime_ID = 15007;
  C2SGetWorldBossRank_ID = 15008;
  S2CGetWorldBossRank_ID = 15009;

  S2CWorldBossOwner_ID = 15010;
  S2CWorldBossReachGoalPrize_ID = 15011;
  C2SWorldBossReachGoalGetPrize_ID = 15012;
  S2CWorldBossReachGoalGetPrize_ID = 15013;
  S2CWorldBossBreakShieldInfo_ID = 15014;
  C2SWorldBossStakePoints_ID = 15015;
  S2CWorldBossStakePoints_ID = 15016;
  S2CWorldBossLevel_ID = 15017;
  S2CWorldBossEnd_ID = 15018;
  S2CWorldBossCloseScene_ID = 15019;

  S2CHomeBossInfo_ID = 15030;
  C2SBossHomeJoinScene_ID = 15031;
  S2CBossHomeJoinScene_ID = 15032;
  C2SBossHomeLeaveScene_ID = 15033;
  S2CBossHomeLeaveScene_ID = 15034;
  S2CHomeBossDamageRank_ID = 15035;
  S2CHomeBossDamageMy_ID = 15036;
  S2CHomeBossOwner_ID = 15037;
  C2SHomeBossBuyBodyPower_ID = 15038;
  S2CHomeBossBodyPower_ID = 15039;
  S2CHomeBossTempBagAdd_ID = 15040;
  C2SHomeBossReceiveTempBag_ID = 15041;
  S2CHomeBossReceiveTempBag_ID = 15042;
  C2SBossHomeCfg_ID = 15043;
  C2SHomeBossAutoBuy_ID = 15044;
  S2CHomeBossAutoBuy_ID = 15045;
  K2SBossHomeBodyPowerNotEnough_ID = 15046;
  K2SDropHLXXItem_ID = 15047;
  S2CHomeBossIfUseBodyPower_ID = 15048;
  C2SHomeBossIfUseBodyPower_ID = 15049;
  C2SHomeBossGetTempBag_ID = 15050;
  S2CHomeBossGetTempBag_ID = 15051;

  C2SWordsWear_ID = 16001;
  S2CWordsWear_ID = 16002;
  C2SWordsStick_ID = 16003;
  S2CWordsStick_ID = 16004;

  C2SGodHerbEnter_ID = 17001;
  S2CGodHerbEnter_ID = 17002;
  C2SGodHerbRefresh_ID = 17003;
  S2CGodHerbRefresh_ID = 17004;
  C2SGodHerbCollect_ID = 17005;
  S2CGodHerbCollect_ID = 17006;
  C2SGetGodHerbLog_ID = 17007;
  S2CGetGodHerbLog_ID = 17008;

  S2CRobberyInfo_ID = 17101;
  C2SGetRobberyData_ID = 17102;
  S2CGetRobberyData_ID = 17103;
  C2SRobbery_ID = 17104;
  S2CRobbery_ID = 17105;
  C2SRobberyLuck_ID = 17106;
  S2CRobberyLuck_ID = 17107;
  C2SGetRobberyLog_ID = 17108;
  S2CGetRobberyLog_ID = 17109;

  C2SDevilSoulPos_ID = 17202;
  S2CDevilSoulPos_ID = 17203;
  C2SDevilSoulLevelUp_ID = 17204;
  S2CDevilSoulLevelUp_ID = 17205;
  C2SDevilSoulStarUp_ID = 17206;
  S2CDevilSoulStarUp_ID = 17207;
  C2SDevilSoulDel_ID = 17208;
  S2CDevilSoulDel_ID = 17209;
  C2SDevilSoulAuto_ID = 17210;
  S2CDevilSoulAuto_ID = 17211;

  C2SBuyChargeGift_ID = 17300;
  S2CBuyChargeGift_ID = 17301;
  S2CAllChargeGift_ID = 17302;

  /*****************新版宠物***************/
  C2SAllPet2_ID = 18001;
  S2CAllPet2_ID = 18002;
  C2SPet2LevelUp_ID = 18003;
  S2CPet2LevelUp_ID = 18004;
  C2SPet2TalentUp_ID = 18005;
  S2CPet2TalentUp_ID = 18006;
  C2SPet2GrowUp_ID = 18007;
  S2CPet2GrowUp_ID = 18008;
  C2SPet2GiveUp_ID = 18009;
  S2CPet2GiveUp_ID = 18010;
  C2SPet2Lock_ID = 18011;
  S2CPet2Lock_ID = 18012;
  C2SPet2Compose_ID = 18013;
  S2CPet2Compose_ID = 18014;
  C2SPet2Reborn_ID = 18015;
  S2CPet2Reborn_ID = 18016;
  C2SPet2Nick_ID = 18017;
  S2CPet2Nick_ID = 18018;
  C2SPet2BattlePos_ID = 18019;
  S2CPet2BattlePos_ID = 18020;
  C2SPet2SkillBook_ID = 18021;
  S2CPet2SkillBook_ID = 18022;
  C2SPet2Reset_ID = 18023;
  S2CPet2Reset_ID = 18024;
  C2SBatchPet2GiveUp_ID = 18025;
  S2CBatchPet2GiveUp_ID = 18026;
  C2SPet2UnDevour_ID = 18027;
  S2CPet2UnDevour_ID = 18028;
  S2CUnlockNewPet2_ID = 18030;
  C2SStickPet2_ID = 18031;
  C2SPet2Info_ID = 18033;
  S2CPet2Info_ID = 18034;
  C2SRemPet2Mark_ID = 18035;
  S2CRemPet2Mark_ID = 18036;
  C2SPet2Exchange_ID = 18039;
  S2CPet2Exchange_ID = 18040;
  C2SGetRandSysPet2_ID = 18041;
  S2CGetRandSysPet2_ID = 18042;
  C2SGetPet2Chip_ID = 18043;
  S2CGetPet2Chip_ID = 18044;
  C2SPet2RaiseUp_ID = 18045;
  S2CPet2RaiseUp_ID = 18046;
  C2SPet2SkillLock_ID = 18047;
  S2CPet2SkillLock_ID = 18048;
  C2SPet2Devour_ID = 18049;
  S2CPet2Devour_ID = 18050;
  C2SRetrieveSkill_ID = 18051;
  S2CRetrieveSkill_ID = 18052;
  C2SOneKeyPet2Devour_ID = 18053;
  S2COneKeyPet2Devour_ID = 18054;
  C2SPetAwaken_ID = 18055;
  S2CPetAwaken_ID = 18056;
  C2SPetAwakenBack_ID = 18057;
  S2CPetAwakenBack_ID = 18058;
  C2SPetExchange_ID = 18059;
  S2CPetExchange_ID = 18060;
  C2SPetAwakenBackPets_ID = 18061;
  S2CPetAwakenBackPets_ID = 18062;
  C2SPetEvolution_ID = 18063;
  S2CPetEvolution_ID = 18064;

  /**************宠物装备***************/
  C2SPetEquipBuild_ID = 18101;
  S2CPetEquipBuild_ID = 18102;
  C2SPetEquipStarUp_ID = 18103;
  S2CPetEquipStarUp_ID = 18104;
  C2SPetEquipQualityUp_ID = 18105;
  S2CPetEquipQualityUp_ID = 18106;
  C2SPetEquipSmelt_ID = 18107;
  S2CPetEquipSmelt_ID = 18108;
  C2SPetEquipWear_ID = 18109;
  S2CPetEquipWear_ID = 18110;
  C2SPetEquipTakeOff_ID = 18111;
  S2CPetEquipTakeOff_ID = 18112;
  C2SPetEquipOneKeyWear_ID = 18113;
  S2CPetEquipOneKeyWear_ID = 18114;
  C2SPetEquipOneKeyTakeOff_ID = 18115;
  S2CPetEquipOneKeyTakeOff_ID = 18116;
  C2SPetEquipExchangeWear_ID = 18117;
  S2CPetEquipExchangeWear_ID = 18118;
  C2SPetEquipSaveInfo_ID = 18119;
  S2CPetEquipSaveInfo_ID = 18120;
  C2SPetEquipLock_ID = 18121;
  S2CPetEquipLock_ID = 18122;
  S2CPetEquipFly_ID = 18123;

  /*****************仙宗***************/
  C2SSectReName_ID = 19001;
  S2CSectReName_ID = 19002;
  C2SEditSectNote_ID = 19003;
  S2CEditSectNote_ID = 19004;
  C2SRecvSectReward_ID = 19005;
  S2CRecvSectReward_ID = 19006;
  C2SWorship_ID = 19007;
  S2CWorship_ID = 19008;
  C2STribute_ID = 19009;
  S2CTribute_ID = 19010;
  C2SSectMembers_ID = 19011;
  S2CSectMembers_ID = 19012;
  C2SLevelSectSkill_ID = 19013;
  S2CLevelSectSkill_ID = 19014;
  C2SSectInfo_ID = 19015;
  S2CSectInfo_ID = 19016;
  C2SJoinSect_ID = 19019;
  S2CJoinSect_ID = 19020;
  C2SLevelSectSkillMaster_ID = 19021;
  S2CLevelSectSkillMaster_ID = 19022;
  C2SSectChallengeBoss_ID = 19023;
  S2CSectChallengeBoss_ID = 19024;
  C2SSectChallengeLeader_ID = 19025;
  S2CSectChallengeLeader_ID = 19026;
  C2SSectFightReports_ID = 19027;
  S2CSectFightReports_ID = 19028;
  C2SSectPlayerFightReport_ID = 19029;
  S2CSectPlayerFightReport_ID = 19030;
  C2SSectLeaderFightRank_ID = 19031;
  S2CSectLeaderFightRank_ID = 19032;
  C2SSectLeaderFightMyRank_ID = 19033;
  S2CSectLeaderFightMyRank_ID = 19034;
  C2SSectActStartTime_ID = 19035;
  S2CSectActStartTime_ID = 19036;
  C2SSectJobRank_ID = 19037;
  S2CSectJobRank_ID = 19038;
  C2SSectCandidate_ID = 19039;
  S2CSectCandidate_ID = 19040;

  /**********************仙宗神兽********************/
  C2SSectGodAnimalInfo_ID = 19041;
  S2CSectGodAnimalInfo_ID = 19042;
  C2SSectGodAnimalData_ID = 19043;
  S2CSectGodAnimalData_ID = 19044;
  C2SChallengeGodAnimal_ID = 19045;
  S2CChallengeGodAnimal_ID = 19046;
  C2SGodAnimalInvite_ID = 19047;
  S2CGodAnimalInvite_ID = 19048;
  C2SGodAnimalPassData_ID = 19049;
  S2CGodAnimalPassData_ID = 19050;
  C2SGodAnimalPassRecord_ID = 19051;
  S2CGodAnimalPassRecord_ID = 19052;
  C2SSectPrestigeLevelUp_ID = 19053;
  S2CSectPrestigeLevelUp_ID = 19054;
  C2SSectPrestigeRecv_ID = 19055;
  S2CSectPrestigeRecv_ID = 19056;
  C2SSectIMSeize_ID = 19057;
  S2CSectIMSeize_ID = 19058;
  S2CSectIMSeizeReward_ID = 19060;
  C2SSectIMGiveUp_ID = 19061;
  S2CSectIMGiveUp_ID = 19062;
  C2SGetAllIMInfo_ID = 19063;
  S2CGetAllIMInfo_ID = 19064;
  C2SClearIMFightCD_ID = 19065;
  S2CClearIMFightCD_ID = 19066;
  C2SSectIMMyPos_ID = 19067;
  S2CSectImMyPos_ID = 19068;
  S2CSectIMSeizeNotice_ID = 19070;
  S2CIMPlayerChange_ID = 19072;
  C2SEnterAnimalPark_ID = 19073;
  S2CEnterAnimalPark_ID = 19074;
  C2SLeaveAnimalPark_ID = 19075;
  S2CLeaveAnimalPark_ID = 19076;
  C2SSearchPet_ID = 19077;
  S2CSearchPet_ID = 19078;
  S2CSearchRecord_ID = 19079;
  S2CGodAnimalTimestamp_ID = 19080;
  S2CCollapseNotice_ID = 19082;
  S2CPushAnimalParkBuff_ID = 19084;
  C2SAnimalParkGO_ID = 19085;
  S2CAnimalParkGO_ID = 19086;
  S2CAnimalParkCatch_ID = 19088;
  C2SGroupInfo_ID = 19089;
  S2CGroupInfo_ID = 19090;
  C2SFightBoss_ID = 19091;
  S2CFightBoss_ID = 19092;
  C2SFightBossClearCD_ID = 19093;
  S2CFightBossClearCD_ID = 19094;
  S2CAnimalParkCatchTips_ID = 19096;
  C2SBestPetRecord_ID = 19097;
  S2CBestPetRecord_ID = 19098;
  C2SAutoSearch_ID = 19099;
  S2CAutoSearch_ID = 19100;
  C2SSectSetSymbolId_ID = 19101;
  S2CSectSetSymbolId_ID = 19102;
  C2SSectMembersInfo_ID = 19103;
  S2CSectMembersInfo_ID = 19104;
  C2SSectMembers2_ID = 19105;
  S2CSectMembers2_ID = 19106;

  C2SEnterCrossPasture_ID = 19201;
  S2CEnterCrossPasture_ID = 19202;
  C2SLeaveCrossPasture_ID = 19203;
  S2CLeaveCrossPasture_ID = 19204;
  C2SUseTrap_ID = 19205;
  S2CUseTrap_ID = 19206;
  C2SCatchCrossPet_ID = 19207;
  S2CCatchCrossPet_ID = 19208;
  C2SFightSectCrossBoss_ID = 19209;
  S2CFightSectCrossBoss_ID = 19210;
  C2SSectCrossBossRank_ID = 19211;
  S2CSectCrossBossRank_ID = 19212;
  C2SSectCrossBossBox_ID = 19213;
  S2CSectCrossBossBox_ID = 19214;
  C2SOpenBoxTimestamp_ID = 19215;
  S2COpenBoxTimestamp_ID = 19216;
  S2CCrossPastureTrapList_ID = 19218;
  C2SSectCrossFightPVP_ID = 19219;
  S2CSectCrossFightPVP_ID = 19220;
  C2SReceiveBoxReward_ID = 19221;
  S2CReceiveBoxReward_ID = 19222;
  C2SCatchRecord_ID = 19223;
  S2CCatchRecord_ID = 19224;
  S2CDelExpireTraps_ID = 19226;
  C2SFightBossTimes_ID = 19227;
  S2CFightBossTimes_ID = 19228;
  S2CSectCrossSeizePets_ID = 19230;
  C2SPickUpPetStart_ID = 19231;
  S2CPickUpPetStart_ID = 19232;
  C2SPickUpPetEnd_ID = 19233;
  S2CPickUpPetEnd_ID = 19234;
  C2SSeizePetChoice_ID = 19235;
  S2CSeizePetChoice_ID = 19236;
  S2CSeizePetCanChoice_ID = 19238;
  C2SAutoCatch_ID = 19239;
  S2CAutoCatch_ID = 19240;
  C2SSeizeRecord_ID = 19241;
  S2CSeizeRecord_ID = 19242;
  S2CTrapPet_ID = 19244;
  S2CPlayerProgressBar_ID = 19246;
  C2SFightCrossBossClearCD_ID = 19247;
  S2CFightCrossBossClearCD_ID = 19248;
  C2SProgressBarBreak_ID = 19249;
  S2CProgressBarBreak_ID = 19250;

  /*****************家族***************/
  C2SFamilyInfo_ID = 20001;
  S2CFamilyInfo_ID = 20002;
  C2SFamilyList_ID = 20003;
  S2CFamilyList_ID = 20004;
  C2SFamilyCreate_ID = 20005;
  S2CFamilyCreate_ID = 20006;
  C2SFamilyJoin_ID = 20007;
  S2CFamilyJoin_ID = 20008;
  C2SFamilyLeave_ID = 20009;
  S2CFamilyLeave_ID = 20010;
  C2SFamilyDel_ID = 20011;
  S2CFamilyDel_ID = 20012;
  C2SFamilyChangePos_ID = 20013;
  S2CFamilyChangePos_ID = 20014;
  C2SFamilyAccuse_ID = 20015;
  S2CFamilyAccuse_ID = 20016;
  C2SFamilyLevelPrizeInfo_ID = 20017;
  S2CFamilyLevelPrizeInfo_ID = 20018;
  C2SFamilyGetLevelPrize_ID = 20019;
  S2CFamilyGetLevelPrize_ID = 20020;
  C2SFamilyDonate_ID = 20021;
  S2CFamilyDonate_ID = 20022;
  S2CFamilyGetOut_ID = 20023;
  C2SApplyJoin_ID = 20024;
  S2CApplyJoin_ID = 20025;
  C2SAgreeJoin_ID = 20026;
  S2CAgreeJoin_ID = 20027;
  C2SFamilyChangeName_ID = 20028;
  S2CFamilyChangeName_ID = 20029;
  C2SFamilyChangeSymbol_ID = 20030;
  S2CFamilyChangeSymbol_ID = 20031;
  C2SFamilyChangeAutoAgree_ID = 20032;
  S2CFamilyChangeAutoAgree_ID = 20033;

  C2SFamilyChangeHalo_ID = 20034;
  S2CFamilyChangeHalo_ID = 20035;
  C2SFamilyConfirmHalo_ID = 20036;
  S2CFamilyConfirmHalo_ID = 20037;
  C2SFamilyDonateRemainTimes_ID = 20038;
  S2CFamilyDonateRemainTimes_ID = 20039;

  /******************小红点********************/
  S2CRedState_ID = 21001;

  /*******************境界**********************************************************/
  S2CPlayerRealm_ID = 22001;
  C2SOpenRealmSystem_ID = 22002;
  S2COpenRealmSystem_ID = 22003;
  C2SRealmOverfulfil_ID = 22004;
  S2CRealmOverfulfil_ID = 22005;
  C2SGetRealmPrizeInfo_ID = 22006;
  S2CGetRealmPrizeInfo_ID = 22007;
  C2SGetRealmTargetPrize_ID = 22008;
  S2CGetRealmTargetPrize_ID = 22009;
  C2SGetRealmDayPrize_ID = 22010;
  S2CGetRealmDayPrize_ID = 22011;
  C2SRealmTask_ID = 22012;
  S2CRealmTask_ID = 22013;

  /********************转生*************************/
  C2SRebornUp_ID = 22101;
  S2CRebornUp_ID = 22102;
  C2SRebornPill_ID = 22103;
  S2CRebornPill_ID = 22104;
  C2SRebornPillStick_ID = 22105;
  S2CRebornPillStick_ID = 22106;

  /********************挂机*************************/
  C2SAFKGetBuyInfo_ID = 22151;
  S2CAFKGetBuyInfo_ID = 22152;
  C2SAFKBuyTimes_ID = 22153;
  S2CAFKBuyTimes_ID = 22154;
  C2SGetAFKPrize_ID = 22155;
  S2CGetAFKPrize_ID = 22156;
  /********************仙丹*************************/
  C2SDrugUse_ID = 22201;
  S2CDrugUse_ID = 22202;
  C2SDrugStick_ID = 22203;
  S2CDrugStick_ID = 22204;

  /********************神丹*************************/
  C2SPlayerGoldDrugGradeUp_ID = 22251;
  S2CPlayerGoldDrugGradeUp_ID = 22252;
  C2SPlayerGetAllGoldDrug_ID = 22253;
  S2CPlayerGetAllGoldDrug_ID = 22254;

  /********************福利大厅*************************/
  S2CSignData_ID = 22301;
  C2SSign_ID = 22302;
  S2CSign_ID = 22303;
  C2SMakeUpSign_ID = 22304;
  S2CMakeUpSign_ID = 22305;
  C2STotalSignPrize_ID = 22306;
  S2CTotalSignPrize_ID = 22307;
  C2SSignSecond_ID = 22308;
  /********************特权卡*************************/
  C2SWeekCardDayPrize_ID = 22401;
  S2CWeekCardDayPrize_ID = 22402;
  C2SMonthCardDayPrize_ID = 22403;
  S2CMonthCardDayPrize_ID = 22404;
  C2SLifeCardDayPrize_ID = 22405;
  S2CLifeCardDayPrize_ID = 22406;
  C2SOpenCard_ID = 22407;

  /********************仙界宝藏*************************/
  C2SFairyTreasureEnter_ID = 22501;
  S2CFairyTreasureEnter_ID = 22502;
  C2SFairyTreasureLeave_ID = 22503;
  S2CFairyTreasureLeave_ID = 22504;
  C2SGetDigTreasurePoint_ID = 22505;
  S2CGetDigTreasurePoint_ID = 22506;
  C2SDigTreasure_ID = 22507;
  S2CDigTreasure_ID = 22508;
  C2SGetDigTreasureLog_ID = 22509;
  S2CGetDigTreasureLog_ID = 22510;
  C2SDigTreasureFight_ID = 22511;
  S2CDigTreasureFight_ID = 22512;
  C2SDigTreasure10Times_ID = 22513;
  S2CDigTreasure10Times_ID = 22514;
  //    /********************宝石之塔*************************/
  //    C2SGemTowerEnter_ID = 22521;
  //    S2CGemTowerEnter_ID = 22522;
  //    C2SGemTowerLeave_ID = 22523;
  //    S2CGemTowerLeave_ID = 22524;
  //    C2SGemTowerFight_ID = 22525;
  //    S2CGemTowerFight_ID = 22526;
  //    C2SGemTowerNextLayer_ID = 22527;
  //    S2CGemTowerNextLayer_ID = 22528;
  //    C2SGemTowerGetSepPrize_ID = 22529;
  //    S2CGemTowerGetSepPrize_ID = 22530;
  //    /********************天仙之塔*************************/
  //    C2SPetaATowerEnter_ID = 22541;
  //    S2CPetaATowerEnter_ID = 22542;
  //    C2SPetaATowerLeave_ID = 22543;
  //    S2CPetaATowerLeave_ID = 22544;
  //    C2SPetaATowerFight_ID = 22545;
  //    S2CPetaATowerFight_ID = 22546;
  //    C2SPetaATowerNextLayer_ID = 22547;
  //    S2CPetaATowerNextLayer_ID = 22548;
  //    C2SPetaATowerGetSepPrize_ID = 22549;
  //    S2CPetaATowerGetSepPrize_ID = 22550;

  //    /********************天神之塔*************************/
  //    C2SGodTowerEnter_ID = 22561;
  //    S2CGodTowerEnter_ID = 22562;
  //    C2SGodTowerLeave_ID = 22563;
  //    S2CGodTowerLeave_ID = 22564;
  //    C2SGodTowerFight_ID = 22565;
  //    S2CGodTowerFight_ID = 22566;
  //    C2SGodTowerNextLayer_ID = 22567;
  //    S2CGodTowerNextLayer_ID = 22568;
  //    C2SGodTowerGetSepPrize_ID = 22569;
  //    S2CGodTowerGetSepPrize_ID = 22570;
  /********************通用爬塔*************************/
  C2SClimbingTowerEnter_ID = 22571;
  S2CClimbingTowerEnter_ID = 22572;
  C2SClimbingTowerLeave_ID = 22573;
  S2CClimbingTowerLeave_ID = 22574;
  C2SClimbingTowerFight_ID = 22575;
  S2CClimbingTowerFight_ID = 22576;
  C2SClimbingTowerNextLayer_ID = 22577;
  S2CClimbingTowerNextLayer_ID = 22578;
  C2SClimbingTowerGetSepPrize_ID = 22579;
  S2CClimbingTowerGetSepPrize_ID = 22580;
  C2SClimbingTowerGetSwordSoulDayPrize_ID = 22581;
  S2CClimbingTowerGetSwordSoulDayPrize_ID = 22582;
  C2SClimbingTowerGetSwordSoulCircle_ID = 22583;
  S2CClimbingTowerGetSwordSoulCircle_ID = 22584;
  C2SClimbingTowerGetSwordSoulCircleEnd_ID = 22585;

  /**********************仙缘***************************/
  S2CSendMarryInfo_ID = 22600;
  C2SWeddingSeeking_ID = 22601;
  S2CWeddingSeeking_ID = 22602;
  C2SPostWeddingTie_ID = 22607;
  S2CPostWeddingTie_ID = 22608;
  C2SPropose_ID = 22609;
  S2CPropose_ID = 22610;
  S2CProposeNotify_ID = 22611;
  S2CProposeGift_ID = 22612;
  C2SDivorce_ID = 22613;
  S2CDivorce_ID = 22614;
  C2SWeddingRoomGearUp_ID = 22615;
  C2SWeddingRoomLevelUp_ID = 22617;
  S2CWeddingRoom_ID = 22618;
  C2SWeddingRingGearUp_ID = 22619;
  C2SWeddingRingGMLevelUp_ID = 22621;
  C2SWeddingRingLevelUp_ID = 22623;
  C2SWeddingRingSkillLevelUp_ID = 22625;
  S2CWeddingRing_ID = 22626;
  C2SWeddingInsInvite_ID = 22627;
  S2CWeddingInsInvite_ID = 22628;
  C2SWeddingInsFight_ID = 22629;
  C2SWeddingInsInviteAck_ID = 22631;
  S2CWeddingInsInviteAck_ID = 22632;
  C2SWeddingRoomData_ID = 22633;
  C2SWeddingRingData_ID = 22635;
  C2SWeddingMsg_ID = 22636;
  S2CWeddingMsg_ID = 22637;
  C2SGetWeddingTask_ID = 22638;
  S2CGetWeddingTask_ID = 22639;
  C2SWeddingInsReport_ID = 22640;
  S2CWeddingInsReport_ID = 22641;
  C2STargetWeddingRingData_ID = 22642;
  S2CTargetWeddingRing_ID = 22643;
  S2CPartnerOnline_ID = 22345;
  C2SWeddingIntimacy_ID = 22346;
  C2SWeddingIntimacyLevelUp_ID = 22348;
  C2SWeddingIntimacyReward_ID = 22350;
  S2CWeddingIntimacy_ID = 22351;
  C2SAllWeddingToken_ID = 22352;
  S2CAllWeddingToken_ID = 22353;
  C2SWeddingTokenGearUp_ID = 22354;
  C2SWeddingTokenBuffUp_ID = 22355;
  C2SWeddingTokenLevelUp_ID = 22356;
  C2SWeddingTokenSkillLevelUp_ID = 22358;
  S2CWeddingToken_ID = 22359;
  C2SOneKeyWeddingIns_ID = 22360;
  S2COneKeyWeddingIns_ID = 22361;
  /**********************仙侣***************************/
  C2SUserPetA_ID = 22701;
  S2CUserPetA_ID = 22702;
  C2SGetPetAInfo_ID = 22703;
  S2CGetPetAInfo_ID = 22704;
  C2SUnlockNewPetA_ID = 22705;
  S2CUnlockNewPetA_ID = 22706;
  C2SPetABattlePos_ID = 22707;
  S2CPetABattlePos_ID = 22708;
  C2SPetALevelUp_ID = 22709;
  S2CPetALevelUp_ID = 22710;
  C2SPetAStarUp_ID = 22711;
  S2CPetAStarUp_ID = 22712;
  /**********************合体仙侣***************************/
  C2SGetPetAMergeInfo_ID = 22730;
  S2CGetPetAMergeInfo_ID = 22731;
  C2SGetPetAMergeFv_ID = 22732;
  S2CGetPetAMergeFv_ID = 22733;
  C2SPetAMergeUp_ID = 22734;
  S2CPetAMergeUp_ID = 22735;
  C2SPetAMergeActive_ID = 22736;
  S2CPetAMergeActive_ID = 22737;

  /*********************炼体*********************/
  C2SRoleTalentUp_ID = 22801;
  S2CRoleTalentUp_ID = 22802;
  C2SRoleBodyUp_ID = 22803;
  S2CRoleBodyUp_ID = 22804;

  /*********************吃丹*********************/
  C2SGetDrugBase_ID = 22851;
  S2CGetDrugBase_ID = 22852;
  C2SDrugBaseEat_ID = 22853;
  S2CDrugBaseEat_ID = 22854;

  /*********************宝物*********************/
  C2SAladdinLampUnlock_ID = 22901;
  S2CAladdinLampUnlock_ID = 22902;
  C2SAladdinLampStoneUse_ID = 22903;
  S2CAladdinLampStoneUse_ID = 22904;
  C2SAladdinLampStoneUpLevel_ID = 22905;
  S2CAladdinLampStoneUpLevel_ID = 22906;
  C2SAladdinLampWish_ID = 22907;
  S2CAladdinLampWish_ID = 22908;
  S2CChangeBaoWuTask_ID = 22909;
  C2SReceiveBaoWuPrize_ID = 22910;
  S2SReceiveBaoWuPrize_ID = 22911;
  C2SOneKeyReceiveBaoWuPrize_ID = 22912;
  S2COneKeyReceiveBaoWuPrize_ID = 22913;
  C2SAladdinLampInfo_ID = 22914;
  S2CAladdinLampInfo_ID = 22915;
  C2SOtherBaoWuTask_ID = 22919;
  S2COtherBaoWuTask_ID = 22920;

  /**************************材料副本*************************/
  C2SInstanceMaterialInfo_ID = 23001;
  C2SInsMatePurchase_ID = 23003;
  S2CInsMatePurchase_ID = 23004;
  /**************************试炼副本*************************/
  C2SInstanceSLInfo_ID = 23011;
  S2CInstanceSLInfo_ID = 23012;
  C2SInstanceSLFight_ID = 23013;
  S2CInstanceSLFight_ID = 23014;
  C2SInstanceSLSweep_ID = 23015;
  S2CInstanceSLSweep_ID = 23016;
  C2SInsSLPurchase_ID = 23017;
  S2CInsSLPurchase_ID = 23018;
  C2SEnterSLFB_ID = 23019;
  S2CEnterSLFB_ID = 23020;
  C2SLeaveSLFB_ID = 23021;
  S2CLeaveSLFB_ID = 23022;
  C2SInsSLInspire_ID = 23023;
  S2CInsSLInspire_ID = 23024;
  C2SInstanceSLAutoFight_ID = 23025;
  S2CInstanceSLAutoFight_ID = 23026;
  /**************************修炼*************************/
  C2SPlayerPractice_ID = 23101;
  S2CPlayerPractice_ID = 23102;
  C2SPracticeLevelUp_ID = 23103;
  S2CPracticeLevelUp_ID = 23104;
  C2SLastDayPracticeRemain_ID = 23105;
  S2CLastDayPracticeRemain_ID = 23106;
  C2SDayPracticeFind_ID = 23107;
  S2CDayPracticeFind_ID = 23108;
  C2SDayPracticeFastFind_ID = 23109;
  S2CDayPracticeFastFind_ID = 23110;
  C2SLastDayResourceRemain_ID = 23111;
  S2CLastDayResourceRemain_ID = 23112;
  C2SResourceFind_ID = 23113;
  S2CResourceFind_ID = 23114;
  C2SResourceFastFind_ID = 23115;
  S2CResourceFastFind_ID = 23116;
  /**************************极限生存*************************/
  S2CJXSCStageChange_ID = 23202;
  C2SJXSCSignUp_ID = 23203;
  S2CJXSCSignUp_ID = 23204;
  C2SJXSCSkinChange_ID = 23205;
  S2CJXSCSkinChange_ID = 23206;
  C2SJXSCJoinNextLayer_ID = 23207;
  S2CJXSCJoinNextLayer_ID = 23208;
  C2SJXSCLeaveScene_ID = 23209;
  S2CJXSCLeaveScene_ID = 23210;
  //    S2CJXSCScoreRank_ID = 23212;
  C2SJXSCOpenBox_ID = 23213;
  S2CJXSCOpenBox_ID = 23214;
  C2SJXSCKeyNum_ID = 23215;
  S2CJXSCKeyNum_ID = 23216;
  C2SJXSCMyScore_ID = 23217;
  S2CJXSCMyScore_ID = 23218;
  S2CNearbyTarget_ID = 23220;
  K2SJXSCCheckRed_ID = 23222;
  C2SJXSCSignUpInterval_ID = 23223;
  S2CJXSCSignUpInterval_ID = 23224;
  K2SJXSCSignUpInterval_ID = 23225;
  C2SJXSCReentry_ID = 23226;
  /**************************跑商*************************/
  S2CBusinessData_ID = 23301;
  C2SGetBusinessData_ID = 23302;
  C2SContinueBusiness_ID = 23303;
  S2CContinueBusiness_ID = 23304;
  C2SStartBusiness_ID = 23305;
  S2CStartBusiness_ID = 23306;
  C2SFastBusiness_ID = 23307;
  S2CFastBusiness_ID = 23308;
  S2CBusinessSurprise_ID = 23309;
  S2CBusinessEnd_ID = 23310;
  C2SGetBusinessPrize_ID = 23311;
  S2CGetBusinessPrize_ID = 23312;
  /**************************勋章、圣杯、守护精灵*************************/
  C2SMedalUp_ID = 23401;
  S2CMedalUp_ID = 23402;
  C2SMedalGetPrize_ID = 23403;
  S2CMedalGetPrize_ID = 23404;
  C2SGuardBuy_ID = 23420;
  S2CGuardBuy_ID = 23421;
  S2CGuardOverTime_ID = 23422;
  //**************************************主题礼包*******************************************//
  C2SGetTitleGiftList_ID = 23501;
  S2CGetTitleGiftList_ID = 23502;
  C2SReceiveTitleGift_ID = 23503;
  S2CReceiveTitleGift_ID = 23504;

  C2SReceiveFirstRechargeGift_ID = 23601;
  S2CReceiveFirstRechargeGift_ID = 23602;
  C2SReceiveFirstRechargeInvestGift_ID = 23603;
  S2CReceiveFirstRechargeInvestGift_ID = 23604;
  C2SReceiveTotalRechargeGift_ID = 23605;
  S2CReceiveTotalRechargeGift_ID = 23606;
  //**************************************战神神变*******************************************//
  C2SWarriorGoldChange_ID = 23701;
  S2CWarriorGoldChange_ID = 23702;
  S2CWarriorGCSingleData_ID = 23703;
  S2CWarriorGoldChangeGetInfo_ID = 23704;
  C2SWarriorGCUnlock_ID = 23705;
  S2CWarriorGCUnlock_ID = 23706;
  //**************************************皮肤额外*******************************************//
  C2SSkinsExtUnlock_ID = 23711;
  S2CSkinsExtUnlock_ID = 23712;
  C2SSkinsExtLev_ID = 23713;
  S2CSkinsExtLev_ID = 23714;
  S2CSkinsExtSingleData_ID = 23715;
  S2CSkinsExtAllData_ID = 23716;
  C2SGodSkillSelect_ID = 23717;
  S2CGodSkillSelect_ID = 23718;

  // ****************红点*******************//
  C2SAnyRedPoint_ID = 24001;

  // ****************系统设置*******************//
  C2SSetAttrInt_ID = 24101;
  // ****************限时挑战*******************//
  S2CGetActLimitTimeFight_ID = 24201;
  C2SGetActPrize_ID = 24202;
  S2CGetActPrize_ID = 24203;
  // ****************寻龙点穴*******************//
  S2CSeekingDragonInfo_ID = 24301; //寻龙点穴信息
  C2SSeekingDragonRoll_ID = 24302; //寻龙点穴roll
  S2CSeekingDragonRoll_ID = 24303; //寻龙点穴roll
  C2SSeekingDragonTemBag_ID = 24304;
  S2CSeekingDragonTemBag_ID = 24305;
  C2SSeekingDragonPrize_ID = 24306;
  S2CSeekingDragonPrize_ID = 24307;
  C2SSeekingDragonTemBagList_ID = 24308;
  S2CSeekingDragonTemBagList_ID = 24309;
  C2SSeekingDragonCheckRed_ID = 24310; //寻龙点穴检测红点
  S2CSeekingDragonEventOpen_ID = 24311;
  C2SSeekingDragonGetAllTimeEvent_ID = 24312;
  S2CSeekingDragonGetAllTimeEvent_ID = 24313;
  C2SSeekingDragonEventAction_ID = 24314;
  S2CSeekingDragonEventAction_ID = 24315;
  C2SSeekingDragonGetEventLog_ID = 24316;
  S2CSeekingDragonGetEventLog_ID = 24317;
  C2SSeekingDragonRecEventReward_ID = 24318;
  S2CSeekingDragonRecEventReward_ID = 24319;
  // ****************组队副本*******************//
  S2CTeamInstanceData_ID = 24401;
  C2STeamInstanceMatching_ID = 24402;
  S2CTeamInstanceMatching_ID = 24403;
  C2STeamInstanceStartFight_ID = 24404;
  C2STeamInstanceGetReport_ID = 24405;
  S2CTeamInstanceGetReport_ID = 24406;
  C2STeamInstanceBuyTimes_ID = 24407;
  S2CTeamInstanceBuyTimes_ID = 24408;
  C2STeamInstanceSweep_ID = 24409;
  S2CTeamInstanceSweep_ID = 24410;

  // *****************************冲榜活动********************************//
  C2STurnTabGearPrize_ID = 24411;
  S2CTurnTabGearPrize_ID = 24412;
  C2STurnTabGearPrizeState_ID = 24413;
  S2CTurnTabGearPrizeState_ID = 24414;

  //*******************************0元购*********************************//
  C2SZeroBuyGiftReturnPlan_ID = 24421;
  S2CZeroBuyGiftReturnPlan_ID = 24422;
  C2SGetZeroBuyReturnMoney_ID = 24423;
  S2CGetZeroBuyReturnMoney_ID = 24424;

  /*****************************直购礼包****************************/
  S2CDirectGift_ID = 24501;
  C2SGetDirectGiftPrize_ID = 24502;
  S2CGetDirectGiftPrize_ID = 24503;

  /*****************************神秘商店****************************/
  S2CSecretMallList_ID = 24601;
  C2SSecretMallBuy_ID = 24602;
  S2CSecretMallBuy_ID = 24603;
  C2SSecretMallRefresh_ID = 24604;
  S2CSecretMallRefresh_ID = 24605;
  C2SSecretMallOpen_ID = 24606;

  /*****************************时光商店****************************/
  C2SRefreshTimeShop_ID = 24621;
  S2CRefreshTimeShop_ID = 24622;
  C2STimeShopGift_ID = 24623;
  S2CTimeShopGift_ID = 24624;
  C2SGetTimeShopGiftPrize_ID = 24625;
  S2CGetTimeShopGiftPrize_ID = 24626;

  /*****************************时光商店****************************/
  C2SRefreshMoonlightBox_ID = 24627;
  S2CRefreshMoonlightBox_ID = 24628;
  C2SMoonlightBoxGift_ID = 24629;
  S2CMoonlightBoxGift_ID = 24630;
  C2SGetMoonlightBoxGiftPrize_ID = 24631;
  S2CGetMoonlightBoxGiftPrize_ID = 24632;

  /*****************************极限挑战****************************/
  C2SGetLimitFightData_ID = 24701;
  S2CGetLimitFightData_ID = 24702;
  C2SChallengeLimitFight_ID = 24703;
  S2CChallengeLimitFight_ID = 24704;
  C2SRecLimitFightReward_ID = 24705;
  S2CRecLimitFightReward_ID = 24706;
  C2SRecLimitFightSpeedReward_ID = 24707;
  S2CRecLimitFightSpeedReward_ID = 24708;
  C2SLimitFightRank_ID = 24709;
  S2CLimitFightRank_ID = 24710;
  C2SLimitFightSectRank_ID = 24711;
  S2CLimitFightSectRank_ID = 24712;
  C2SLimitFightBuyTimes_ID = 24713;
  S2CLimitFightBuyTimes_ID = 24714;
  C2SLimitFightBuyInfo_ID = 24715;
  S2CLimitFightBuyInfo_ID = 24716;
  S2CLimitFightUpdateTimes_ID = 24717;

  /*****************************活动积分****************************/
  S2CActScore_ID = 25001;

  /********************************特殊登录提醒********************************/
  S2CSpecialLoginTips_ID = 25102;
  /********************************奇遇活动********************************/
  S2CActLuckOpen_ID = 25150;
  C2SActLuckEnter_ID = 25151;
  S2CActLuckEnter_ID = 25152;
  C2SActLuckFight_ID = 25153;
  S2CActLuckFight_ID = 25154;
  C2SActLuckLeave_ID = 25155;
  S2CActLuckLeave_ID = 25156;

  /********************************巅峰竞技********************************/
  C2SNBAState_ID = 25198;
  S2CNBAState_ID = 25199;
  C2SNBASign_ID = 25200;
  S2CNBASign_ID = 25201;
  C2SNBASignCount_ID = 25202;
  S2CNBASignCount_ID = 25203;
  C2SNBALastWin_ID = 25204;
  S2CNBALastWin_ID = 25205;
  C2SNBAFrame_ID = 25206;
  S2CNBAFrame_ID = 25207;
  C2SNBAFinalData_ID = 25208;
  S2CNBAFinalData_ID = 25209;
  C2SNBAGuess_ID = 25210;
  S2CNBAGuess_ID = 25211;
  C2SNBAMatch_ID = 25212;
  S2CNBAMatch_ID = 25213;
  S2CNBAMatchResult_ID = 25214;
  S2CNBAPreScore_ID = 25215;
  C2SNBAFinalFightEnd_ID = 25216;
  S2CNBAFinalDataOnPreEnd_ID = 25217;
  S2CNBAPreStart_ID = 25218;
  S2CNBAFinalEnd_ID = 25219;
  C2SNBABuyAuto_ID = 25220;
  S2CNBABuyAuto_ID = 25221;
  C2SGetNBAFightReport_ID = 25222;
  S2CGetNBAFightReport_ID = 25223;
  /********************************遗迹争夺********************************/
  C2SYiJiInfo_ID = 25301;
  S2CYiJiInfo_ID = 25302;
  //    S2CChangeYiJiEntrustData_ID = 25304;
  //    C2SGetYiJiEntrustList_ID = 25305;
  //    S2CGetYiJiEntrustList_ID = 25306;
  //    C2SYiJiEntrust_ID = 25307;
  //    S2CYiJiEntrust_ID = 25308;
  //    C2SResponseYiJiEntrust_ID = 25309;
  //    S2CResponseYiJiEntrust_ID = 25310;
  //    C2SCancelYiJiEntrust_ID = 25311;
  //    S2CCancelYiJiEntrust_ID = 25312;
  C2SYiJiScoreRank_ID = 25313;
  S2CYiJiScoreRank_ID = 25314;
  C2SYiJiJoinScene_ID = 25315;
  S2CYiJiJoinScene_ID = 25316;
  C2SYiJiLeaveScene_ID = 25317;
  S2CYiJiLeaveScene_ID = 25318;
  C2SYiJiNearbyEnemyPlayer_ID = 25319;
  S2CYiJiNearbyEnemyPlayer_ID = 25320;
  C2SYiJiDamageRank_ID = 25321;
  S2CYiJiDamageRank_ID = 25322;
  S2CYiJiOwnerPlayer_ID = 25324;
  C2SYiJiGiveUpOwner_ID = 25325;
  S2CYiJiGiveUpOwner_ID = 25326;
  C2SYiJiCallHelp_ID = 25327;
  S2CYiJiCallHelp_ID = 25328;
  S2CYiJiFlyPrize_ID = 25330;
  S2CYiJiActEnd_ID = 25332;
  /********************************通用委托********************************/
  C2SGetEntrustWallList_ID = 25351;
  S2CGetEntrustWallList_ID = 25352;
  C2SGetMyEntrustList_ID = 25353;
  S2CGetMyEntrustList_ID = 25354;
  C2SEntrustToWall_ID = 25355;
  S2CEntrustToWall_ID = 25356;
  C2SReceiveEntrust_ID = 25357;
  S2CReceiveEntrust_ID = 25358;
  C2SCancelEntrust_ID = 25359;
  S2CCancelEntrust_ID = 25360;
  C2SEntrustInfo_ID = 25361;
  S2CEntrustInfo_ID = 25362;
  C2SEntrustRed_ID = 25363;
  S2CEntrustRed_ID = 25364;
  /********************************仙宗悬赏********************************/
  C2SPlayerXZXS_ID = 25401;
  S2CPlayerXZXS_ID = 25402;
  C2SXZXSRefreshTask_ID = 25403;
  S2CXZXSRefreshTask_ID = 25404;
  C2SXZXSStartTask_ID = 25405;
  S2CXZXSStartTask_ID = 25406;
  C2SXZXSGetAllCanStartTask_ID = 25407;
  S2CXZXSGetAllCanStartTask_ID = 25408;
  C2SXZXSOneKeyStartTask_ID = 25409;
  S2CXZXSOneKeyStartTask_ID = 25410;
  C2SXZXSGetTaskPrize_ID = 25411;
  S2CXZXSGetTaskPrize_ID = 25412;
  C2SXZXSGetHelpPartnerList_ID = 25413;
  S2CXZXSGetHelpPartnerList_ID = 25414;
  C2SXZXSHelpPartnerSave_ID = 25415;
  S2CXZXSHelpPartnerSave_ID = 25416;
  C2SXZXSGetOthHelpPartnerList_ID = 25417;
  S2CXZXSGetOthHelpPartnerList_ID = 25418;

  /********************************领地战********************************/
  C2SGetCityWarData_ID = 25501;
  S2CCityWarData_ID = 25502;
  C2SGetCityWarChooseItem_ID = 25503;
  S2CGetCityWarChooseItem_ID = 25504;
  C2SCityWarKillRank_ID = 25505;
  S2CCityWarKillRank_ID = 25506;
  C2SCityWarChoose_ID = 25507;
  S2CCityWarChoose_ID = 25508;
  S2CCityWarMapData_ID = 25509;
  S2CCityWarMyScore_ID = 25510;
  S2CCityWarCrystal_ID = 25511;
  C2SCityWarOpenBox_ID = 25512;
  S2CCityWarOpenBox_ID = 25513;
  C2SCityWarGive_ID = 25514;
  S2CCityWarGive_ID = 25515;
  C2SCityWarCleanPVPCd_ID = 25516;
  S2CCityWarCleanPVPCd_ID = 25517;
  S2CCityWarWinner_ID = 25518;
  S2CCityWarChooseChange_ID = 25519;
  S2CCityWarDead_ID = 25520;
  S2CCityWarCrystalDamange_ID = 25521;
  C2SCityWarPrepareOpenBox_ID = 25522;
  S2CCityWarPrepareOpenBox_ID = 25523;

  /********************************宗门城战********************************/
  C2SGetSectWarData_ID = 25550;
  S2CSectWarData_ID = 25551;
  C2SGetSectWarLeaderInfo_ID = 25552;
  S2CSectWarLeaderInfo_ID = 25553;
  C2SSectWarScoreRank_ID = 25554;
  S2CSectWarScoreRank_ID = 25555;
  S2CSectWarMapData_ID = 25556;
  S2CSectWarMyScore_ID = 25557;
  C2SSectWarOpenBox_ID = 25558;
  S2CSectWarOpenBox_ID = 25559;
  C2SSectWarCleanPVPCd_ID = 25560;
  S2CSectWarCleanPVPCd_ID = 25561;
  S2CSectWarWinner_ID = 25562;
  S2CSectWarChooseChange_ID = 25563;
  S2CSectWarDead_ID = 25564;
  C2SSectWarGetScorePrize_ID = 25565;
  S2CSectWarGetScorePrize_ID = 25566;
  C2SSectWarGetRankPrize_ID = 25567;
  S2CSectWarGetRankPrize_ID = 25568;
  S2CSectWarWarrior_ID = 25569;
  C2SSectWarGetCityPrize_ID = 25570;
  S2CSectWarGetCityPrize_ID = 25571;
  S2CSectWarDieMostPlayer_ID = 25572;
  C2SGetSectWarLastWinLeader_ID = 25573;
  S2CGetSectWarLastWinLeader_ID = 25574;
  C2SPraiseSectWarLastWinLeader_ID = 25575;
  S2CPraiseSectWarLastWinLeader_ID = 25576;
  S2CSectWarAutoPrize_ID = 25577;

  /**********************************************主题活动***********************************************/
  C2SActTheme2Lucky_ID = 25601;
  S2CActTheme2Lucky_ID = 25602;
  C2SActTheme2Do_ID = 25603;
  S2CActTheme2Do_ID = 25604;
  C2STheme2TreasuryState_ID = 25605;
  S2CTheme2TreasuryState_ID = 25606;
  C2SActTheme3Data_ID = 25607;
  S2CActTheme3Data_ID = 25608;
  C2SActTheme3TaskFastFinish_ID = 25609;
  S2CActTheme3TaskFastFinish_ID = 25610;
  C2SGoodsChecked_ID = 25611;
  S2CGoodsChecked_ID = 25612;


  C2SActRushRankGive_ID = 25651;
  S2CActRushRankGive_ID = 25652;
  C2SActGetReceiveUserList_ID = 25653;
  S2CActGetReceiveUserList_ID = 25654;
  C2SActGetGiveLogList_ID = 25655;
  S2CActGetGiveLogList_ID = 25656;

  /**********************************************幻境副本***********************************************/
  C2SIllusionData_ID = 25701;
  S2CIllusionData_ID = 25702;
  C2SIllusionChapterData_ID = 25703;
  S2CIllusionChapterData_ID = 25704;
  C2SIllusionTeamList_ID = 25705;
  S2CIllusionTeamList_ID = 25706;
  C2SIllusionMyTeam_ID = 25707;
  S2CIllusionMyTeam_ID = 25708;
  C2SIllusionCreateTeam_ID = 25709;
  S2CIllusionCreateTeam_ID = 25710;
  C2SIllusionJoinTeam_ID = 25711;
  S2CIllusionJoinTeam_ID = 25712;
  C2SIllusionTeamInvite_ID = 25713;
  S2CIllusionTeamInvite_ID = 25714;
  S2CIllusionTeamBeInvited_ID = 25715;
  C2SIllusionTeamBeInvited_ID = 25716;
  C2SIllusionExitTeam_ID = 25717;
  S2CIllusionExitTeam_ID = 25718;
  C2SIllusionDelTeam_ID = 25719;
  S2CIllusionDelTeam_ID = 25720;
  C2SIllusionFight_ID = 25721;
  S2CIllusionFight_ID = 25722;
  C2SIllusionSweep_ID = 25723;
  S2CIllusionSweep_ID = 25724;
  C2SGetIllusionCanInviteList_ID = 25725;
  S2CGetIllusionCanInviteList_ID = 25726;
  C2SIllusionShout_ID = 25727;
  S2CIllusionShout_ID = 25728;
  S2CReportIllusionShout_ID = 25729;
  C2SIllusionTeamSetFV_ID = 25731;
  S2CIllusionTeamSetFV_ID = 25732;
  C2SIllusionTeamNextCheckPoint_ID = 25733;
  S2CIllusionTeamNextCheckPoint_ID = 25734;
  C2SIllusionTeamReFight_ID = 25735;
  S2CIllusionTeamReFight_ID = 25736;
  C2SGetIllusionsByTabId_ID = 25737;
  S2CGetIllusionsByTabId_ID = 25738;
  C2SIllusionSweepByTabId_ID = 25739;
  S2CIllusionSweepByTabId_ID = 25740;

  C2SCommonShout_ID = 25751;
  S2CCommonShout_ID = 25752;
  S2CReportCommonShout_ID = 25753;

  C2SBeasts_ID = 25795;
  S2CBeasts_ID = 25796;
  C2SUnlockBeast_ID = 25797;
  C2SWearBeast_ID = 25799;
  C2SOneKeyWearBeastEquip_ID = 25801;
  C2SWearBeastEquip_ID = 25802;
  C2SOneKeyStrengthenBeastEquip_ID = 25803;
  C2SStarUpBeastEquip_ID = 25804;
  C2SSkillLevelUp_ID = 25805;
  S2CSavageBeast_ID = 25806;
  S2CStarUpBeast_ID = 25807;
  S2CWearBeast_ID = 25808;
  S2CBeastAwaken_ID = 25809;
  C2SBeastStar_ID = 25810;
  S2CBeastStar_ID = 25811;

  /**********************************************通行证（封神令）***********************************************/
  C2SGetPassCheckData_ID = 25901;
  S2CGetPassCheckData_ID = 25902;
  C2SPassCheckBuyLevel_ID = 25903;
  S2CPassCheckBuyLevel_ID = 25904;
  C2SPassCheckGetPrize_ID = 25905;
  S2CPassCheckGetPrize_ID = 25906;
  C2SPassCheckGetExpBox_ID = 25907;
  S2CPassCheckGetExpBox_ID = 25908;

  /**********************************************财神送礼-充值转盘***********************************************/
  C2SGetRechargeGearData_ID = 25950;
  S2CGetRechargeGearData_ID = 25951;
  C2SRechargeGearDraw_ID = 25952;
  S2CRechargeGearDraw_ID = 25953;

  C2STRGearDraw_ID = 25961;
  S2CTRGearDraw_ID = 25962;
  C2SGetTRGearInfo_ID = 25963;
  S2CGetTRGearInfo_ID = 25964;
  C2STRGearSelectItem_ID = 25965;
  S2CTRGearSelectItem_ID = 25966;

  C2SXunBaoSelectItem_ID = 25967;
  S2CXunBaoSelectItem_ID = 25968;

  /**********************************************王权荣誉***********************************************/
  C2SGetSectHonorPlayer_ID = 26001;
  S2CGetSectHonorPlayer_ID = 26002;
  C2SSectHonorPraise_ID = 26003;
  S2CSectHonorPraise_ID = 26004;
  C2SSectHonorMandate_ID = 26005;
  S2CSectHonorMandate_ID = 26006;
  C2SSectHonorMandatePlayerList_ID = 26007;
  S2CSectHonorMandatePlayerList_ID = 26008;
  C2SSectHonorGetPrize_ID = 26009;
  S2CSectHonorGetPrize_ID = 26010;

  /**********************************************凶兽岛委托***********************************************/
  S2CChangeXldEntrustData_ID = 26101;
  C2SGetXldEntrustList_ID = 26103;
  S2CGetXldEntrustList_ID = 26104;
  C2SXldEntrust_ID = 26105;
  S2CXldEntrust_ID = 26106;
  C2SResponseXldEntrust_ID = 26107;
  S2CResponseXldEntrust_ID = 26108;
  /**********************************************凶兽岛***********************************************/
  C2SXLDBossInfo_ID = 26201;
  S2CXLDBossInfo_ID = 26202;
  C2SXLDBossFight_ID = 26203;
  S2CXLDBossFight_ID = 26204;
  C2SXLDBossSweep_ID = 26205;
  S2CXLDBossSweep_ID = 26206;
  C2SXLDBossPurchase_ID = 26207;
  S2CXLDBossPurchase_ID = 26208;

  S2CXsdBossInfo_ID = 26232;
  C2SXsdBossJoinScene_ID = 26233;
  S2CXsdBossJoinScene_ID = 26234;
  C2SXsdBossLeaveScene_ID = 26235;
  S2CXsdBossLeaveScene_ID = 26236;
  S2CXsdBossDamageRank_ID = 26238;
  S2CXsdBossDamageMy_ID = 26240;
  C2SXsdBossCfg_ID = 26241;
  C2SXsdBossPurchase_ID = 26243;
  S2CXsdBossPurchase_ID = 26244;
  C2SXsdCollect_ID = 26245;
  S2CXsdCollect_ID = 26246;

  /*************************************************自动推送礼*****************************************/
  S2CAutoPushGift_ID = 26301;
  C2SPushGiftShopBuy_ID = 26302;
  S2CPushGiftShopBuy_ID = 26303;

  /*************************************************掉落表掉落*****************************************/
  C2SGetDropItems_ID = 26401;
  S2CGetDropItems_ID = 26402;

  C2SGetFuncEquipData_ID = 26901;
  S2CGetFuncEquipData_ID = 26902;

  /**********************************************装备***********************************************/
  C2SGetAllEquipData_ID = 27001;
  S2CGetAllEquipData_ID = 27002;
  C2SGetEquipData_ID = 27003;
  S2CGetEquipData_ID = 27004;
  C2SOneKeyEquipWear_ID = 27005;
  S2COneKeyEquipWear_ID = 27006;
  C2SEquipWear_ID = 27007;
  S2CEquipWear_ID = 27008;
  C2SOneKeyEquipStrengthS_ID = 27009;
  S2COneKeyEquipStrengthS_ID = 27010;
  C2SEquipStrengthS_ID = 27011;
  S2CEquipStrengthS_ID = 27012;
  C2SStrengthMaster_ID = 27013;
  S2CStrengthMaster_ID = 27014;
  C2SOneKeyMosaicWear_ID = 27015;
  S2COneKeyMosaicWear_ID = 27016;
  C2SOneKeyMosaicChange_ID = 27017;
  S2COneKeyMosaicChange_ID = 27018;
  C2SOneKeyMosaicUpLev_ID = 27019;
  S2COneKeyMosaicUpLev_ID = 27020;
  C2SEquipStars_ID = 27021;
  S2CEquipStars_ID = 27022;
  C2SEquipCompose_ID = 27023;
  S2CEquipCompose_ID = 27024;
  C2SEquipUpLev_ID = 27025;
  S2CEquipUpLev_ID = 27026;
  C2SYanJiaActive_ID = 27027;
  S2CYanJiaActive_ID = 27028;
  C2SYanJiaCoreActive_ID = 27029;
  S2CYanJiaCoreActive_ID = 27030;
  C2SYanJiaCoreLev_ID = 27031;
  S2CYanJiaCoreLev_ID = 27032;
  C2SYanJiaCoreStar_ID = 27033;
  S2CYanJiaCoreStar_ID = 27034;
  C2SYanJiaCoreWear_ID = 27035;
  S2CYanJiaCoreWear_ID = 27036;
  C2SEquipQuality_ID = 27037;
  S2CEquipQuality_ID = 27038;
  C2SEquipRefine_ID = 27039;
  S2CEquipRefine_ID = 27040;
  C2SGetYanJiaSoldierSoulData_ID = 27041;
  S2CGetYanJiaSoldierSoulData_ID = 27042;
  C2SYanJiaSoldierSoulDrug_ID = 27043;
  S2CYanJiaSoldierSoulDrug_ID = 27044;
  C2SYanJiaSoldierSoulSkillUpLev_ID = 27045;
  S2CYanJiaSoldierSoulSkillUpLev_ID = 27046;
  C2SBreakType_ID = 27050;
  S2CBreakType_ID = 27051;
  C2SEquipOneKeyUpLev_ID = 27052;
  S2CEquipOneKeyUpLev_ID = 27053;

  //=============================================新组队==============================================//
  C2STeams_ID = 27101;
  S2CTeams_ID = 27102;
  C2STeamInfo_ID = 27103;
  S2CTeamInfo_ID = 27104;
  C2SCreateTeam_ID = 27105;
  S2CCreateTeam_ID = 27106;
  C2SJoinTeam_ID = 27107;
  S2CJoinTeam_ID = 27108;
  C2SInviteTeam_ID = 27109;
  S2CInviteTeam_ID = 27110;
  C2SLeaveTeam_ID = 27111;
  S2CLeaveTeam_ID = 27112;
  S2CDisbandTeam_ID = 27114;
  C2SKickTeam_ID = 27115;
  S2CKickTeam_ID = 27116;
  S2CInviteTeamInfo_ID = 27118;
  C2SGetCanInvite_ID = 27119;
  S2CGetCanInvite_ID = 27120;
  C2SEditTeam_ID = 27121;
  S2CEditTeam_ID = 27122;
  C2SRefuseInvite_ID = 27123;
  S2CRefuseInvite_ID = 27124;
  C2SEditTeamKey_ID = 27125;
  S2CEditTeamKey_ID = 27126;

  //======================================幻灵秘境===========================================//
  C2SGetHLBossList_ID = 27131;
  S2CGetHLBossList_ID = 27132;
  C2SEnterHLFB_ID = 27133;
  S2CEnterHLFB_ID = 27134;
  C2SLeaveHLFB_ID = 27135;
  S2CLeaveHLFB_ID = 27136;
  C2SStartFightHLPVE_ID = 27137;
  S2CStartFightHLPVE_ID = 27138;
  C2SStartFightHLPVP_ID = 27139;
  S2CStartFightHLPVP_ID = 27140;
  C2SGetHLRankList_ID = 27141;
  S2CGetHLRankList_ID = 27142;
  C2SReplyPower_ID = 27143;
  S2CReplyPower_ID = 27144;
  C2SAutoReply_ID = 27145;
  S2CAutoReply_ID = 27146;
  S2CNoPowerTip_ID = 27148;
  //======================================幻灵养成===========================================//
  C2SHuanLingList_ID = 27151;
  S2CHuanLingList_ID = 27152;
  C2SHLLevelUp_ID = 27153;
  S2CHLLevelUp_ID = 27154;
  C2SHLDan_ID = 27155;
  S2CHLDan_ID = 27156;
  C2SHLSkillLevelUp_ID = 27157;
  S2CHLSkillLevelUp_ID = 27158;
  C2SHLLWLevelUp_ID = 27159;
  S2CHLLWLevelUp_ID = 27160;
  C2SHLLWSkillLevelUp_ID = 27161;
  S2CHLLWSkillLevelUp_ID = 27162;
  C2SHLUnlock_ID = 27163;
  S2CHLUnlock_ID = 27164;
  C2SHLBattlePos_ID = 27165;
  S2CHLBattlePos_ID = 27166;
  S2CHLLevelList_ID = 27168;
  /***********************************************偃甲材料副本*******************************************************/
  C2SGetYJFBGuanQiaData_ID = 27201;
  S2CGetYJFBGuanQiaData_ID = 27202;
  C2SYJFBGuanQiaMove_ID = 27203;
  S2CYJFBGuanQiaMove_ID = 27204;
  C2SYJFBGuanQiaTriggerEvent_ID = 27205;
  S2CYJFBGuanQiaTriggerEvent_ID = 27206;
  C2SYJFBSweep_ID = 27207;
  S2CYJFBSweep_ID = 27208;
  C2SGetYJFBData_ID = 27209;
  S2CGetYJFBData_ID = 27210;
  C2SYJFBExchangeTiLi_ID = 27211;
  S2CYJFBExchangeTiLi_ID = 27212;
  S2CYJFBOutQuanQia_ID = 27214;
  C2SYJFBAutoUseJuShenDan_ID = 27215;
  S2CYJFBAutoUseJuShenDan_ID = 27216;
  S2CYJFBFirstPass_ID = 27218;
  //    S2CYJFBWareHouseAdd_ID = 27214;
  //    C2SYJFBWareHouseGetInfo_ID = 27215;
  //    S2CYJFBWareHouseGetInfo_ID = 27216;
  //    C2SYJFBWareHouseReceive_ID = 27217;
  //    S2CYJFBWareHouseReceive_ID = 27218;

  /************飞升系统**********************/
  C2SFeiShengStageUp_ID = 27260;
  S2CFeiShengStageUp_ID = 27261;

  /************法阵系统**********************/
  S2CFaZhengData_ID = 27270; // 初始化法阵数据
  C2SFaZhengLevelUp_ID = 27271; // 法阵升级
  S2CFaZhengLevelUp_ID = 27272; // 法阵升级回包
  C2SFaZhengStageUp_ID = 27273; // 法阵认主
  S2CFaZhengStageUp_ID = 27274; // 法阵认主回包

  /***********************************************通用收益仓库*******************************************************/
  S2CWareHouseAdd_ID = 27302;
  C2SWareHouseGetInfo_ID = 27303;
  S2CWareHouseGetInfo_ID = 27304;
  C2SWareHouseReceiveItem_ID = 27305;
  S2CWareHouseReceiveItem_ID = 27306;
  C2SWareHousePartReceive_ID = 27307;
  S2CWareHousePartReceive_ID = 27308;

  /*********************家族竞技******************/
  S2CFamilyJJCData_ID = 27350; // 推送家族竞技数据
  C2SFamilyJJCAdd_ID = 27351; // 上阵队员
  S2CFamilyJJCAdd_ID = 27352; // 上阵队员回包
  C2SFamilyJJCBuyTimes_ID = 27353; // 家族竞技购买次数
  S2CFamilyJJCBuyTimes_ID = 27354; // 家族竞技购买次数回包
  C2SFamilyJJCRecieveAward_ID = 27355; // 家族竞技领取参与奖励
  S2CFamilyJJCRecieveAward_ID = 27356; // 家族竞技领取参与奖励回包
  C2SFamilyJJCJoin_ID = 27357; // 家族竞技匹配战斗
  S2CFamilyJJCJoin_ID = 27358; // 家族竞技匹配战斗回包
  C2SFamilyJJCFight_ID = 27359; // 家族竞技开始战斗
  S2CFamilyJJCState_ID = 27360; // 家族竞技开启状态
  C2SFamilyJJCRank_ID = 27361; // 请求家族竞技排行榜
  S2CFamilyJJCRank_ID = 27362; // 家族竞技排行榜回包
  S2CFamilyJJCFight_ID = 27363; // 家族竞技开始战斗回包
  C2SFamilyJJCGetBuyInfo_ID = 27364; // 家族竞技获取购买信息
  S2CFamilyJJCGetBuyInfo_ID = 27365; // 家族竞技获取购买信息回包
  C2SGetFamilyJJCData_ID = 27366; // 获取家族竞技数据
  S2CGetFamilyJJCData_ID = 27367; // 获取家族竞技数据回包
  /***********************************************Boss秘境*******************************************************/
  C2SMiJingBossInfo_ID = 27401;
  S2CMiJingBossInfo_ID = 27402;
  C2SBossMiJingJoinScene_ID = 27403;
  S2CBossMiJingJoinScene_ID = 27404;
  C2SBossMiJingLeaveScene_ID = 27405;
  S2CBossMiJingLeaveScene_ID = 27406;
  C2SMiJingBossDamageRank_ID = 27407;
  S2CMiJingBossDamageRank_ID = 27408;
  S2CMiJingBossDamageMy_ID = 27410;
  S2CMiJingBossOwner_ID = 27414;
  C2SBossMiJingAutoFight_ID = 27415;
  C2SMiJingBossOpenBox_ID = 27417;
  S2CMiJingBossOpenBox_ID = 27418;
  C2SMiJingBossBoxInfo_ID = 27419;
  S2CMiJingBossBoxInfo_ID = 27420;
  C2SMiJingFocusBoss_ID = 27421;
  S2CMiJingFocusBoss_ID = 27422;
  C2SMiJingBossFocusInfo_ID = 27423;
  S2CMiJingBossFocusInfo_ID = 27424;

  /***********************************************王者套装*******************************************************/
  C2SGetKingEquipData_ID = 27501;
  S2CGetKingEquipData_ID = 27502;
  C2SOneKeyKingEquipWear_ID = 27503;
  S2COneKeyKingEquipWear_ID = 27504;
  C2SKingEquipWear_ID = 27505;
  S2CKingEquipWear_ID = 27506;
  C2SKingSuitHuanHua_ID = 27507;
  S2CKingSuitHuanHua_ID = 27508;
  C2SKingLifeLev_ID = 27509;
  S2CKingLifeLev_ID = 27510;
  C2SOneKeyJadeWear_ID = 27511;
  S2COneKeyJadeWear_ID = 27512;
  C2SKingWingHuanHua_ID = 27513;
  S2CKingWingHuanHua_ID = 27514;
  C2SKingWingStar_ID = 27515;
  S2CKingWingStar_ID = 27516;
  C2SKingEquipCompose_ID = 27517;
  S2CKingEquipCompose_ID = 27518;
  /***********************************************游戏助手（托管）*******************************************************/
  C2SStartHelper_ID = 27600;
  S2CStartHelper_ID = 27601;
  C2SStopHelper_ID = 27602;
  S2CStopHelper_ID = 27603;
  C2SGetHelperNext_ID = 27604;
  S2CGetHelperNext_ID = 27605;
  C2SGetHelperCfg_ID = 27606;
  S2CGetHelperCfg_ID = 27607;
  C2SGetHelperLog_ID = 27608;
  S2CGetHelperLog_ID = 27609;
  /***********************************************公众号*******************************************************/
  C2SMpFocusReward_ID = 27701;
  S2CMpFocusReward_ID = 27702;
  C2SBindPhoneReward_ID = 27703;
  S2CBindPhoneReward_ID = 27704;
  C2SGetMpFocusInfo_ID = 27705;
  S2CGetMpFocusInfo_ID = 27706;
  C2SGetBindPhoneInfo_ID = 27707;
  S2CGetBindPhoneInfo_ID = 27708;
  C2SAuthPoliteGetPrize_ID = 27709;
  S2CAuthPoliteGetPrize_ID = 27710;

  /***********************************************世界等级*******************************************************/
  C2SWorldLevelInfo_ID = 27720;
  S2CWorldLevelInfo_ID = 27721;
  /***********************************************意见反馈*******************************************************/
  C2SGetFeedBack_ID = 27750;
  S2CGetFeedBack_ID = 27751;
  C2SNewFeedBack_ID = 27752;
  S2CNewFeedBack_ID = 27753;
  C2SReadFeedBack_ID = 27754;
  C2SAppRatingState_ID = 27755;
  S2CAppRatingState_ID = 27756;
  C2SAppRatingGetPrize_ID = 27757;
  S2CAppRatingGetPrize_ID = 27758;
  C2SAppRatingOp_ID = 27759;
  S2CAppRatingOp_ID = 27760;
  /***********************************************英雄*******************************************************/
  C2SGetHeroList_ID = 27801;
  S2CGetHeroList_ID = 27802;
  C2SHeroActive_ID = 27803;
  S2CHeroActive_ID = 27804;
  C2SHeroIntoBattle_ID = 27805;
  S2CHeroIntoBattle_ID = 27806;
  C2SHeroLevelUp_ID = 27807;
  S2CHeroLevelUp_ID = 27808;
  C2SHeroStarUp_ID = 27809;
  S2CHeroStarUp_ID = 27810;
  C2SHeroGradeLevUp_ID = 27811;
  S2CHeroGradeLevUp_ID = 27812;
  C2SHeroSkillLevelUp_ID = 27813;
  S2CHeroSkillLevelUp_ID = 27814;
  C2SGetHeroInfo_ID = 27815;
  S2CGetHeroInfo_ID = 27816;

  C2SGetHeroBondInfo_ID = 27817;
  S2CGetHeroBondInfo_ID = 27818;
  C2SHeroBondLevelUp_ID = 27819;
  S2CHeroBondLevelUp_ID = 27820;
  C2SGetHeroAchiList_ID = 27821;
  S2CGetHeroAchiList_ID = 27822;
  S2CSendHeroAchi_ID = 27823;
  C2SGetHeroAchiPrize_ID = 27824;
  S2CGetHeroAchiPrize_ID = 27825;
  C2SGetHeroGroupSkill_ID = 27826;
  S2CGetHeroGroupSkill_ID = 27827;
  C2SHeroGroupSkillLevelUp_ID = 27828;
  S2CHeroGroupSkillLevelUp_ID = 27829;
  C2SHeroBondSpeLevelUp_ID = 27830;
  S2CHeroBondSpeLevelUp_ID = 27831;
  C2SHeroSkillInfo_ID = 27832;
  S2CHeroSkillInfo_ID = 27833;

  /***********************************************通天Boss*******************************************************/
  C2STtBossActInfo_ID = 27901;
  S2CTtBossActInfo_ID = 27902;
  S2CTtBossInfo_ID = 27904;
  C2STtBossInspire_ID = 27905;
  S2CTtBossInspire_ID = 27906;
  S2CTtBossFightEndReport_ID = 27908;
  C2STtBossTeamDataRank_ID = 27909;
  S2CTtBossTeamDataRank_ID = 27910;
  S2CTtBossFightBoss_ID = 27912;
  S2CTtBossCloseScene_ID = 27914;
  S2CTtBossActEnd_ID = 27916;
  /***********************************************拍卖行*******************************************************/
  C2SAuctionInfo_ID = 28001;
  S2CAuctionInfo_ID = 28002;
  S2CAucGoodsList_ID = 28004;
  C2SBidding_ID = 28005;
  S2CBidding_ID = 28006;
  C2SGetBiddingLog_ID = 28007;
  S2CGetBiddingLog_ID = 28008;
  C2SAllAucSimData_ID = 28009;
  S2CAllAucSimData_ID = 28010;
  C2SAuctionBeOvertaken_ID = 28011;

  /***********************************************合服首战*******************************************************/
  C2SMergeFirstPrize_ID = 28101;
  S2CMergeFirstPrize_ID = 28102;
  C2SMergeFirstGetPrize_ID = 28103;
  S2CMergeFirstGetPrize_ID = 28104;

  /******************************************随机商店****************************************************/
  S2CRandomShopList_ID = 28200;
  C2SRandomShopBuy_ID = 28201;
  S2CRandomShopBuy_ID = 28202;
  C2SRandomShopRefresh_ID = 28203;
  S2CRandomShopRefresh_ID = 28204;
  C2SRandomShopOpen_ID = 28205;
  C2SRandomShopList_ID = 28206;
  C2SRandomShopFreeItem_ID = 28207;
  S2CRandomShopFreeItem_ID = 28208;

  /******************************************圣物系统****************************************************/
  C2SShengHenData_ID = 28220; // 请求圣物数据
  C2SShengHenSkillUp_ID = 28221; // 圣痕技能升级
  S2CShengHenSkillUp_ID = 28222; // 技能升级回包
  C2SShengWuSmelt_ID = 28224; // 圣物分解
  S2CShengWuSmelt_ID = 28225; // 圣物分解返回
  C2SShengHenLevelUp_ID = 28226; // 圣痕觉醒
  S2CShengHenLevelUp_ID = 28227; // 圣痕觉醒返回
  C2SGetAllShengHen_ID = 28228; // 所有圣痕数据
  S2CGetAllShengHen_ID = 28229; // 所有圣痕数据回包

  /******************************************神域殿堂****************************************************/
  C2SShenYuHallTopPlayer_ID = 28240; // 请求最新一期神域第一名
  S2CShenYuHallTopPlayer_ID = 28241; // 回包
  C2SShenYuHallEnter_ID = 28242; // 进入殿堂
  S2CShenYuHallEnter_ID = 28243; // 回包
  C2SShenYuHallPray_ID = 28244; // 膜拜
  S2CShenYuHallPray_ID = 28245; // 回包
  C2SShenYuHallBless_ID = 28246; // 赐福
  S2CShenYuHallBless_ID = 28247; // 回包
  // C2SShenYuHallTopList_ID = 28248; // 请求所有赛季第一名
  S2CShenYuHallTopList_ID = 28249; // 回包
  C2SShenYuHallSeasonRank_ID = 28250; // 请求某个赛季排行榜
  S2CShenYuHallSeasonRank_ID = 28251; // 回包
  C2SShenYuHallLeave_ID = 28252; // 退出殿堂
  S2CShenYuHallLeave_ID = 28253; // 回包
  C2SCollectBox_ID = 28254; // 采集宝箱
  S2CCollectBox_ID = 28255; // 回包

  /******************************************神域帮助说明****************************************************/
  C2SShenYuHelpReward_ID = 28265; // 请求奖励状态
  S2CShenYuHelpReward_ID = 28266; // 回包
  C2SShenYuHelpGetReward_ID = 28267; // 请求领取奖励

  /************************神域************************/
  C2SShenYuData_ID = 28270; // 请求神域数据
  S2CShenYuData_ID = 28271; // 回包
  C2SShenYuFirstJoinAward_ID = 28272; // 领取首次进入奖励
  S2CShenYuFirstJoinAward_ID = 28273; // 回包
  C2SGuideState_ID = 28274; // 更新引导状态
  S2CGuideState_ID = 28275; // 回包
  C2SGuideBattle_ID = 28276; // 发起新手引导战斗
  C2SShenYuHallSeasonTop_ID = 28277; // 请求神王诞生数据
  S2CShenYuHallSeasonTop_ID = 28278; // 回包
  C2SShenYuTriggerEnterMapEvent_ID = 28279; // 触发进入副本的事件
  C2SShenYuSaveTigs_ID = 28280; //神域保存tigs状态
  S2CShenYuSaveTigs_ID = 28281; //神域保存tigs状态
  C2SShenYuGetSaveTigs_ID = 28282; //获取神域保存tigs状态
  S2CShenYuGetSaveTigs_ID = 28283; //获取神域保存tigs状态


  /******************************************超级Vip****************************************************/
  C2SGetSurperVipChannelReward_ID = 28300;
  S2CGetSurperVipChannelReward_ID = 28301;
  C2SGetSurperVipInfo_ID = 28302;
  S2CGetSurperVipInfo_ID = 28303;
  /******************************************转端有礼****************************************************/
  C2SGetAccountTransfer_ID = 28310;
  S2CGetAccountTransfer_ID = 28311;

  /******************************************征战九州****************************************************/
  C2SGetPrefectWarData_ID = 28401;
  S2CGetPrefectWarData_ID = 28402;
  C2SGetPrefectWarHireList_ID = 28403;
  S2CGetPrefectWarHireList_ID = 28404;
  C2SPrefectWarHire_ID = 28405;
  S2CPrefectWarHire_ID = 28406;
  C2SPrefectWarFight_ID = 28407;
  S2CPrefectWarFight_ID = 28408;

  /******************************************组队自定义****************************************************/
  C2STeamUnit_ID = 28501;
  S2CTeamUnit_ID = 28502;
  C2SSetTeamUnit_ID = 28503;
  S2CSetTeamUnit_ID = 28504;

  /******************************************异兽****************************************************/
  C2SGetAlienData_ID = 28601;
  S2CGetAlienData_ID = 28602;
  C2SAlienLev_ID = 28603;
  S2CAlienLev_ID = 28604;
  C2SMPOneKeyWear_ID = 28607;
  S2CMPOneKeyWear_ID = 28608;
  C2SMPOneKeyStrength_ID = 28609;
  S2CMPOneKeyStrength_ID = 28610;
  C2SMPStrengthMaster_ID = 28611;
  S2CMPStrengthMaster_ID = 28612;
  C2SMPStar_ID = 28613;
  S2CMPStar_ID = 28614;
  C2SAlienActive_ID = 28615;
  S2CAlienActive_ID = 28616;
  C2SAlienIntoBattle_ID = 28617;
  S2CAlienIntoBattle_ID = 28618;

  /*******************************************红包提现***************************************************/
  S2CRedBag_ID = 28662;

  /*******************************************角色技能--仙术***************************************************/
  C2SRoleGodSkillActive_ID = 28680;
  S2CRoleGodSkillActive_ID = 28681;

  /*******************************************仙林狩猎(异兽副本)***************************************************/
  C2SJungleHuntData_ID = 28701;
  S2CJungleHuntData_ID = 28702;
  C2SJungleHuntFight_ID = 28703;
  S2CJungleHuntFight_ID = 28704;
  C2SJungleHuntTreat_ID = 28705;
  S2CJungleHuntTreat_ID = 28706;
  C2SJungleHuntReset_ID = 28707;
  S2CJungleHuntReset_ID = 28708;
  C2SJungleHuntOpenBox_ID = 28709;
  S2CJungleHuntOpenBox_ID = 28710;
  C2SJungleHuntBlessRefresh_ID = 28711;
  S2CJungleHuntBlessRefresh_ID = 28712;
  C2SJungleHuntBlessPick_ID = 28713;
  S2CJungleHuntBlessPick_ID = 28714;
  C2SJungleHuntElvesLeave_ID = 28715;
  S2CJungleHuntElvesLeave_ID = 28716;
  C2SJungleHuntElvesBuy_ID = 28717;
  S2CJungleHuntElvesBuy_ID = 28718;
  C2SJungleHuntSweep_ID = 28719;
  S2CJungleHuntSweep_ID = 28720;
  C2SJungleHuntSetPartnerPos_ID = 28721;
  S2CJungleHuntSetPartnerPos_ID = 28722;
  C2SJungleHuntBattleArr_ID = 28723;
  S2CJungleHuntBattleArr_ID = 28724;

  /*******************************************仙林狩猎(异兽副本)***************************************************/
  /*******************************************查看其它玩家的出站单位信息***************************************************/
  S2COtherInfoSkin_ID = 28801;
  C2SOtherInfoGradeInfo_ID = 28802;
  S2COtherInfoGradeInfo_ID = 28803;
  C2SOtherTotemInfo_ID = 28804;
  S2COtherTotemInfo_ID = 28805;
  C2SOtherPetAInfo_ID = 28806;
  S2COtherPetAInfo_ID = 28807;
  C2SOtherKidsInfo_ID = 28808;
  S2COtherKidsInfo_ID = 28809;
  C2SOtherYanJiaInfo_ID = 28810;
  S2COtherYanJiaInfo_ID = 28811;
  C2SOtherHeroInfo_ID = 28812;
  S2COtherHeroInfo_ID = 28813;
  C2SOtherAlienInfo_ID = 28814;
  S2COtherAlienInfo_ID = 28815;
  C2SOtherBeastInfo_ID = 28816;
  S2COtherBeastInfo_ID = 28817;

  C2SOtherHuanLingInfo_ID = 28818;
  S2COtherHuanLingInfo_ID = 28819;
  C2SOtherSwordSoulInfo_ID = 28820;
  S2COtherSwordSoulInfo_ID = 28821;
  /*******************************************查看其它玩家的出站单位信息***************************************************/

  /*******************************************奇门遁甲***************************************************/
  C2SGetQiMenDunJiaData_ID = 28901;
  S2CGetQiMenDunJiaData_ID = 28902;
  C2SZhenFaHuanHua_ID = 28903;
  S2CZhenFaHuanHua_ID = 28904;
  C2SZhenFaActive_ID = 28905;
  S2CZhenFaActive_ID = 28906;
  C2SZhenWeiActive_ID = 28907;
  S2CZhenWeiActive_ID = 28908;
  //    C2SZhenShuBattle_ID = 28909;
  //    S2CZhenShuBattle_ID = 28910;
  C2SZhenFaLevelUp_ID = 28911;
  S2CZhenFaLevelUp_ID = 28912;
  C2SZhenFaEatDrug_ID = 28913;
  S2CZhenFaEatDrug_ID = 28914;
  C2SZhenFaStarUp_ID = 28915;
  S2CZhenFaStarUp_ID = 28916;

  /****************************异界妖门**************/
  C2SEnterYJYM_ID = 29000; // 进入异界妖门
  S2CEnterYJYM_ID = 29001; // 回包
  C2SLeaveYJYM_ID = 29002; // 退出异界妖门
  S2CLeaveYJYM_ID = 29003; // 回包

  /*******************************************御剑飞仙***************************************************/
  C2SYJFXMatchStage_ID = 29100; // 获取比赛阶段
  S2CYJFXMatchStage_ID = 29101; //
  C2SYJFXGetDengJianInfo_ID = 29102; // 获取登剑
  S2CYJFXGetDengJianInfo_ID = 29103; //
  C2SYJFXDengJian_ID = 29104; // 登剑
  S2CYJFXDengJian_ID = 29105; //
  C2SYJFXGetYunGongInfo_ID = 29106; // 获取运功数据
  S2CYJFXGetYunGongInfo_ID = 29107; //
  C2SYJFXYunGong_ID = 29108; // 运功
  S2CYJFXYunGong_ID = 29109; //
  C2SYJFXMatchData_ID = 29110; // 获取比赛数据
  S2CYJFXMatchData_ID = 29111; //
  C2SYJFXMatchBag_ID = 29112; // 获取个人活动背包
  S2CYJFXMatchBag_ID = 29113; //
  S2CYJFXMatchBoss_ID = 29114; //玩家遇怪--刷新血量(弃用)
  C2SYJFXUseItem_ID = 29115; // 道具功能使用
  S2CYJFXUseItem_ID = 29116; //
  //S2CYJFXMatchComplete_ID = 29117; //比赛完成
  C2SYJFXRank_ID = 29118; // 查看排行榜
  S2CYJFXRank_ID = 29119; //
  C2SYJFXEnter_ID = 29120; // 进入
  S2CYJFXEnter_ID = 29121; //
  C2SYJFXLeave_ID = 29122; // 离开
  S2CYJFXLeave_ID = 29123; //
  C2SYJFXGetCanAttackList_ID = 29124; // 获取可以攻击的仙宗列表
  S2CYJFXGetCanAttackList_ID = 29125; //

  C2SGetChannelGiftInfo_ID = 29200;
  S2CGetChannelGiftInfo_ID = 29201;
  C2SGetChannelGiftPrize_ID = 29202;
  S2CGetChannelGiftPrize_ID = 29203;

  C2SCreateRoleTask_ID = 29211;
  S2CCreateRoleTask_ID = 29212;

  C2SPhonePBSetting_ID = 29221;
  S2CPhonePBSetting_ID = 29222;

  /*******************************************战队***************************************************/
  C2SGetAllFTList_ID = 29300;
  S2CGetAllFTList_ID = 29301;
  C2SGetFTInfo_ID = 29302;
  S2CGetFTInfo_ID = 29303;
  C2SCreateFT_ID = 29304;
  S2CCreateFT_ID = 29305;
  C2SGetApplyList_ID = 29306;
  S2CGetApplyList_ID = 29307;
  C2SApplyJoinFT_ID = 29308;
  S2CApplyJoinFT_ID = 29309;
  C2SAgreeJoinFT_ID = 29310;
  S2CAgreeJoinFT_ID = 29311;
  C2SDeleteFT_ID = 29312;
  S2CDeleteFT_ID = 29313;
  C2SChangeLeader_ID = 29314;
  S2CChangeFTLeader_ID = 29315;
  C2SKickOutFT_ID = 29316;
  S2CKickOutFT_ID = 29317;
  C2SLeaveFT_ID = 29318;
  S2CLeaveFT_ID = 29319;
  C2SAccuseLeader_ID = 29320;
  S2CAccuseLeader_ID = 29321;
  C2SFTChangeName_ID = 29322;
  S2CFTChangeName_ID = 29323;
  C2SFTChangeAutoAgree_ID = 29324;
  S2CFTChangeAutoAgree_ID = 29325;
  C2SFTChangeDeclaration_ID = 29326;
  S2CFTChangeDeclaration_ID = 29327;
  C2SGetFTHaloInfo_ID = 29328;
  S2CGetFTHaloInfo_ID = 29329;
  C2SGetFTSearch_ID = 29330;
  S2CGetFTSearch_ID = 29331;
  S2CFTTips_ID = 29332;

  C2SShenYuGodActionBuy_ID = 29401;
  S2CShenYuGodActionBuy_ID = 29402;

  //-----------------------------------大庆典------------------------------/
  C2SGetFuDaiData_ID = 29411;
  S2CGetFuDaiData_ID = 29412;
  C2SBuyFuDai_ID = 29413;
  S2CBuyFuDai_ID = 29414;
  C2SGetNightData_ID = 29415;
  S2CGetNightData_ID = 29416;
  C2SNightMake_ID = 29417;
  S2CNightMake_ID = 29418;
  C2SNightRewardLog_ID = 29419;
  S2CNightRewardLog_ID = 29420;

  /*******************************************神龙系统***************************************************/
  C2SSLFallOK_ID = 29501;
  S2CSLFallOK_ID = 29502;
  C2SSLGetData_ID = 29503;
  S2CSLGetData_ID = 29504;
  C2SSLLev_ID = 29505;
  S2CSLLev_ID = 29506;
  C2SSLGrade_ID = 29507;
  S2CSLGrade_ID = 29508;
  C2SSLLight_ID = 29509;
  S2CSLLight_ID = 29510;
  C2SSLStar_ID = 29511;
  S2CSLStar_ID = 29512;
  C2SSLMosaic_ID = 29513;
  S2CSLMosaic_ID = 29514;
  C2SSLSoulResolve_ID = 29515;
  S2CSLSoulResolve_ID = 29516;
  C2SSLSoulHeCheng_ID = 29517;
  S2CSLSoulHeCheng_ID = 29518;
  C2SSLSoulWish_ID = 29519;
  S2CSLSoulWish_ID = 29520;
  C2SSLCall_ID = 29521;
  S2CSLCall_ID = 29522;
  C2SSLFightReport_ID = 29523;
  S2CSLFightReport_ID = 29524;

  /*******************************************切磋***************************************************/
  C2SQieCuo_ID = 29551;
  S2CQieCuo_ID = 29552;
  C2SGetQieCuoLog_ID = 29553;
  S2CGetQieCuoLog_ID = 29554;
  C2SGetQieCuoReport_ID = 29555;
  S2CGetQieCuoReport_ID = 29556;

  /*******************************************邀请有礼***************************************************/
  C2SWeiXinShareSuccess_ID = 29561;
  C2SFriendHelpDraw_ID = 29563;
  S2CFriendHelpDraw_ID = 29564;
  C2SFYTZRequestBind_ID = 29565;
  S2CFYTZRequestBind_ID = 29566;
  S2CFYTZRequestBindO_ID = 29567;
  C2SFYTZResponseBind_ID = 29569;
  S2CFYTZResponseBind_ID = 29570;
  S2CFYTZResponseBindO_ID = 29571;
  C2SFYTZUnBind_ID = 29573;
  S2CFYTZUnBind_ID = 29574;
  C2SFYTZGetBindUserInfo_ID = 29575;
  S2CFYTZGetBindUserInfo_ID = 29576;
  C2SGetShowUserInfo_ID = 29577;
  S2CGetShowUserInfo_ID = 29578;
  C2SGetHelpXunBaoData_ID = 29579;
  S2CGetHelpXunBaoData_ID = 29580;

  /*************************************************榜单竞技************************************************/
  C2SBangDanJJSetPartnerPos_ID = 29600;     //设置榜单竞技阵容位置
  S2CBangDanJJSetPartnerPos_ID = 29601;
  C2SBangDanJJInfo_ID = 29602;              //获取榜单竞技信息
  S2CBangDanJJInfo_ID = 29603;
  C2SBangDanJJFight_ID = 29604;             //榜单竞技挑战Boss
  C2SBangDanJJRankInfo_ID = 29605;          //拉取榜单竞技排行数据
  S2CBangDanJJRankInfo_ID = 29606;
  C2SBangDanJJViewFight_ID = 29607;         //查看战斗详情
  S2CBangDanJJViewFight_ID = 29608;
  S2CBangDanJJFight_ID = 29609;
  S2CBangDanJJTimesInfo_ID = 29610;         //更新榜单竞技次数信息
  S2CBangDanJJStateInfo_ID = 29611;         //更新榜单竞技状态信息
  C2SBangDanJJSweep_ID = 29612;             //榜单竞技扫荡
  S2CBangDanJJSweep_ID = 29613;

  /************************************************跨服******************************************************/
  S2NLogin_ID = 30001;
  N2SLogout_ID = 30002;
  N2SAddTouristTime_ID = 30003;

  //S Go语言游戏服务器
  //J java语言跨服服务器
  //P	java语言中心服务器
  //F Go语言战斗服务器
  //N Go语言新手服务器

  // 神域 50000~51999
  C2SCrossMessage_ID = 50100;
  S2JFightInit_ID = 50101;
  J2CFightInit_ID = 50102;
  J2FFightStart_ID = 50103;
  F2JFightStart_ID = 50104;
  J2CYJFightInit_ID = 50105;
  //java通知go 邮件
  J2SSendMail_ID = 50151;

  S2PSZCrossServer_ID = 50201;
  P2SSZCrossServer_ID = 50202;
  S2JSZPrepare_ID = 50203;
  J2SSZPrepare_ID = 50204;
  S2JSZJoin_ID = 50205;
  J2SSZJoin_ID = 50206;

  C2JSZBlocks_ID = 50207;
  J2CSZBlocks_ID = 50208;
  C2JSZOwnBuildings_ID = 50209;
  J2CSZOwnBuildings_ID = 50210;

  C2JSZOccupyBlock_ID = 50211;
  J2CSZOccupyBlock_ID = 50212;
  J2CSZLoseBlock_ID = 50213;
  C2JSZBuildings_ID = 50214; // 范围内建筑信息
  J2CSZBuildings_ID = 50215; // 建筑信息回包
  C2JSZBuilding_ID = 50216; // 单个建筑信息
  J2CSZBuilding_ID = 50217; // 建筑信息回馈
  C2SSZMine_ID = 50218; // 开始采集
  S2JSZMine_ID = 50219;
  J2CSZMine_ID = 50220; // 采集回包
  J2SSZReward_ID = 50222;
  S2JSZReward_ID = 50223;
  C2JSZSettlement_ID = 50224; // 收取资源
  J2CSZSettlement_ID = 50225; // 收取回包
  C2JSZPet_ID = 50226; // 宠物使用信息
  J2CSZPet_ID = 50227; // 返回宠物使用信息
  J2CSZUserBag_ID = 50228; //玩家进入神战时推送整个背包
  J2CSZBagChange_ID = 50229;
  J2CSZNewItem_ID = 50230; //获得新道具，前端飘字
  C2JSZRemItemNew_ID = 50231; //移除道具“新”标记
  J2CSZRemItemNew_ID = 50232;
  C2JSZExchange_ID = 50233; //使用物品
  J2CSZExchange_ID = 50234;
  S2JSZAddItem_ID = 50235;
  J2SSZAddItem_ID = 50236;
  C2JSZShenWei_ID = 50237; // 升级神位
  J2CSZShenWei_ID = 50238; //神位信息
  J2CSZTask_ID = 50239; //神战任务信息
  J2CSZTaskChange_ID = 50240;
  C2JSZGetTaskPrize_ID = 50241; //领取任务奖励
  J2CSZGetTaskPrize_ID = 50242; //领取任务奖励
  S2JSZTriggerTask_ID = 50243; //触发任务条件
  J2CSZRelogin_ID = 50244; // 重新进入神战
  J2CSZStrength_ID = 50245; // 体力信息
  S2JSZXianzong_ID = 50246;
  C2JSZRanking_ID = 50247; // 排行榜
  J2CSZRanking_ID = 50248; // 排行榜回包
  C2JSZReadReport_ID = 50249; // 战报
  S2JSZChat_ID = 50250;
  J2CSZChat_ID = 50251;
  J2CSZReports_ID = 50252;
  C2JSZMap_ID = 50253;
  J2CSZMap_ID = 50254;
  J2CSZState_ID = 50255;
  S2JSZGM_ID = 50256;
  C2JSZGetRankingPrize_ID = 50257;
  J2CSZGetRankingPrize_ID = 50258;
  C2JSZChats_ID = 50259;
  J2CSZChats_ID = 50260;
  J2CSZBuff_ID = 50261;
  J2CSZBuffs_ID = 50262;
  J2CSZStateTask_ID = 50263;
  J2CSZStateTaskChange_ID = 50264;
  C2JSZGetStatePrize_ID = 50265;
  J2CSZGetStatePrize_ID = 50266;
  J2SSZNotice_ID = 50267;
  C2JSZOther_ID = 50268;
  J2CSZOther_ID = 50269;
  C2JSZDeleteReport_ID = 50270;
  C2JSZOtherInfo_ID = 50271;
  J2SSZShowOther_ID = 50272;
  J2CSZShenShou_ID = 50273;
  C2JSZStartDropBuilding_ID = 50274;
  J2CSZStartDropBuilding_ID = 50275;
  C2JSZStopDropBuilding_ID = 50276;
  J2CSZStopDropBuilding_ID = 50277;
  C2JSZDropBuilding_ID = 50278;
  J2CSZDropBuilding_ID = 50279;

  C2JSZZoneEnter_ID = 50280;
  J2CSZZoneEnter_ID = 50281;
  C2JSZZonePlayers_ID = 50282;
  J2CSZZonePlayers_ID = 50283;
  C2JSZZoneMove_ID = 50284;
  J2CSZZoneMove_ID = 50285;
  C2JSZZoneAttack_ID = 50286;
  J2CSZZoneAttack_ID = 50287;
  J2CSZZonePlayerNumber_ID = 50288;
  J2CSZZoneDamageRanking_ID = 50289;
  J2CSZZoneDamageRankingChange_ID = 50290;
  J2CSZZoneBossOcuppy_ID = 50291;
  J2CSZZonePoint_ID = 50292;
  J2CSZAnnouncement_ID = 50293;
  C2JSZZonePlayerInSiteNumber_ID = 50294;
  J2CSZZonePlayerInSiteNumber_ID = 50295;
  J2CSZZonePVP_ID = 50296;
  J2CSZZoneHp_ID = 50297;
  J2CSZZoneBossViolentNotify_ID = 50298;
  J2CSZZoneBossViolent_ID = 50299;

  C2JSZCampMainCity_ID = 50300;
  J2CSZCampMainCity_ID = 50301;
  C2JSZMineInfo_ID = 50302;
  J2CSZMineInfo_ID = 50303;

  C2JSZGetZoneRanking_ID = 50330;
  J2CSZGetZoneRanking_ID = 50331;
  C2JSZGetZoneRankingPrize_ID = 50332;
  J2CSZGetZoneRankingPrize_ID = 50333;
  J2CSZZoneTask_ID = 50334;
  J2CSZZoneTaskChange_ID = 50335;
  C2JSZGetZoneTaskPrize_ID = 50336;
  J2CSZGetZoneTaskPrize_ID = 50337;

  C2SSZInfo_ID = 50350;
  S2CSZInfo_ID = 50351;

  J2CSZOwnBlocks_ID = 50352;

  C2JSZPlayerMapShow_ID = 50353;
  J2CSZPlayerMapShow_ID = 50354;

  J2CSZShenshouRanking_ID = 50355;
  J2CSZShenshouDamage_ID = 50356;
  J2CSZMyShenshouDamage_ID = 50357;

  C2JSZShenshouReward_ID = 50358;
  J2CSZShenshouReward_ID = 50359;
  C2JSZShenshouRewardInfo_ID = 50360;
  J2CSZShenshouRewardInfo_ID = 50361;
  J2CSZMainTask_ID = 50362;
  J2CSZMainTaskChange_ID = 50363;
  C2JSZGetMainPrize_ID = 50364;
  J2CSZGetMainPrize_ID = 50365;
  C2JSZOpenView_ID = 50366;
  J2SSZMainTask_ID = 50367;

  C2JSZHeart_ID = 50368;
  J2CSZHeart_ID = 50369;
  J2CSZCampBuff_ID = 50370;
  J2CSZCampBuffs_ID = 50371;

  J2CSZActInfos_ID = 50732;
  J2CSZActTaskInfos_ID = 50733;
  J2CSZActTaskChange_ID = 50734;
  C2JSZGetActTaskPrize_ID = 50735;
  J2CSZGetActTaskPrize_ID = 50736;
  S2JSZActRecharge_ID = 50737;

  C2JSZActWishRankInfo_ID = 50738;
  J2CSZActWishRankInfo_ID = 50739;
  C2JSZGetActWishRankPrize_ID = 50740;
  J2CSZGetActWishRankPrize_ID = 50741;

  C2JSZPassCheckInfo_ID = 50742;
  J2CSZPassCheckInfo_ID = 50743;
  J2CSZPassCheckTaskChange_ID = 50744;
  C2JSZGetPassCheckTaskPrize_ID = 50745;
  J2CSZGetPassCheckTaskPrize_ID = 50746;
  J2CSZAutoGetPassCheckTaskPrize_ID = 50747;
  C2JSZGetPassCheckPrize_ID = 50748;
  J2CSZGetPassCheckPrize_ID = 50749;
  C2JSZGetPassCheckLoopPrize_ID = 50750;
  J2CSZGetPassCheckLoopPrize_ID = 50751;
  S2PSZInfo_ID = 50752;
  P2SSZInfo_ID = 50753;
  S2JSZPassCheckBuyPrize_ID = 50754;
  J2CSZPassCheckBuyTimesUpdate_ID = 50755;
  C2SSZPassCheckBuyLevelExp_ID = 50756;
  S2CSZPassCheckBuyLevelExp_ID = 50757;
  C2JSZLogin_ID = 50758;
  S2CSZPassCheckBuyTimes_ID = 50759;
  S2JAddSzBuff_ID = 50760;

  J2CSZLMInfo_ID = 50761;
  J2CSZLMProgressInfo_ID = 50762;
  J2CSZLMStart_ID = 50763;
  C2JSZLMDungeonInfo_ID = 50764;
  J2CSZLMDungeonInfo_ID = 50765;
  S2JSZLMGuwu_ID = 50766;
  J2CSZLMGuwu_ID = 50767;
  J2SSZLMGuwuFail_ID = 50768;
  S2JSZLMResetMonster_ID = 50769;
  J2CSZLMResetMonster_ID = 50770;
  J2SSZLMResetMonsterFail_ID = 50771;
  C2JSZLMChallenge_ID = 50772;
  J2CSZLMChallenge_ID = 50773;

  C2SSZLMGuwu_ID = 50774;
  S2CSZLMGuwu_ID = 50775;
  C2SSZLMResetMonster_ID = 50776;
  S2CSZLMResetMonster_ID = 50777;
  J2CSZLMKillBoss_ID = 50778;
  C2JSZLMInfo_ID = 50779;
  J2CSZLMEnd_ID = 50780;
  J2CSZLMEliteMonsterInfo_ID = 50781;

  S2JSZDeleteChatRecord_ID = 50782;
  C2JSZMineRewardInfo_ID = 50783;
  J2CSZMineRewardInfo_ID = 50784;
  C2JSZMineReceiveReward_ID = 50785;
  J2CSZMineReceiveReward_ID = 50786;

  C2SEnterShenYu_ID = 51001;
  S2CEnterShenYu_ID = 51002;
  C2SLeaveShenYu_ID = 51003; // 离开神域
  S2CLeaveShenYu_ID = 51004; // 离开神域回包

  /************************************************异界妖门******************************************************/
  // 52000~52999
  S2PYJCrossServer_ID = 52201;
  P2SYJCrossServer_ID = 52202;
  S2JYJPrepare_ID = 52203;
  J2SYJPrepare_ID = 52204;
  S2JYJJoin_ID = 52205;
  J2SYJJoin_ID = 52206;

  J2SYJReward_ID = 52222;
  S2JYJReward_ID = 52223;

  S2JYJGM_ID = 52224;
  J2CYJRelogin_ID = 52225;

  C2SYJInfo_ID = 52226;
  S2CYJInfo_ID = 52227;

  J2CYJRound_ID = 52228;
  J2CYJAppearPlayer_ID = 52229;
  J2CYJAppearMonster_ID = 52230;
  J2CYJAppearBoss_ID = 52231;
  J2CYJDisappearPlayer_ID = 52232;
  J2CYJDisappearMonster_ID = 52233;
  J2CYJDisappearBoss_ID = 52234;
  C2JYJOther_ID = 52235;
  J2CYJOther_ID = 52236;
  S2JYJQuit_ID = 52237;

  C2JYJMove_ID = 52238;
  J2CYJMove_ID = 52239;
  C2JYJMoving_ID = 52240;
  C2JYJStop_ID = 52241;
  J2CYJStop_ID = 52242;

  J2CYJState_ID = 52243;

  C2JYJAttackMonster_ID = 52244;
  J2CYJAttackMonster_ID = 52245;
  C2JYJAttackBoss_ID = 52246;
  J2CYJAttackBoss_ID = 52247;
  J2CYJBossHp_ID = 52248;
  C2JYJCollect_ID = 52249;
  J2CYJCollect_ID = 52250;
  C2SYJOpen_ID = 52251;
  S2CYJOpen_ID = 52252;
  S2JYJOpen_ID = 52253;
  J2SYJOpen_ID = 52254;

  S2JYJXianzong_ID = 52255;
  J2CYJRanking_ID = 52256;
  J2CYJRankingChange_ID = 52257;
  J2CYJBossAnger_ID = 52258;
  J2CYJBossAddition_ID = 52259;
  J2CYJDrops_ID = 52260;
  J2CYJDrop_ID = 52261;
  J2CYJPlayer_ID = 52262;
  J2CYJBossNotice_ID = 52263;
  J2CYJCooldown_ID = 52264;

  C2JYJHeart_ID = 52265;
  J2CYJHeart_ID = 52266;

  J2CYJMonsterHp_ID = 52267;

  S2JYJChat_ID = 52268;
  J2CYJChat_ID = 52269;
  J2SYJNotice_ID = 52270;
  C2JYJChats_ID = 52271;
  J2CYJChats_ID = 52272;
  J2CYJAnnouncement_ID = 52273;
  J2SStartAuction_ID = 52274;

  C2JYJOtherInfo_ID = 52275;
  J2SYJShowOther_ID = 52276;
  S2CYJKeyTip_ID = 52277;  //异界妖门钥匙已满提示
  J2CYJChest_ID = 52278; //

  S2JYJDeleteChatRecord_ID = 52279;
  /*----------------------活动自选奖励--------------------------*/
  C2SActTaskChoosePrize_ID = 52301;
  S2CActTaskChoosePrize_ID = 52302;
  S2CActTaskChoosePrizeSend_ID = 52303;



  /*----------------------渠道红包协议--------------------------*/
  // 53000~53999
  C2SCpsRPPlayerJoin_ID = 53001;
  S2CCpsRPPlayerJoin_ID = 53002;
  S2CCpsRPPlayerData_ID = 53003;
  C2SCpsRPGetCfgInfo_ID = 53004;
  S2CCpsRPGetCfgInfo_ID = 53005;
  C2SCpsRPPlayerSwitch_ID = 53006;
  S2CCpsRPPlayerSwitch_ID = 53007;
  C2SCpsRPPlayerFinishTask_ID = 53008;
  S2CCpsRPPlayerFinishTask_ID = 53009;
  C2SCpsRPPlayerExchange_ID = 53010;
  S2CCpsRPPlayerExchange_ID = 53011;

  //-----------------------------------周年庆------------------------------/
  C2SGetWishTreeInfo_ID = 54001;
  S2CGetWishTreeInfo_ID = 54002;
  C2SReceiveWishTreeReward_ID = 54003;
  S2CReceiveWishTreeReward_ID = 54004;
  C2SSelectWishTreeReward_ID = 54005;
  S2CSelectWishTreeReward_ID = 54006;
  C2SBirthday_ID = 54007;
  S2CBirthday_ID = 54008;
  C2SDoCake_ID = 54009;
  S2CDoCake_ID = 54010;
  C2SGetPuTianTongQingData_ID = 54011;
  S2CGetPuTianTongQingData_ID = 54012;
  C2SRecPuTianTongQing_ID = 54013;
  S2CRecPuTianTongQing_ID = 54014;
  C2SGetYiLuYouNiData_ID = 54015;
  S2CGetYiLuYouNiData_ID = 54016;
  C2SRecYiLuYouNi_ID = 54017;
  S2CRecYiLuYouNi_ID = 54018;
  C2SCampPKInfo_ID = 54019;
  S2CCampPKInfo_ID = 54020;
  C2SSelectCamp_ID = 54021;
  S2CSelectCamp_ID = 54022;
  C2SDoVote_ID = 54023;
  S2CDoVote_ID = 54024;
  C2SExchangeAtRShop_ID = 54025;
  S2CExchangeAtRShop_ID = 54026;
  C2SReceiveAllCake_ID = 54027;
  S2CReceiveAllCake_ID = 54028;
  C2SGetYearTimeShop_ID = 54029;
  S2CGetYearTimeShop_ID = 54030;
  C2SYearTimeShopRefresh_ID = 54031;
  S2CYearTimeShopRefresh_ID = 54032;
  C2SYearTimeShopExchange_ID = 54033;
  S2CYearTimeShopExchange_ID = 54034;
  C2S1RMBPet_ID = 54035;
  S2C1RMBPet_ID = 54036;
  C2SCampRewardRecords_ID = 54037;
  S2CCampRewardRecords_ID = 54038;

  C2SHiedActRed_ID = 54039;

  //诸神之战  -------55001-55200 已用-------

  /************前后端战力同步**********/
  C2SGetAttr_ID = 55301;
  S2CGetAttr_ID = 55302;

  S2CSendActiveNotice_ID = 55311;
}

/*-------------------------------------------------登录服务器 start---------------------------------------------------*/

//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
// 服务器之间通讯
message S2SServerInfo {
  int64 ServerId = 1; //服务器编号，
  int64 ServerType = 2; //服务器类型
  int32 AreaId = 3; // 区服ID
}
message S2SRequestMsg {
  int32 RequestID = 1;
  int32 CallType = 2;
  int64 ServerId = 3; //服务器编号
  int64 UserId = 5; //用户编号
  bytes Pck = 4;
}
message S2SResponseMsg {
  int32 RequestID = 1;
  int32 Tag = 2;
  bytes Pck = 3;
}
message S2SServerPlayerPck {
  int64 UserId = 1;
  bytes Pck = 2;
}
//指定用户处理
message S2SServerPlayerHandle {
  int64 UserId = 1;
  bytes Pck = 2;
}

message S2KPlayerData {
  int64 UserId = 1;
  RoleDbInfo Player = 2;
}

//心跳包
message Ping {
}
message Pong {
}
//通知跨服用户的ping
message S2KCrossPing {
  int64 UserId = 1;
}
//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//mysql
enum PLAYER_ATTR {
  GOLD = 0; //金币
  DIAMOND = 1; //钻石
  LEVEL = 2; //等级
  EXP = 3; //经验
}
//通用混合类型数据结构
message CommonType {
  int32 A = 1;
  int32 B = 2;
}

//服务器时间
message S2CServerTime {
  int64 T = 1;
}

//开服天数
message S2CServerAge {
  int32 T = 1;
  int32 UT = 2; //连服开服天数
  int32 MT = 3; //连服合服天数
}

message IntAttr {
  int32 k = 1;
  int64 v = 2;
}
message StrAttr {
  int32 k = 1;
  string v = 2;
}
//道具信息
message ItemInfo {
  int32 ItemId = 1;
  int64 ItemNum = 2;
  int32 Bind = 3; //是否绑定，0绑定，1不绑定
  int32 ItemValid = 4; //有效期

  int32 DSL = 5; //魔魂等级
  int32 DSS = 6; //魔魂星级
}
message ItemData {
  string Id = 1; //唯一ID
  int32 Pos = 2; //所在位置 //1 未装备 2 已装备
  int32 IId = 3; //模板id
  int64 N = 4; //数量
  int32 B = 5; //是否绑定 1绑定
  int32 A = 6; //附加属性条数
  int64 V = 7; //到期时间戳
  int32 DSL = 8; //魔魂等级
  int32 DSS = 9; //魔魂星级
  int32 DSPos = 10; //魔魂镶嵌位置，0-10，0表示未镶嵌
  repeated IntAttr Attr = 11; //随机属性
  Pet2 Pet2 = 12; //宠物属性
  int32 Star = 13; //装备星级
  int32 MaxStar = 14; //装备历史最高星级
  int32 IsNew = 15; //是否为新道具 0: 否；1: 是
  int32 State = 16; // 婚戒状态：0未结婚，1已结婚，2结婚赠送
  int64 PartnerId = 17; // 结婚伴侣
  string Vows = 18; // 结婚誓言
  int32 Lev = 19; //等级
  repeated int32 FeatureId = 20; //特性Id
  repeated Skill HLSkill = 21; //(幻灵--技能、龙魂技能)
  int32 YQ = 22; //幻灵--元气消耗
  int32 ObjType = 23; //道具类型
  int32 EquipPart = 24; //装备部位
  int32 Quality = 25; //装备品质
  int32 HJLev = 26; //化金等级
  int32 Exp = 27;       //当前经验
  int32 TotalExp = 28;  //总经验
  int32 PEEffectId = 29; //宠物装备专属效果Id
  int32 PESuitId = 30;   //宠物装备套装Id
  string PetId = 31;     //穿戴该装备的宠物Id
  int32 Lock = 32;       // 是否锁定 1 是
}

message ItemNum {
  int32 IId = 3; //表ID
  int64 N = 4; //数量
}
message Pos {
  int64 X = 1;
  int64 Y = 2;
}


message LimitTimesData {
  int32 Id = 1; //限制ID
  int32 P = 2; //参数
  int32 Use = 3; //使用次数
  int32 Left = 4; //购买的剩余次数
  int32 AlreadyBuyTimes = 5; //通过购买获得的次数
  int32 OtherGetTimes = 6; //其他途径获得的次数（自动恢复、道具兑换等）
}
//角色限制次数
message RoleLimitTimes {
  repeated LimitTimesData Items = 1;
}

message RoleDbInfo {
  int32 UserId = 1;
  string Nick = 2;
  int32 RoleId = 3;
  int32 Sex = 4;
  int32 LoginAreaId = 5;
  repeated IntAttr intAttr = 6;
  repeated StrAttr strAttr = 7;
  RoleBag Bag = 8;
  repeated Grade Grade = 9; //玩家升阶系统相关信息
  RoleLimitTimes LimitTimes = 10; //角色限制次数
  repeated Counter Counters = 11; //角色所有计数器
  repeated Task Tasks = 12; //角色所有正在做的任务
  RoleMail Mails = 13;
  repeated PetA PetAs = 15; //角色所有仙侣
  //    repeated SkyGod SkyGods = 17; //角色所有天神
  repeated int32 PartnerSuit = 19; //已激活的宠物缘分列表
  repeated Skill ActiveSkills = 20; //主动技能列表
  repeated Skin Skins = 21; //已激活的所有类型皮肤
  repeated SkinActInfo SkinActInfo = 22; //已激活的套装信息
  repeated int32 VIPPrize = 23; //已领取的VIP等级礼包(存放VIP等级)
  DbMarryInfo MarryInfo = 24; //用户姻缘
  repeated Precious Precious = 25; //所有法宝
  DbPlayerWestExp PlayerWestExp = 26; //取经东归相关
  repeated int32 SendShopItems = 28; //关注寄售行商品
  repeated DragonLogItem DragonLogs = 29; //龙宫夺宝日子
  repeated StagePrizeInfo StagePrize = 30; //关卡奖励
  repeated SMMonsterInfo SMMonster = 32; //刷新出来的师门怪物
  int32 CreateCpsId = 33;
  repeated int32 NewPrize = 34; //已领取的新手礼包(存放礼包赠送对应的功能表ID)
  repeated int32 AchieveShow = 35; //客户端已经弹窗的成就任务ID（每个任务终身只弹一次）
  RoleFriend FriendInfo = 36; //好友数据
  DbMasterData MasterInfo = 37; //师徒数据
  repeated DBDailyTask DailyTask = 38; // 日常任务
  repeated JJCChange JJCChange = 39; //竞技场排名变化且未发奖励
  repeated Devil Devils = 40; //角色所有魔灵
  BossHillData BossHill = 42; //仙山夺宝数据
  repeated Player81Data Player81 = 43; //81难数据
  S2CHistoryTaskInfo HTI = 44; // 主线任务数据
  TreasureData TreasureData = 45; //藏宝图数据
  repeated FinishTask PTasks = 46; //角色所有已做完但未领奖的任务
  repeated FinishTask FTasks = 47; //角色所有已领完奖的任务
  repeated GodItem GodItem = 48; //所有神器
  //    repeated HolyBeast HolyBeasts = 50; //所有圣兽
  //    int32 HolyBeastSuitLevel = 51; //十二圣兽套装等级
  //    ExpeditionData ExpeditionData = 52; //远征数据
  repeated RobberyItem RobberyItem = 54; //渡劫缓存数据
  //    repeated FairySheet FairySheets = 55; //仙魔人物志
  //    repeated FairyAchievement FairyAchievements = 56; //仙魔成就
  repeated RobberData RobberData = 57; //渡劫数据
  repeated ActPlayerData ActPlayerData = 58; //运营活动数据
  repeated int32 ActExit = 59; //已退出的活动ID，永不参加
  repeated RobberyLogItem RobberyLogs = 60; //渡劫日志
  int32 JJCPrizeTime = 61; // 上次发放竞技场奖励的时间
  repeated int32 VIPGift = 62; //已购买的VIP等级礼包(存放VIP等级)
  repeated DevilPos DevilPos = 63; // 魔灵附身位置
  PlayerDragon PlayerDragon = 64; // 玩家龙宫数据
  S2CClientDb ClientDb = 65; //帮助前端缓存数据
  repeated S2CPlayerDareBossInfo FairyDareData = 66; //仙魔挑战数据
  repeated int32 RoleGodPrize = 67; //已领取的仙阶达标奖励等级
  int32 CreateServerId = 68; //创角服务器id
  repeated ZF ZF = 70; //阵法数据
  repeated PreciousPos PreciousPos = 71; //法宝位置数据
  repeated PhotoBook PhotoBooks = 72; //角色所有图鉴
  repeated IntAttr ItemAttr = 73; //物品属性
  repeated int32 ChargeGift = 74; //已购买的推荐礼包
  repeated Task YesterdayTasks = 75; //玩家昨日日常任务情况
  repeated ItemData Pet2s = 76; //角色所有新版宠物
  RoleEnemys Enemys = 78; //仇人数据
  RoleInspires Inspires = 79; //鼓舞数据
  repeated PlayerPersonalBossData PersonalBoss = 80; //个人Boss数据
  repeated PlayerVipBossData VipBoss = 81; //至尊Boss数据
  repeated PlayerMultiBossData MultiBoss = 82; //多人Boss数据
  repeated EquipPos EquipPos = 83; //装备格养成数据
  repeated EnemyRecord EnemyRecord = 84; //仇人记录
  DBPlayerRealm PlayerRealm = 85; //境界
  repeated ItemData AFKEquip = 86; //角色待领取的挂机装备
  DBSignData SignData = 87; //签到数据
  repeated int32 FnPreviewPrize = 88; //已领取的功能预告奖励(存放奖励对应的功能表ID)
  WeddingRoom WeddingRoom = 89; //结婚房屋
  WeddingRing WeddingRing = 90; //结婚房屋
  DBPlayerBaoWu PlayerBaoWu = 91; //宝物
  DBPlayerPractice PlayerPractice = 92; //修炼
  BusinessData BusinessData = 93; //跑商数据
  DBPlayerTitleGift PlayerTitleGift = 94; //玩家主题礼包数据
  repeated Counter WeddingCounters = 95; //角色仙缘计数器每日初始计数
  repeated ItemData EquipCreate = 96; //角色打造出的所有装备备份
  PlayerXuanShangBossData XuanShangBossData = 97; //悬赏boss数据
  repeated DigTreasureItem DigTreasureLog = 98; //仙界宝藏挖宝记录
  repeated EquipDuJin EquipDuJins = 99; //装备镀金信息
  EquipJingLian EquipJingLians = 100; //套装精炼信息
  repeated ItemInfo TmpBagSeekingDragon = 101; //临时背包：寻龙点穴
  repeated TeamInstanceData TeamInstanceData = 102; //组队副本数据
  EquipZhuHun EquipZhuHuns = 103; //装备铸魂信息
  int32 CreateAreaId = 104;
  int32 LoginServerId = 105;
  repeated DBDirectGift DirectGift = 106; //直购礼包数据
  repeated SecretMall SecretMall = 107; //神秘商店数据
  repeated int32 BuyGoods = 108; //买过的商品
  repeated DBDirectGiftGroup DirectGiftGroup = 109; //直购礼包组数据
  repeated int32 PetCounter = 110; //获得过的宠物统计
  repeated DBActScore ActScore = 111; //活动积分数据
  repeated SkinExtAttr SkinExtAttr = 112; //时装套装激活情况
  repeated ItemData BossHomeWareHouse = 113; //Boss之家收益仓库
  WeddingIntimacy WeddingIntimacy = 114; //仙缘亲密度
  repeated PhotoBookPrize PhotoBookPrize = 115; //玩家所有已领取的图鉴收集奖励
  int32 ShowAreaId = 116;
  repeated WeddingToken WeddingToken = 117; //仙缘信物
  repeated ActLuck ActLuck = 118; //奇缘活动数据
  SDEvent SDEvent = 119; //寻龙点穴事件位置信息
  repeated SDEventInfo SDEventInfo = 120; //寻龙点穴事件信息
  repeated string SDEventLog = 121; //寻龙点穴事件log
  DBPlayerXZXS PlayerXZXS = 122; //仙宗悬赏
  repeated DbXunBaoLog DbXunBaoLog = 123; //寻宝个人记录
  repeated Partner Partners = 124; //伙伴，目前只有仙童
  PetAMerge PetAMerge = 125; //合体仙侣数据
  repeated SavageBeast SavageBeast = 126; //八荒凶兽
  DBPlayerIllusion PlayerIllusion = 127; //幻境副本
  repeated DrugBase DrugBase = 128; //丹药数据
  repeated TotemInfo TotemInfos = 129; //已解锁的宠物图腾
  repeated string TotemHelpPets = 130; //设置的外援宠物
  repeated Task PrizeTasks = 131; //角色所有已做完但未领奖的任务（类型转储）
  repeated Task FinishTasks = 132; //角色所有已领完奖的任务（类型转储）
  //    repeated Task DelTask = 133; //角色被删除的任务数据（9.10操作后，防止删除错误，先在这里做缓存，以便紧急修复）
  repeated PlayerXLDBossData xldBossData = 134; //凶灵岛Boss数据
  repeated EquipAllData EquipAllData = 135; //装备全部数据
  repeated Develop Develops = 136; //所有养成系统数据
  repeated S2CAutoPushGift PushGiftArray = 137; // 用户推送礼包
  repeated ItemData HLTempBag = 138; //幻灵秘境临时仓库
  SwordSoul SwordSouls = 139; //剑魂信息
  DBPlayerYJFB PlayerYJFB = 140; //偃甲副本
  repeated DBWareHouse WareHouse = 141; //收益仓库(通用)
  repeated PlayerKingEquip PlayerKingEquip = 142; //王者装备
  DBPlayerFaZheng PlayerFaZheng = 143; // 法阵系统
  int32 ShowMergeAreaId = 144; //合区ID
  repeated Skill FeatureIncrease = 145; //特性增益
  repeated MiJingBossFocusInfo MiJingBossFocus = 146; //秘境Boss关注数据
  repeated HelperCfg HelperCfg = 147; ////玩家勾选的托管配置
  repeated HelperLog HelperLog = 148; //玩家勾选的托管log
  repeated PlayerHeroDevelop PlayerHeroDevelop = 149; //英雄养成数据
  repeated FristMergeInfo MergeFirstActList = 150; //合服首战
  DBFamilyJJCData FamilyJJC = 151; // 家族竞技数据
  DBShenyuData ShenyuData = 152; // 神域数据
  repeated DBRandomShop RandomShop = 153; //随机商店数据
  DBShengWuData ShengWu = 154; // 圣物系统数据
  repeated PlayerHeroAchi PlayerHeroAchi = 155; //英雄成就信息
  repeated PlayerHeroBond PlayerHeroBond = 156; //英雄羁绊信息
  repeated DBTimeShop TimeShop = 157; //玩家时光商店商品
  DBPrefectWarData PrefectWarData = 158; //征战九州
  repeated TeamUnit TeamUnit = 159; //组队出战自定义
  repeated TotemPetPassiveNotice TotemPetPassiveNotice = 160; //宠物被动下阵，图腾变化信息
  PlayerAlien PlayerAlien = 161; //异兽数据(弃用)
  repeated PlayerGoldDrug PlayerGoldDrug = 162; //神丹
  DBJungleHuntData JungleHuntData = 163; //仙林狩猎(异兽副本)
  DBPlayerShenYuHall PlayerShenYuHall = 164; // 神域殿堂
  repeated PlayerAlien PlayerAliens = 165; //异兽数据
  repeated FightHpGroup FightHpGroup = 166; //玩家保存血量数据结构
  repeated DBPrefectWarData PrefectWarAllData = 167; //征战九州扩展之后的数据
  PlayerNewFriend PlayerNewFriend = 168; //新好友数据
  DBQiMenDunJiaData QiMenDunJiaData = 169; //奇门遁甲数据
  repeated AwakenPet2 AwakenPets = 170; //神兽觉醒吞噬宠物
  DBYJYMData YJYMData = 171; // 异界妖门数据
  repeated int64 RankSettleTagUnionServer = 172;  //排行榜结束结算数据处理标识(连服)
  repeated int64 RankSettleTagServerData = 173;   //排行榜结束结算数据处理标识(非连服)
  repeated C2SActTaskChoosePrize ActTaskChoosePrize = 174;  //活动任务玩家自选奖励
  int32 IsAutoCreate = 175;//是否自动创角
  repeated ActTaskChoosePrize ActTaskChoose = 176;  //活动任务玩家自选奖励
  repeated DBBuyTimes BuyTimes = 177; //玩家购买商品次数数据，用于判定IOS下，本商品是否可以发货，发货后删除记录
  repeated ShenYuTipsState ShenYuTipsStateData = 178; //神域界面状态数据
  repeated WarriorGoldChange WarriorGoldChangeData = 179; //战神神变数据
  PlayerSL PlayerSL = 180; // 神龙数据
  repeated SwordZhenData SwordZhenData = 181; //剑阵数据（老）
  repeated DBMoonlightBox MoonlightBox = 182; //月光宝盒
  repeated int32 MoonlightRecord = 183; //月光宝盒购买记录
  PlayerSYWishData SYWishData = 184;  // 神域许愿
  repeated DbQieCuoLog DbQieCuoLog = 185;        // 切磋记录
  repeated SkinsExtData SkinsExtData = 186;     //皮肤额外数据
  repeated SysState PlayerLianHua = 187; //炼化系统
  repeated SwordZhenData_New SwordZhenData_New = 188; //剑阵数据（新）
  repeated SingleDayRecharge SingleDayRecharge = 189; //每日充值数据
  int32 SingleDayConsume = 190; //每日消费仙玉数据
  int32 SingleDayConsume2 = 191; //每日消费元宝数据
  repeated int32 PetEquipOptions = 192; // 宠物装备玩家保存选项信息
  repeated int32 LiveStreamingTaskIds = 193; //领取了直播奖励的Id
}

message SingleDayRecharge {
  int32 Amount = 1; // 金额
  int32 Times = 2; // 次数
}

//装备全部数据
message EquipAllData {
  int32 FuncId = 1; //功能类型
  int32 ObjId = 2; //同功能下的具体类型
  repeated EquipData EquipData = 3; //装备数据
  int32 SuitLev = 4; //套装等级
  int32 StrengthSLev = 5; //强化大师等级
  int32 Lev_YanJia = 6; //偃甲等级
  int32 SuitType = 7; //偃甲套装类型
  repeated CoreList CoreList = 8; //偃甲核心
  int32 ShengHenLv = 9; // 圣痕等级
  repeated int32 ShengHenSuit = 10; // 圣痕套装
  repeated int32 ShengHenSkill = 11; // 圣痕技能
  repeated SoldierSoulDrug SoldierSoulDrug = 12; //偃甲兵魂丹药
  int32 SoldierSoulSkillLev = 13; //偃甲技能等级
  repeated int32 EquipBreakType = 14; //装备分解类型
  repeated int32 MosaicBreakType = 15; //镶嵌分解类型（符文）
}

//偃甲兵魂丹药
message SoldierSoulDrug {
  int32 Id = 1; //Id
  int32 Lev = 2; //等级
  int32 Count = 3; //数量
}

//偃甲核心
message CoreList {
  int32 Id = 1; //Id
  int32 Wear = 2; //穿戴
  int32 Lev = 3; //等级
  int32 Star = 4; //星级
}

//装备数据
message EquipData {
  int32 Pos = 1; //位置
  int32 ItemId = 2; //道具Id
  int32 SL = 3; //强化等级
  repeated MosaicInfo MosaicInfo = 4; //镶嵌信息
  string SItemId = 5; //唯一Id
  int32 RL = 6; //精炼等级
  int32 RLExp = 7; //精炼经验值
}

//镶嵌信息
message MosaicInfo {
  int32 Typ = 1; //镶嵌位置
  string Id = 2; //道具唯一Id
}

//丹药数据
message DrugBase {
  int32 Class = 1; // 1:仙童
  int32 Type = 2; // 1--4位置丹药
  int32 Count = 3; // 吃的数量
}

//合体天仙信息
message PetAMerge {
  repeated PetAPosInfo PetAPosInfo = 1; //位置信息
  int32 PetAMergeActive = 2; //合体仙侣激活
  int32 PetAMergeId = 3; //合体仙侣ID
  int32 PetAMergeQuality = 4; //合体仙侣品质
  int32 PetAMergeAwake = 5; //合体仙侣觉醒
  int32 AwakeQuality = 6; //觉醒品质
}

//合体天仙位置信息
message PetAPosInfo {
  int32 Pos = 1; //位置1--6
  int32 PetAId = 2; //天仙ID
}

//寻龙点穴事件信息
message SDEventInfo {
  string EventUid = 1; //
  int32 EventId = 2; //
  int64 EndTime = 3; //事件结束时间
  int64 ReturnTime = 4; //能够领奖时间--好心好报
  int64 ReturnRec = 5; //能否领取--好心好报
}

//寻龙点穴事件位置信息
message SDEvent {
  int32 Floor = 1; // 层数
  repeated PosInfo PosInfo = 2; // 位置信息
}

//位置信息
message PosInfo {
  int32 Pos = 1; // 位置
  int32 EventId = 2; // 事件ID
}

//奇缘数据
message ActLuck {
  int32 ActId = 1; // 活动ID
  int32 Times = 2; // 今天触发次数
  int64 TouchTime = 3; //触发时间
  int32 State = 4; //1：通知玩家开启
}
//仇人记录
message EnemyRecord {
  int64 Time = 1; // 记录时间
  int32 InstanceType = 2; //战斗场景类型
  string Nick = 3; //玩家昵称
  string World = 4;
}
//渡劫数据
message RobberData {
  int32 Id = 1;
  int64 Times = 2;
}
//藏宝图
message TreasureData {
  int64 Max3Star = 1; //最大的3星关卡
  repeated int64 Stage = 2; //通关关卡和星数  关卡<<16+start
  int64 MaxPrize = 3; //领取的最大星星数量
  repeated int64 GetPrize = 4; //已经领取奖励的关卡
  int64 MaxBoxId = 5; //最大领取宝箱数量
  repeated int64 BoxIds = 6; //不按照顺序领取宝箱的数据
}

//竞技场排名变化且未发奖励情况
message JJCChange {
  int32 T = 1; // 日期
  int32 R = 2; // 排名
}

message BaseDbInfo {
  repeated IntAttr intAttr = 1;
  repeated StrAttr strAttr = 2;
}

message Skin {
  int32 Id = 1; //皮肤ID
  int32 W = 2; //是否穿戴，0否，1是
  int64 V = 3; //过期时间戳
  int32 Old = 4; //是否是被替换掉的皮肤，0否，1是
  int32 L = 5; //当前等级，默认0
}
// 时装套装收集信息
message SkinExtAttr {
  int32 SuitId = 1; //时装套装Id
  int32 Num = 2; //件数
  int32 AttrId = 3; //时装套装激活属性Id
}
// 先转激活信息
message SkinActInfo {
  int32 SuitId = 1; //仙装Id
  int32 ActNum2 = 2;
  int32 ActNum4 = 3;
  int32 Level = 4;
}

//玩家基础数据
message RoleBaseInfo {
  int32 UserId = 1;
  string Nick = 2;
  int64 LogoutTime = 3;
  int64 FightValue = 4;
  int32 VipLevel = 5;
  int32 RoleId = 6;
  bool OnLine = 7;
}
message C2SChangeNick {
  string Nick = 1;
  int32 RoleId = 2; //改后的种族ID
}
message S2CChangeNick {
  int32 Tag = 1;
}
//用户充值数据
message PlayerChargeData {
  int64 UserId = 1; //用户编号
  int32 GoodsId = 2; //商品编号
  string ChannelOrderId = 3; //订单编号
  string PfOrderId = 4; //订单编号
  int32 ChannelId = 5; //渠道编号
  int32 RealAmount = 6; //实际充值
  string ExtraInfo = 7; //订单扩展信息
}

//王者争霸数据
message KingData {
  int32 State = 1; //活动状态
  int64 StartTime = 2; //记录活动开始的周一0点时间戳，用于区分每次王者争霸活动
  repeated KingPlayerData PlayerData = 3; //本服所有玩家数据，已排序
  repeated KingPlayerData LastWeekPlayerData = 4; //本服所有玩家上周数据，已排序
  int64 LastEndTime = 5; //记录活动上次结束时间
}

message KingPlayerData {
  int32 Id = 1; // 玩家ID
  int32 KingRank = 2; // 星级
  int32 Win = 3; // 净胜场
  int32 ContinueWin = 4; // 连胜场
  int32 Times = 5; //当前剩余挑战次数
  int32 NextTimes = 6; //下次恢复次数时间戳
  int32 IsRobot = 7; //是否是机器人。只预设字段在逻辑中使用，并不参与数据存储
}

message JJCData {
  int32 Id = 1; // 玩家ID
  int32 JJC = 2; // 竞技场排名
}

//服务器全局数据
message ServerData {
  int32 ServerId = 1; // 服务器ID
  int32 AreaId = 2; // 区服ID
  repeated DragonLogItem DragonLogs = 3; //龙宫夺宝日志
  string FirstNick = 4; //科举存储信息
  repeated PlayerChargeData PlayerCharge = 5; //充值数据
  //    int32 JJCPrizeTime = 7; //上次发送9点竞技场奖励的日期
  repeated Instance81Data Instance81 = 8; //81难
  WorldBossKillData WorldBossKillData = 9; //世界boss击杀信息
  repeated RobberyLogItem RobberyLogs = 11; //渡劫全服日志
  repeated JJCData JJCData = 12; //竞技场排名数据
  repeated ActGroupData ActGroupData = 13; //活动组轮询数据
  int64 NowDay = 14; //服务器当前天
  repeated DrawDbLog DrawLog = 16; //抽奖记录
  repeated ChargeReturnDbLog ChargeReturnLog = 17; //充值返利log
  int64 ResetChargeTime = 18; //通过后台设置的服务器重置充值双倍时间
  repeated MeltRecord MeltRecord = 19; //熔炼掉落记录
  Sect SectData = 20; // 仙宗
  repeated JobInfo SectRank = 21; // 仙宗排行
  SectGodAnimalInfo SectGodAnimalInfo = 22; // 仙宗神兽信息
  SectPastureData SectPastureData = 23; // 仙宗灵兽园数据
  repeated GodAnimalPlayerData GodAnimalPlayerData = 25; // 神兽试炼玩家当前数据
  repeated GodAnimalPassData GodAnimalPassData = 26; // 神兽试炼玩家通关数据
  repeated DBFamily Family = 27; //家族数据
  repeated TouristTime TouristTime = 28; //游客体验时间
  repeated BossGoodDrop BossGoodDrop = 29; //Boss极品掉落记录
  repeated WeddingTie WeddingTie = 30; //征婚帖
  repeated WeddingTag WeddingTag = 31;
  repeated DigTreasureItem DigTreasureLog = 32; //仙界宝藏挖宝记录
  int64 RefreshShopTime = 33; //上次刷新神秘商店时间
  LimitFightAllData LimitFightAllData = 34; //极限挑战数据
  repeated ActTimes ActTimes = 35; //所有玩家冲榜抢购总次数
  repeated DbDelayClearRankEndData DbDelayClearRankEndData = 36; //所有排行榜的活动结束返回给玩家的结算数据
  //    repeated DBYiJiEntrustAll DBYiJiEntrustAll = 37; //所有遗迹争夺玩家委托数据
  repeated DBXZXSHelpPartner DBXZXSHelpPartner = 38; //所有玩家的仙宗悬赏助战伙伴数据
  repeated DBYiJiMailData DBYiJiMailData = 39; //遗迹争夺离线玩家发邮件
  //    repeated DBPlayerEntrust DBPlayerEntrust = 40; //所有玩家的通用委托数据
  int64 WorldLevelOfToday = 41; //每天0点的世界等级
  int64 WorldLevelOfWeek = 42; //每周0点的世界等级
  repeated DbDelayClearRankEndDataN DbDelayClearRankEndDataN = 43; //所有排行榜的活动结束后的结算数据
  DBSectFightInfo SectFightInfo = 44; //仙宗争夺战活动数据
}

/*****************************极限挑战****************************/
//极限挑战数据
message LimitFightAllData {
  int32 PassCount = 1; //全服通关次数
  int32 Layers = 2; //全服该打第几层数
  int64 BossHp = 3; //bossHp
  int64 LeaderUserId = 4; //当前秘境之主UserId
  repeated LimitFightData LimitFightData = 5; //玩家数据
  repeated LimitFightRankData RankIngerData = 6; //积分排行榜数据
  repeated LimitFightRankData RankFightData = 7; //战力排行榜数据
}

message LimitFightData {
  int64 UserId = 1; //玩家ID
  int32 Layer = 2; //个人领奖层数
  repeated int32 SpeedRewardLayers = 3; //已领过累计奖励的层数
  int32 Count = 4; //剩余次数
  int64 RecoveryTimes = 5; //开始恢复的时间点
  int64 Integral = 6; //积分
  repeated int32 LayerID = 7; //双倍未领取的层数\
}

message LimitFightRankData {
  int64 UserId = 1;
  string Nick = 2;
  int32 RoleId = 3;
  int64 AreaId = 4;
  int32 Head = 5; //头像资源ID
  int32 HeadFrame = 6; //头像框资源ID
  int64 Value = 7;
  int64 Sort = 8;
  int64 ShowAreaId = 9; //ID（用于前端显示）
  string World = 10; //世界简称
}

message SectRankData {
  int64 ServerId = 1;
  string SectName = 2; //仙宗名字
  string SectLeaderName = 3; //宗主名字
  int64 AreaId = 4; //宗主区ID
  int64 Value = 5;
  int64 Sort = 6;
  int64 SectLeaderUserId = 7; //宗主UserId
  int64 ShowAreaId = 8; //宗主区ID（用于前端显示）
  int64 ShowSectAreaId = 9; //合服后仙宗的区ID（用于前端显示）
  string World = 10; //个人的世界简称
  string SectWorld = 11; //合服后仙宗的世界简称
}

//获取数据
message C2SGetLimitFightData {
  int32 ActId = 1; //活动ID
}

message S2CGetLimitFightData {
  int32 Tag = 1;
  int32 IsStart = 2; //活动是否开启
  int32 IsPass = 3; //是否通关
  int32 PassCount = 4; //全服通关次数
  int32 Layers = 5; //当前关卡
  int32 PlayerLayers = 6; //个人关卡领奖层数
  repeated int32 SpeedRewardLayers = 7; //已领过累计奖励的层数
  int64 BossHp = 8; //boss当前血量
  int64 BossMaxHP = 9; //boss最大血量
  int32 Count = 10; //剩余次数
  int32 MaxCount = 11; //最大次数
  int64 RecoveryTimes = 12; //恢复时间
  int64 ActEndTimes = 13; //活动结束时间
  int64 FightValue = 14; //推荐战力
}

//挑战
message C2SChallengeLimitFight {

}
message S2CChallengeLimitFight {
  int32 Tag = 1;
  int32 IsWin = 2; //是否赢
  int32 IsPass = 3; //是否通关
}

//领取关卡奖励
message C2SRecLimitFightReward {

}
message S2CRecLimitFightReward {
  int32 Tag = 1;
}

//领取累计关卡奖励
message C2SRecLimitFightSpeedReward {
  int32 Layer = 1; //闯关进度
}
message S2CRecLimitFightSpeedReward {
  int32 Tag = 1;
  int32 Layer = 2; //闯关进度
  repeated int32 SpeedRewardLayers = 3; //已领过累计奖励的层数
}

//获取排行榜（积分、伤害）
message C2SLimitFightRank {
  int32 RankType = 1; //1:积分 2：伤害
}
message S2CLimitFightRank {
  int32 Tag = 1;
  int32 RankType = 2; //1:积分 2：伤害
  int32 PlayerSort = 3; //自己的排名
  int64 PlayerValue = 4; //自己的值
  repeated LimitFightRankData RankData = 5; //战力排行榜数据
}

//获取连服仙宗排行榜
message C2SLimitFightSectRank {
}
message S2CLimitFightSectRank {
  int32 Tag = 1;
  int32 Sort = 2; //本服的排名
  int32 Value = 3; //本服的值
  repeated SectRankData RankData = 4; //仙宗通关次数排行
}

//购买次数
message C2SLimitFightBuyTimes {
}
message S2CLimitFightBuyTimes {
  int32 Tag = 1;
  int32 Count = 2; //当前剩余次数
  int64 RecoveryTimes = 3; //恢复时间
}

//获取购买信息
message C2SLimitFightBuyInfo {
}
message S2CLimitFightBuyInfo {
  int32 Coin = 1; //货币数量
  int32 CoinType = 2; //货币类型
  int32 Times = 3; //挑战次数
  int32 LeftTimes = 4; //剩余次数
  int32 TotalTimes = 5; //购买次数上限
  int32 NoticeTimes = 6; //预告次数
  int32 NoticeVip = 7; //预告vip
}

//通知玩家恢复次数
message S2CLimitFightUpdateTimes {
  int32 Tag = 1;
  int32 Count = 2; //当前剩余次数
  int64 RecoveryTimes = 3; //恢复时间
}

/*********************************************************/
/////
message WeddingT {
  int64 UserId = 1; //玩家ID
  repeated Task Task = 2; //任务完成情况
}

message WeddingC {
  int64 UserId = 1; //玩家ID
  repeated Counter Counter = 2; //计数情况
}

message WeddingTag {
  int64 UserId = 1;
  int64 PartnerId = 2;
  int32 Tag = 3; // 1 结婚；2 更新房屋或戒指；3 离婚
  int32 RingId = 4; // 结婚戒指
  string Vows = 5;
  string ItemBoxId = 6; // 礼盒ID
  repeated ItemData BoxItemData = 7; // 礼盒道具
  repeated ItemData BetrothalGift = 8; // 彩礼
}

message TouristTime {
  string Imei = 1; //imei标识
  int64 Seconds = 2; //体验时间
}
message ActGroupData {
  int32 GroupId = 1; //活动组Id
  int32 RoundNum = 2; //当前轮数
  int32 OrderIdx = 3; //当前活动Id
}

//服务器连服数据
message UnionServerData {
  KingData KingData = 10; //王者争霸数据
  DBSectIMInfo SectIMData = 24; //仙山争夺战数据
  repeated DBLiangYuanLog DBLiangYuanLog = 25; //良缘天定记录
  repeated DbXunBaoLog DbXunBaoLog = 26; //寻宝记录
  repeated DrawDbLog DrawLog = 16; //抽奖记录
  repeated RechargeTurnLog DbRechargeTurnLog = 28; //充值转盘记录
  repeated ActTimes ActTimes = 29; //连服所有玩家冲榜抢购总次数
  repeated DBNBAData NBAData = 30; //历界巅峰竞技数据
  int32 NBASession = 31; //巅峰竞技当前第几届
  repeated SectRankData RankSectData = 32; //连服仙宗排行榜数据
  repeated BestPetRecord BestPetRecord = 33; //极品宠物获得记录
  repeated NBAFrame NBAFrame = 34; //巅峰竞技名人堂数据
  repeated NBAGuess NBAGuess = 35; //巅峰竞技竞猜数据
  repeated S2CYiJiScoreRank YiJiScoreRank = 36; //遗迹争夺数据
  repeated CityWarData CityWarData = 37; //领地战数据
  int32 CityWarSession = 38; //领地战当前第几届
  repeated DbDelayClearRankEndData DbDelayClearRankEndData = 39; //所有排行榜的活动结束返回给玩家的结算数据
  repeated UnionServerIllusionCheckPointData UnionServerIllusionCheckPointData = 40; //所有幻境副本关卡的连服数据
  repeated PassCheckData PassCheckData = 41; //通行证活动数据
  repeated int64 SectHonorUser = 42; //王权荣誉用户
  int64 SectHonorDay = 43; //王权荣誉天
  repeated RechargeGearLog RechargeGearLog = 44; //财神送礼记录
  repeated HLBoss HLBossList = 45; //幻灵秘境BOSS列表
  repeated SectWarData SectWarData = 46; //仙宗城战数据
  int32 SectWarSession = 47; //仙宗城战当前第几届
  S2CGetSectWarLastWinLeader SectWarLastWinLeader = 48; //仙宗城战上一届冠军宗主信息（用于王权荣誉）
  repeated ActRewardCfg ActRewardCfg = 49; //活动开启时的世界等级和连服开服天数
  repeated CrossPastureData CrossPastureData = 50; //跨服灵兽园个人数据
  repeated SectCrossBossBox SectCrossBossBox = 51; //跨服灵兽园宝箱数据
  repeated CatchRecord CatchRecord = 52; //跨服灵兽园捕捉记录
  repeated SeizeRecord SeizeRecord = 53; //跨服灵兽园抢夺记录
  int32 MergeFirstDate = 54; //最近一次结算合服首战数据时间
  repeated MergeFirstSect MergeFirstSect = 55; //合服首战-宗主争夺结算记录
  MergeFirstSectWar MergeFirstSectWar = 56; //合服首战-仙宗城战结算记录
  MergeFirstCityWar MergeFirstCityWar = 57; //合服首战-领地战结算记录
  int32 SectWarCrystalDie = 58; //仙宗城战击败水晶次数
  repeated UnionServerIllusionOldMailMax UnionServerIllusionOldMailMax = 59; //所有幻境副本老式发放首通奖励的最大值
  int64 FamilyJJCEndTime = 60; // 家族竞技结算时间
  int64 SWorldLevelOfToday = 61; //每天0点的世界等级
  int64 SWorldLevelOfWeek = 62; //每周0点的世界等级
  DBPrefectWarHireData PrefectWarHireData = 63; //征战九州雇佣数据
  repeated DBAuctionData DBAuctionData = 64; //拍卖行数据
  repeated DBPlayerEntrust DBPlayerEntrust = 65; //所有玩家的通用委托数据
  repeated DBEntrustWall DBEntrustWall = 66; //所有玩家的委托墙数据
  int64 EntrustWallUniqueId = 67; //委托墙上唯一Id
  repeated DBJungleHuntMirrorData DBJungleHuntMirrorData = 68; //仙林狩猎关卡镜像数据
  repeated int64 MomoMsg = 69; //开启陌陌消息提醒的玩家
  repeated DbDelayClearRankEndDataN DbDelayClearRankEndDataN = 70; //所有排行榜的活动结束后的结算数据
  int64 UniqueId = 71; //连服全局唯一Id
  int32 ActGroupRepaireFlag = 72; //轮询活动修复标记
  DBYJFXData DBYJFXData = 73; //御剑飞仙
  repeated DBFightTeam DBFightTeam = 74; //战队
  repeated WeddingCounterInfo WeddingCounterInfos = 75;//仙缘计数器信息
  repeated BangDanJJDBData BangDanJJAllData = 76; //榜单竞技数据
}

//宗主争夺合服首战数据
message MergeFirstSect {
  int64 WinId = 1;
  repeated int64 LoseId = 2;
  int32 State = 3; //处理状态：0未合服，1已合服需要处理，2已处理
  int32 AreaId = 4; //区Id
}
//仙宗城战合服首战数据
message MergeFirstSectWar {
  repeated int64 WinId = 1;
  repeated int64 LoseId = 2;
  int32 State = 3; //处理状态：0未合服，1已合服需要处理，2已处理
}
//领地战合服首战数据
message MergeFirstCityWar {
  repeated int64 WinId = 1;
  repeated int64 LoseId = 2;
  int32 State = 3; //处理状态：0未合服，1已合服需要处理，2已处理
}

message ActRewardCfg {
  int32 ActId = 1;
  int64 WorldLevel = 2;
  int32 UnionStartDay = 3;
}

message ActTimes {
  int32 ActId = 1;
  int32 Times = 2;
}

message S2CServerInfo {
  int32 IsOpenRealName = 1; //实名认证开关
  int32 IsOpenFcm = 2; //防沉迷开关
  int64 SendShopMaxNum = 3; //寄售行最大寄售数量
  int64 OpenDragon = 4; //开启龙宫夺宝的vip等级
  int64 IsOpenSend = 5; //是否开启邮寄
  int32 Version = 6; //服务端版本号
  int32 DataVersion = 7; //服务端数值表版本号
  string BuildTime = 8; //服务端打包时间
  string DataBuildTime = 9; //数值表打包时间
}

message Default {

}
message MAX {

}

message C2SLogin {
  int64 AreaId = 1;
  int64 AccountId = 2;
  string Token = 3;
  int64 UserId = 4;
  int32 Fcm = 5; //防沉迷状态，0无，1未满18,2满18
  string LoginPf = 6; //平台类型   ios:1<<0, android: 1<<1, h5: 1<<2, xyx_android: 1<<3, xyx_ios: 1<<4
  int64 Timestamp = 7;
  string CheckWordUrl = 8;//屏蔽词检测地址
  int32 CodeVersion = 9; //代码SVN版本号
  int32 ExcelVersion = 10; //数值表SVN版本号
}
message S2CLogin {
  int32 Tag = 1;
  int32 UserId = 2;
  int32 NoCharge = 3; //是否屏蔽充值
}
//重新登录
message C2SReLogin {
  int64 AccountId = 1;
  string Token = 2;
  int64 UserId = 3;
  int32 CodeVersion = 4; //代码SVN版本号
  int32 ExcelVersion = 5; //数值表SVN版本号
}
//重新登录结果
message S2CReLogin {
  int32 Tag = 1;
}
message S2CReLoginState {
}

message C2SLoginEnd {
  int32 CodeVersion = 1; //代码SVN版本号
  int32 ExcelVersion = 2; //数值表SVN版本号
}
//机器人标记：登录所有数据已发送
message S2CAllData {
}
message C2SUserInfo {
  int32 AccountId = 1;
  string Token = 2;
}
message S2CUserInfo {
  int32 Tag = 1;
  int32 MapId = 2;
  int32 MapX = 3;
  int32 MapY = 4;
  repeated IntAttr A = 5;
}

//离线挂机奖励
message S2COfflinePrize {
  int64 Gold = 1; // 银两奖励数量
  int64 Exp = 2; //经验奖励数量
  int32 Equip = 3; // 装备奖励数量
  int64 LogoutTime = 4; //上次下线时间戳
}
//领取离线挂机奖励
message C2SGetOfflinePrize {
  int32 Multi = 1; //倍数，1-2
}
//领取离线挂机奖励
message S2CGetOfflinePrize {
  int64 Tag = 1; // 银两奖励数量
}

//所有登录数据发送完成
message LoginFinish {
}

//领取新号礼包1奖励
message C2SGetGift1 {
}
message S2CGetGift1 {
  int32 Tag = 1;
}
//领取新号礼包2奖励
message C2SGetGift2 {
}
message S2CGetGift2 {
  int32 Tag = 1;
}

//领取关注有礼奖励
message C2SFocusPrice {
  int32 Type = 1; // 1关注有礼，2收藏有礼
}
message S2CFocusPrice {
  int32 Tag = 1;
}
//领取首次邀请奖励
message C2SFirstInvite {
}
message S2CFirstInvite {
  int32 Tag = 1;
}
//新号剧情完成
message C2SNewStory {
}
message S2CNewStory {
  int32 Tag = 1;
}

message C2SRoleInfo {
}

//玩家INT和字符串属性，登录时和发生变化时推送
message S2CRoleInfo {
  int32 UserId = 1;
  repeated IntAttr A = 2;
  repeated StrAttr B = 3;
}
//点击头像，拉取其他玩家的信息
message C2SOtherInfo {
  int32 UserId = 1;
  int32 OnlyAttr = 2; //只要属性信息
}
//拉取其他玩家的AB信息。用于显示第一页内容
message S2COtherInfo {
  int32 UserId = 1; //目标玩家ID
  repeated IntAttr A = 2;
  repeated StrAttr B = 3;
  string MateNick = 4; //伴侣昵称
  int32 Tag = 5;
  int32 Enemy = 6; //是否为仇人，0否1是，暂无此功能，占位
  int32 Friend = 7; //是否为好友，0否1是，暂无此功能，占位
  int32 Team = 8; //是否已有队伍，0否1是，暂无此功能，占位
  int32 Shield = 9; //是否已屏蔽，0否1是，暂无此功能，占位
  string FamilyName = 10; //家族名称，若为""说明无家族
  int32 FamilyPos = 11; //家族职位，10成员，20族卫，30族长
  int32 GodLevel = 12; //境界
  string SectName = 13; //宗门名称
  int32 Rank = 14; //排名
  string MateWorld = 15; // 伴侣世界
  string World = 16; //世界
  int64 Recharge = 17; //充值
  int64 HistoryTaskId = 18; //主线任务
  int64 CurrStage = 19; //关卡
  string OpenFunc = 20; //已经解锁的功能ID
  int64 SwordSoulTowerStageMax = 21; //剑魂塔历史最高关卡
}
//拉取其他玩家的装备。用于显示第二页内容
message S2COtherInfoEquip {
  int32 UserId = 1; //目标玩家ID
  repeated ItemData Equip1 = 2; //穿戴的普通装备，第一栏
  repeated ItemData Equip2 = 3; //穿戴的特殊装备，第二栏
  repeated ItemData Equip3 = 4; //穿戴的版本套装，包含多个版本的所有装备，第三栏
  repeated EquipPos EquipPos = 5; //强化 炼器 洗练 宝石
  repeated EquipDuJin EquipDuJins = 6; //装备镀金信息8
  EquipJingLian EquipJingLians = 7; //套装精炼信息
  EquipZhuHun EquipZhuHuns = 8; //装备铸魂信息
  repeated PlayerKingEquip PlayerKingEquips = 9; //王者套装装备数据
  int64 SpeEquipFv = 10; //特殊装备战力 灯、战力护符、结婚戒指
}

//宠物装备信息
message PetEquipInfo {
  string PetId = 1;
  repeated ItemData Items = 2;
}

//拉取其他玩家的宠物。用于显示第三页内容
message S2COtherInfoPet {
  int32 UserId = 1; //目标玩家ID
  repeated Pet2 Pet = 2; //所有宠物
  repeated PartenInfo PartenInfos = 3; //助战单位信息
  repeated PetEquipInfo PetEquip = 4;  //所有宠物装备信息
}
//拉取自己和其他玩家的系统战力。用于显示第四页内容
message S2COtherInfoFV {
  int32 UserId = 1; //目标玩家ID
  int64 SelfEquip1 = 2; //自己-装备
  int64 SelfEquip2 = 3; //自己-套装
  int64 SelfPet = 4; //自己-宠物
  int64 SelfStrength = 5; //自己-强化
  int64 SelfStone = 6; //自己-宝石
  int64 SelfSteel = 7; //自己-炼器
  int64 SelfCloth = 8; //自己-时装
  int64 SelfHorse = 9; //自己-坐骑
  int64 SelfWing = 10; //自己-翅膀
  int64 SelfGuard = 11; //自己-守护精灵
  int64 SelfGod = 12; //自己-神兵
  int64 SelfStar = 13; //自己-升星
  int64 SelfForge = 14; //自己-洗练
  int64 SelfPetA = 15; //自己-天仙
  int64 SelfWarrior = 16; //自己-战神
  int64 SelfPrecious = 17; //自己-法宝
  int64 SelfSkill = 18; //自己-技能
  int64 SelfJingLian = 19; //自己-精炼
  int64 SelfZhuHun = 20; //自己-铸魂
  int64 SelfDuJin = 21; //自己-镀金
  int64 SelfPhotoBook = 22; //自己-图鉴
  int64 SelfDrug = 23; //自己-仙丹
  int64 SelfFairy = 24; //自己-仙童
  int64 SelfYanJia = 25; // 自己-偃甲
  int64 SelfHero = 26; // 自己-英雄
  int64 SelfBeast = 27; // 自己-凶兽
  int64 SelfHuanLing = 28; // 自己-幻灵
  int64 SelfShengWu = 29; // 自己-圣物
  int64 SelfDuoBaoGe = 30; // 自己-多宝阁
  int64 SelfRealm = 31; // 自己-境界
  int64 SelfReborn = 32; // 自己-转生
  int64 SelfFeiSheng = 33; // 自己-飞升
  int64 SelfFaZhen = 34; // 自己-法阵
  int64 SelfAlien = 35; // 自己-异兽
  int64 SelfSwordSoul = 36; // 自己-剑魂
  int64 SelfGoldDrug = 37; // 自己-神丹

  int64 OtherEquip1 = 51; //目标玩家-装备
  int64 OtherEquip2 = 52; //目标玩家-套装
  int64 OtherPet = 53; //目标玩家-宠物
  int64 OtherStrength = 54; //目标玩家-强化
  int64 OtherStone = 55; //目标玩家-宝石
  int64 OtherSteel = 56; //目标玩家-炼器
  int64 OtherCloth = 57; //目标玩家-时装
  int64 OtherHorse = 58; //目标玩家-坐骑
  int64 OtherWing = 59; //目标玩家-翅膀
  int64 OtherGuard = 60; //目标玩家-守护精灵
  int64 OtherGod = 61; //目标玩家-神兵
  int64 OtherStar = 62; //目标玩家-升星
  int64 OtherForge = 63; //目标玩家-洗练
  int64 OtherPetA = 65; //目标玩家-天仙
  int64 OtherWarrior = 66; //目标玩家-战神
  int64 OtherPrecious = 67; //目标玩家-法宝
  int64 OtherSkill = 68; //目标玩家-技能
  int64 OtherJingLian = 69; //目标玩家-精炼
  int64 OtherZhuHun = 70; //目标玩家-铸魂
  int64 OtherDuJin = 71; //目标玩家-镀金
  int64 OtherPhotoBook = 72; //目标玩家-图鉴
  int64 OtherDrug = 73; //目标玩家-仙丹
  int64 OtherFairy = 74; //目标玩家-仙童
  int64 OtherYanJia = 75; // 目标玩家-偃甲
  int64 OtherHero = 76; // 目标玩家-英雄
  int64 OtherBeast = 77; // 目标玩家-凶兽
  int64 OtherHuanLing = 78; // 目标玩家-幻灵
  int64 OtherShengWu = 79; // 目标玩家-圣物
  int64 OtherDuoBaoGe = 80; // 目标玩家-多宝阁
  int64 OtherRealm = 81; // 目标玩家-境界
  int64 OtherReborn = 82; // 目标玩家-转生
  int64 OtherFeiSheng = 83; // 目标玩家-飞升
  int64 OtherFaZhen = 84; // 目标玩家-法阵
  int64 OtherAlien = 85; // 目标玩家-异兽
  int64 OtherSwordSoul = 86; // 目标玩家-剑魂
  int64 OtherGoldDrug = 87; // 目标玩家-神丹
}

//拉取自己和其他玩家的皮肤信息
message S2COtherInfoSkin {
  int64 SelfSkinTotalFV = 1;
  int64 SelfSkinNum = 2;
  repeated WearSkinFV SelfWearSkinFV = 3;
  int64 OtherSkinTotalFV = 4;
  int64 OtherSkinNum = 5;
  repeated WearSkinFV OtherWearSkinFV = 6;
}

message WearSkinFV {
  int32 SkinId = 1;
  int64 FV = 2;
  int32 IsSuit = 3; // 0普通皮肤 1仙装 2王者法相（套装） 3王者之翼
}

//拉取其他人进阶信息
message C2SOtherInfoGradeInfo {
  int32 GradeId = 1;
  int64 TargetPlayerId = 2;
}
message S2COtherInfoGradeInfo {
  int32 GradeId = 1; // 201 兽灵
  int64 TargetPlayerId = 2;
  repeated Grade Grade = 3;
  int32 CurSkinId = 4; //该进阶系统，当前皮肤
  repeated Skin SkinInfo = 5; //该进阶系统，已解锁皮肤信息
  repeated ItemData Equips = 6; //穿戴的普通装备
  //repeated WarriorGoldChange WarriorGoldChangeData = 7;
  repeated SkinsExtData ZSData = 8;     //皮肤额外数据（神变）
}

message C2SOtherTotemInfo {
  int64 TargetPlayerId = 1;
}
message S2COtherTotemInfo {
  int64 TargetPlayerId = 1;
  repeated TotemInfo TotemInfos = 2;
}

message C2SOtherPetAInfo {
  int64 TargetPlayerId = 1;
}
message S2COtherPetAInfo {
  int64 TargetPlayerId = 1;
  repeated PetA P = 2; //所有仙侣
  PetAMerge PetAMerge = 3; //合体天仙基础信息
  repeated EquipAllData EquipAllData = 4; //所有合体天仙装备数据
  int32 CurSkinId = 5; //该进阶系统，当前皮肤
  repeated Skin SkinInfo = 6; //该进阶系统，已解锁皮肤信息
  int64 Fv = 7; // 合体天仙总战力
  repeated ItemData Equips = 8; //穿戴的普通装备
  repeated SkinsExtData PetASXData = 9;     //皮肤额外数据（升仙）
  repeated IntAttr A = 10;
  repeated StrAttr B = 11;
}

//查看仙童
message C2SOtherKidsInfo {
  int64 TargetPlayerId = 1;
}
message S2COtherKidsInfo {
  int64 TargetPlayerId = 1;
  repeated Partner P = 2; //所有仙童
  repeated DrugBase DrugBase = 3; //仙药信息
  int32  ToyMasterLev = 4;  //玩具大师等级
  repeated PhotoBook T = 5; //仙童玩具
  int64 Fv = 6; // 总战力
  int64 DrugFv = 7;//仙药战力
  int64 ToyFv = 8;//玩具战力

  int32 CurKidBoy = 10; //跟随仙童(男)
  int32 CurKidBoySkinId = 11; //仙童(男)皮肤
  int32 CurKidGirl = 12; //跟随仙童(女)
  int32 CurKidGirlSkinId = 13; //仙童(女)皮肤
  repeated Skin SkinInfo = 14; //该进阶系统，已解锁皮肤信息
  repeated SkinsExtData KidsQNData = 15;     //皮肤额外数据（潜能）
}

//查看偃甲
message C2SOtherYanJiaInfo {
  int64 TargetPlayerId = 1;
}
message S2COtherYanJiaInfo {
  int64 TargetPlayerId = 1;
  repeated EquipAllData EquipAllData = 2; //偃甲装备数据
  int32 YanJiaId = 3; //当前跟随偃甲ID
  int32 YanJiaSkinId = 4; //偃甲皮肤
  repeated Skin YanJiaSkinInfo = 5; //偃甲已解锁皮肤信息
  int64 Fv = 7; // 总战力

  repeated ItemData Equips = 10; //装备具体数据
  repeated SkinsExtData ZJData = 11;     //皮肤额外数据（铸甲）
}

//查看英雄
message C2SOtherHeroInfo {
  int64 TargetPlayerId = 1;
}
message S2COtherHeroInfo {
  int64 TargetPlayerId = 1;
  repeated EquipAllData EquipAllData = 2; //英雄装备数据
  int32 HeroId = 3; //当前出站英雄id
  repeated PlayerHeroDevelop PlayerHeroDevelop = 4; // 英雄养成数据
  repeated PlayerHeroAchi PlayerHeroAchi = 5; //英雄羁绊数据
  repeated PlayerHeroBond PlayerHeroBond = 6; //英雄组合数据
  repeated ItemData Equips = 7; //装备具体数据

  int64 Fv = 10; // 总战力
  int32 HeroSkinId = 11; //出站英雄的皮肤
  repeated Skin SkinInfo = 12; //该进阶系统，已解锁皮肤信息
  repeated SkinsExtData HeroWSData = 13;     //皮肤额外数据（武圣）
  int32 WSGodSkillId = 14; //武圣神器激活勾选技能ID
  int32 WSGodCount = 15; //武圣神器激活数量
}

//查看异兽
message C2SOtherAlienInfo {
  int64 TargetPlayerId = 1;
}
message S2COtherAlienInfo {
  int64 TargetPlayerId = 1;
  repeated PlayerAlien PlayerAlien = 2; //异兽数据
  int32 AlienId = 3; //当前跟随异兽ID
  int64 Fv = 4; // 总战力
}

//查看凶兽
message C2SOtherBeastInfo {
  int64 TargetPlayerId = 1;
}
message S2COtherBeastInfo {
  int64 TargetPlayerId = 1;
  repeated SavageBeast Beasts = 2; //凶兽数据
  int32 BeastId = 3; //当前幻化凶兽ID
  repeated ItemData Equips = 10; //装备具体数据
}

//查看幻灵
message C2SOtherHuanLingInfo {
  int64 TargetPlayerId = 1;
}
message S2COtherHuanLingInfo {
  int64 TargetPlayerId = 1;
  repeated HuanLingDev HuanLingList = 2;
  int32 HLId = 3; //当前出战幻灵Id
  repeated ItemData Equips = 5; //装备具体数据
  repeated Skill ActiveSkills = 6; //主动技能列表

  int32 HL1_Skin = 10; //当前显示金幻灵皮肤
  repeated Skin HL1_SkinInfo = 11; //金幻灵已解锁皮肤信息
  int32 HL2_Skin = 12; //当前显示木幻灵皮肤
  repeated Skin HL2_SkinInfo = 13; //木幻灵已解锁皮肤信息
  int32 HL3_Skin = 14; //当前显示水幻灵皮肤
  repeated Skin HL3_SkinInfo = 15; //水幻灵已解锁皮肤信息
  int32 HL4_Skin = 16; //当前显示火幻灵皮肤
  repeated Skin HL4_SkinInfo = 17; //火幻灵已解锁皮肤信息
  int32 HL5_Skin = 18; //当前显示土幻灵皮肤
  repeated Skin HL5_SkinInfo = 19; //土幻灵已解锁皮肤信息

  int32 LW1_Skin = 20; //当前显示金灵武皮肤
  repeated Skin LW1_SkinInfo = 21; //金灵武已解锁皮肤信息
  int32 LW2_Skin = 22; //当前显示木灵武皮肤
  repeated Skin LW2_SkinInfo = 23; //木灵武已解锁皮肤信息
  int32 LW3_Skin = 24; //当前显示水灵武皮肤
  repeated Skin LW3_SkinInfo = 25; //水灵武已解锁皮肤信息
  int32 LW4_Skin = 26; //当前显示火灵武皮肤
  repeated Skin LW4_SkinInfo = 27; //火灵武已解锁皮肤信息
  int32 LW5_Skin = 28; //当前显示土灵武皮肤
  repeated Skin LW5_SkinInfo = 29; //土灵武已解锁皮肤信息
}

//查看剑魂
message C2SOtherSwordSoulInfo {
  int64 TargetPlayerId = 1;
}
message S2COtherSwordSoulInfo {
  int64 TargetPlayerId = 1;
  SwordSoul SwordSouls = 2; //剑魂数据
  repeated ItemData Equips = 10; //装备具体数据
}


//模糊搜索玩家
message C2SSearchPlayer {
  int32 AreaId = 1; //区ID
  string Nick = 2; //昵称包含字
}
message S2CSearchPlayer {
  int32 Tag = 1;
  repeated RushRankUserInfo List = 2; //搜索结果
}

//玩家除属性之外的数据
message S2CRoleData {
  repeated Skill ActiveSkills = 1; //主动技能列表
  repeated Skin Skins = 2; //所有已解锁皮肤
  repeated int32 VIPPrize = 3; //已领取的VIP等级礼包(存放VIP等级)
  WorldLevel WorldLevel = 6; //世界等级相关信息
  repeated Precious Precious = 7; //所有法宝
  repeated int32 NewPrize = 8; //已领取的新手礼包(存放礼包赠送对应的功能表ID)
  repeated int32 VIPGift = 9; //已购买的VIP等级礼包(存放VIP等级)
  repeated int32 ChargeGift = 10; //已购买的推荐礼包序列(存放礼包ID)
  repeated int32 FnPreviewPrize = 11; //已领取的功能预告奖励(存放奖励对应的功能预告表ID)
  repeated EquipDuJin EquipDuJins = 12; //装备镀金信息
  EquipJingLian EquipJingLians = 13; //套装精炼信息
  EquipZhuHun EquipZhuHuns = 14; //装备铸魂信息
  repeated SkinExtAttr SkinExtAttr = 15; //时装套装收集
  repeated TotemInfo TotemInfos = 16; //已解锁的宠物图腾
  repeated string TotemHelpPets = 17; //设置的外援宠物
  repeated S2CAutoPushGift pushGiftList = 18; // 推送礼包列表
  SwordSoul SwordSouls = 19; //剑魂
}

//玩家任务数据
message S2CRoleTask {
  repeated S2CTask Task = 1; //所有任务
  repeated S2CCounter Counters = 2; //所有计数器
  int32 AllData = 3; //是否是全量包，0否1是
}
//已经弹窗的成就任务ID
message C2SAchieveShow {
  int32 AchieveShow = 1;
}
message S2CAchieveShow {
  repeated int32 AchieveShow = 1;
}

message S2CRoleBaseInfo {
  int32 UserId = 1;
  string Nick = 2;
  int64 LogoutTime = 3;
  int64 FightValue = 4;
  int32 VipLevel = 5;
  int32 Level = 6;
  int32 RoleId = 7;
  bool OnLine = 8;
  int32 HideVIP = 9; //Vip等级是否屏蔽  0正常显示  1屏蔽
}
message C2SRoleBaseInfo {
  int32 UserId = 1;
}
message S2CKill {
  int32 Tag = 1; //踢下线
}

//服务器用的战斗对象。
message FightUnitData {
  int64 I = 2; //皮肤编号
  int32 T = 3; //
  int64 H = 4; //
  repeated IntAttr A = 5; //包含战斗属性和挂件属性
  repeated StrAttr B = 6;
  repeated Skill Skill = 7;
}
//一个玩家的战斗对象
message PlayerFightUnit {
  int64 UserId = 1;
  string Nick = 2;
  int64 FightValue = 3;
  int32 RoleId = 4; //种族信息
  repeated FightUnitData Units = 10;
}

//战斗对象
message FightUnit {
  int32 P = 1;
  int64 I = 2;
  int32 T = 3; // 类型FightUnit
  repeated IntAttr A = 4;
  repeated StrAttr B = 5;
  int32 F = 6; //是否飞升
  int64 H = 7; //  当前血量
  int64 MH = 8; //  最大血量
  int64 H1 = 9; //  当前护盾
  int64 MH1 = 10; //  最大护盾
  int64 IsMH1 = 11; //  是否使用护盾
  int32 RealmLevel = 12; //境界等级
  int32 SectPetId = 13; //仙宗灵兽园宠物序号ID
  int32 FeiShengId = 14; //飞升等级表Id
  int32 SLActiveSkill = 15; //神龙激活技能
}
message Effect {
  int32 K = 1; //战斗效果类型
  int64 V = 2; //战斗效果数值
  int64 Protect = 3; //保护者的位置,0,就是没有保护
  int64 From = 4; //buff来源 目前只给眩晕和魅惑
  int64 Param = 5; //效果提升参数
}
//被攻击对象
message AtkUnit {
  int32 P = 1;
  //int64 H = 2; //减少血量
  //int32 E = 3; //攻击效果1：闪避，2暴击，3闪避
  //int64 AH = 4; //add hp 吸血
  //int64 Dh = 5; //反伤
  //int32 RV = 6; //是否触发复仇，1是
  repeated Effect E = 3;
  int32 IsHp1 = 4; //是否显示护盾
  int32 IsAtk = 5; //是否是攻击动作
  int32 AtkOrder = 6; //被攻击时，标记当前是攻击者的第几轮攻击，用于群体攻击连击
  int32 AngerValue = 7; //被攻击后怒气值
  int32 CurSkin = 8; //本次战斗皮肤ID
  int32 IsSwallow = 9; //是否显示吞噬
  int32 AngerValueMax = 10; //怒气值最大值
  int32 ShenLongDBTXMax = 11; //神龙地爆天星最大值
}

//战斗步骤
message FightStep {
  int32 P = 1; //位置
  int32 S = 2; //使用技能
  repeated AtkUnit U = 3; //被攻击对象
  repeated FightUnit CU = 4; //被召唤对象
  int32 R = 5; //回合
  //int32 B = 5; //buff编号
  //int32 C = 6; //是否连击：1连击，0不是连击
  //int64 RHP = 7; //由回血被动技能触发的回血值，0表示无触发
  //int32 CL = 8; //是否净化，1是
  repeated Effect E = 6;              // 客户端说，简单效果的走这里，复杂的比如血量计算走AtkUnit
  int32 KILL = 7; //击杀数
  int32 MultiAtk = 8; //多次攻击是否分开展示攻击动画，0否，1是
  int32 NoAtk = 9; //值为1时，表示此战斗步骤不是攻击步骤，触发单位不播放攻击动画
  int32 ShowSkill = 10; //值大于0时，需要在对应的单位头顶播放技能名称动画
  int32 Together = 11; //若当前战斗步骤的Together与下一条的Together值相同，则同时播放
  int32 TogetherBuff = 12; //当together攻击产生附带效果step时，用此字段标记，值与攻击step的together一致
  int32 HLID = 13; //是否是幻灵出手，0否，大于1表示幻灵ID
  int32 AtkContinue = 14; //本次出手是否是追击，0否1是
  int32 ChangeHL = 15; //本次战斗步骤需要更换显示的幻灵Id
  int32 ChangeHLSkin = 16; //本次战斗步骤需要更换显示的幻灵皮肤ID
  int32 SwallowStatus = 17; //本次战斗步骤吞噬状态 0普通状态,1吞噬其他单位,2吐出其他单位,3被吞噬
  int32 CurSkin = 18; //本次战斗皮肤ID
  int32 SamePlayFlag = 19; //本次战斗步骤标记 0默认 1与其他战斗步骤一起播放, 用于英雄
  int32 SamePlayBuff = 20; //用于多个单位，播放相同简单buff
  int32 S2 = 21; //使用技能2
  int32 ShapeStage = 22; //变身阶段 0默认，二郎真君；1哮天犬
}
//战报
message S2CBattlefieldReport {
  repeated FightUnit U = 1; //战斗对象
  repeated FightStep S = 2; //攻击步骤
  repeated ItemInfo I = 3; //产出
  int32 T = 4; //战斗类型(副本类型)
  int64 P = 5; //战斗参数(副本关卡)
  int32 Win = 6; //是否战斗胜利：0失败，>0 胜利，并且代表星星
  int64 Idx = 7; //战斗序号
  int32 M = 8; //最大回合数
  int32 PVP = 9; //是否是PVP战斗，0否（PVE），1是
  int32 Num = 10; //战斗player数量
  int32 Video = 11; //是否是录像
  repeated Skill ShowBuff = 12; //增益BUFF列表
  repeated int32 ZhanFaIDs = 13; //阵法id，第一个是己方，第二个是敌方
  int32 OverRound = 14;//战斗回合数是否超过最大回合数
  int32 OverRoundType = 15;//超过最大回合数时的胜利判断类型，0进攻方失败，1进攻方胜利，2剩余总血量高者胜利,21剩余血量相同比较战力
  int32 WinUserId = 16;     //胜利玩家的UserId(用于巅峰竞技回放战报)
  int64 PlayerBossTotalHp = 17; //玩家镜像作为boss，总血量传给客户端， 目前只有龙脉战斗使用
  int64 NextCanFightTimestamp = 18; //下一次可以发起该战斗类型战斗的时间戳
}
message S2CFightCD {
  int32 T = 1;                        //战斗类型(副本类型)
  int64 NextCanFightTimestamp = 2;    //下一次可以发起该战斗类型战斗的时间戳
}
//保存战报
message DbBattlefieldReport {
  repeated bytes Data = 3; //战报数据
}

//战斗简报，只显示对战双方和结果
message S2CSimpleBattleReport {
  int64 AtkId = 1; //挑战方ID
  int32 AtkUnitType = 2; //挑战方单位类型
  string AtkNick = 3; //挑战方昵称
  int64 AtkHead = 4; //挑战方头像
  int64 AtkHeadFrame = 5; //挑战方头像框
  int64 AtkShowAreaId = 6; //挑战方显示区ID
  int64 TargetId = 11; //被挑战方ID
  int32 TargetUnitType = 12; //被挑战方单位类型
  string TargetNick = 13; //被挑战方昵称
  int64 TargetHead = 14; //被挑战方头像
  int64 TargetHeadFrame = 15; //被挑战方头像框
  int64 TargetShowAreaId = 16; //被挑战方显示区ID
  int64 Idx = 20; //战斗序号
  int32 Winner = 21; //战斗结果，1挑战方胜利，2被挑战方胜利
  string AtkWorld = 22;
  string TargetWorld = 23;
}

//通知跨服，用户登录成功
message S2KLoginSuccess {
  int64 UserId = 1; //
}

//战报
message K2SBattlefieldReport {
  int64 UserId = 1;
  int64 IsLeader = 2; //是否是队长
  bytes Data = 3; //战报数据
}
//用户进入地图
message K2SEnterMap {
  int64 UserId = 1;
  int64 MapId = 2;
  string InstanceId = 3;
  int32 X = 4;
  int32 Y = 5;
}
message S2KEnterMap {
  int64 UserId = 1;
  int64 MapId = 2;
  string InstanceId = 3;
  int32 X = 4;
  int32 Y = 5;
}
//离开地图
message S2KLeaveMap {
  int64 MapId = 1;
  string InstanceId = 2; //副本编号
}
message S2KLeaveInstanceTeam {
  int64 TeamId = 1;
}
//用户下线
message S2KLogout {

}
//用户复活
message S2KReviveLife {

}
//用户治疗
message S2KTreatPlayer {

}
//世界等级
message S2KWorldLevel {
  int64 Level = 1;
}
message S2KCreateServerIds {
  repeated int64 Ids = 1;
}
message K2SGetPlayerByLevel {
  int64 MinLevel = 1;
  int64 MaxLevel = 2;
}
//获取玩家信息
message S2KGetPlayerOtherInfo {
  int64 UserId = 1;
  int64 OtherId = 2;
}

message K2SAddItem {
  repeated ItemData Items = 1;
  bool Wait = 2;
  int32 ChangType = 3;
  repeated int64 IntParam = 4;
  repeated string StrParam = 5;
  int64 UId = 6; // 用户编号
}

message K2SAddRedPkg {
  int32 Type = 1; //类型
  int64 Money = 2; //金额
}

message K2SChangeAttr {
  int64 UserId = 1; // 用户编号
  repeated IntAttr A = 2;
  repeated StrAttr B = 3;
}
message K2SUnlockSkin {
  int64 UserId = 1; // 用户编号
  int32 SkinId = 2; // 皮肤ID
}
message K2SDeleteSkin {
  int64 UserId = 1; // 用户编号
  int32 SkinId = 2; // 皮肤ID
}
message K2SMail {
  int64 UserId = 1; // 用户编号
  int32 TmpId = 2;
  repeated ItemData Itemdata = 3;
  int32 ChangeType = 4;
  string Param = 5;
  int32 MailType = 6;
}
//活动状态
message K2SActState {
  int32 ActId = 1;
  int32 State = 2; //0关闭，1开启
  int64 OverTime = 3; //結束時間
}

//结束战斗
message C2SEndFight {
  int64 Idx = 1;
}

message C2SFightContinue {
}

//奖励广播
message S2CPrizeReport {
  repeated ItemData Items = 1; //奖励数据
  int64 Idx = 2; //战斗序号
  int64 Type = 3; //类型 ：1 战斗胜利，2战斗失败 3扫荡
  int64 Star = 4;
  int64 JJC = 5; //竞技场排名
  int32 FBType = 6; // 副本类型/战斗类型
  string FightNick = 7; // 挑战名称
  repeated int64 Data = 8; //数据
  int32 OverRound = 9;//战斗回合数是否超过最大回合数
  int32 OverRoundType = 10;//超过最大回合数时的胜利判断类型，0进攻方失败，1进攻方胜利，2剩余总血量高者胜利,21剩余血量相同比较战力
}
//开始关卡挑战boss
message C2SStageFight {
}
//关卡挑战boss
message S2CStageFight {
  int32 Tag = 1;
  int32 Win = 2; //是否获得胜利
}
//自动关卡
message C2SAutoStage {
  int32 State = 1; //0 不自动，1自动
}

//关卡挑战boss求助
message C2SStageSeek {
}
message S2CStageSeek {
  int32 Tag = 1;
  int64 UserId = 2;
  int64 StageId = 3; //关卡id
}
message C2SStageHelp {
  int64 UserId = 1;
  uint64 StageId = 2; //关卡id
}
message S2CStageHelp {
  int32 Tag = 1;
}

//请求切换地图
message C2SChangeMap {
  uint64 MapId = 1;
}
//'切换地图
message S2CChangeMap {
  int32 Tag = 1;
  int64 MapId = 2; //地图编号
  int32 X = 3;
  int32 Y = 4;
}

// 获取地图两个点的行进路线
message C2SRoutePath {
  int64 MapId = 1;
  int32 FX = 2;
  int32 FY = 3;
  int32 TX = 4;
  int32 TY = 5;
}
message S2CRoutePath {
  int32 Tag = 1;
  int32 MapId = 2;
  repeated int32 Points = 3;
}

message C2SAutoJump {
  int32 V = 1; //0关闭，1开启
}
//关卡奖励
message StagePrizeInfo {
  int64 Id = 1; //关卡ID
  int64 Num = 2; //剩余数量
}
//推送关卡奖励
message C2SStagePrize {
}
//推送关卡奖励
message S2CStagePrize {
  repeated StagePrizeInfo Items = 1;
}
//领取关卡奖励
message C2SGetStagePrize {
  int64 Id = 1;
}
message S2CGetStagePrize {
  int32 Tag = 1;
  int64 Id = 2;
}
//一键领取所有关卡奖励
message C2SGetAllStagePrize {
}
message S2CGetAllStagePrize {
  int32 Tag = 1;
}

//关卡抽奖
message C2SStageDraw {
}
message S2CStageDraw {
  int32 Tag = 1;
  repeated int32 Id = 2; //本次抽奖抽中的奖品ID
}
//关卡抽奖转盘动画结束，获得奖励
message C2SStageDrawEnd {
}

//抓捕宠物
message C2SCatchPet {
}
message S2CCatchPet {
  int32 Tag = 1;
  int32 Win = 2; //成功还是失败
  int32 ItemId = 3;
  int32 MonsterId = 4;
}

//开始移动
message C2SStartMove {
  repeated int32 P = 1; //移动坐标 0：x 1 y 2：x,3：y
}
//移动结果
message S2CStartMove {
  int32 Tag = 1;
}
message S2CPlayerMove {
  int64 UserId = 1;
  repeated int32 P = 2; //移动坐标 0：x 1 y 2：x,3：y
}

//结束移动
message C2SStopMove {
  int32 X = 1;
  int32 Y = 2;
}
message S2CStopMove {
}
message S2CPlayerStopMove {
  int64 UserId = 1;
  int32 X = 2;
  int32 Y = 3;
}
message C2SUpdateMapInfo {
  int64 UserId = 1;
  int32 X = 2;
  int32 Y = 3;
}
message C2SMoving {
  int64 UserId = 1;
  int32 X = 2;
  int32 Y = 3;
}
message S2CMoving {
  int64 UserId = 1;
  int32 X = 2;
  int32 Y = 3;
}
//传送
message S2CTransfer {
  int64 UserId = 1;
  int32 X = 2;
  int32 Y = 3;
}
//检查战斗
message C2SCheckFight {
}
message S2CCheckFight {
  int32 Tag = 1;
  int64 NextTime = 2; //下次战斗时间
}
message S2CPlayerEnterMap {
  int64 UserId = 1;
  repeated IntAttr A = 2;
  repeated StrAttr B = 3;
  int32 X = 4;
  int32 Y = 5;
  repeated int32 P = 6; //移动坐标 0：x 1 y 2：x,3：y
  int32 MT = 7; // moveTime 已经移动时间
}
message S2CPlayerLeaveMap {
  int64 UserId = 1;
}
message S2CMonsterEnterMap {
  int64 Id = 1; //唯一编号
  int64 IID = 2; //模板编号
  int64 X = 3; //x
  int64 Y = 4; //y
  int64 MHp = 5; //最大血量
  int64 Hp = 6; //当前血量
  int64 MHp1 = 7; // 护盾最大血量
  int64 Hp1 = 8; // 当前护盾值
  int32 Fx = 9; // 方向
  int32 MT = 10; //0 怪物表；1 灵兽园宠物表；2 跨服灵兽园宠物表
  int64 Belong = 11; //怪物归属ID。根据业务不同赋值不同，可以是玩家ID或宗门ID
}
// 更新怪物信息
message S2CUpMonsterInfo {
  int64 MHp = 1; //最大血量
  int64 Hp = 2; //当前血量
  int64 MHp1 = 3; // 护盾最大血量
  int64 Hp1 = 4; // 当前护盾值
  int64 Id = 5; //唯一编号
  int32 LifeState = 6; // 1死亡 0正常
  int32 IsCollect = 7; //是否被采集中

}
message S2CMonsterLeaveMap {
  int64 Id = 1; //唯一编号
}
//挑战明怪
message C2SStartFight {
  int64 Id = 1; //唯一编号
  int64 Type = 2; //对象类型
}
message S2CStartFight {
  int32 Tag = 1; //
}
//开始采集
message C2SStartCollect {
  int64 Id = 1; //唯一编号
}
//采集返回
message S2CStartCollect {
  int32 Tag = 1; // 0 开始播放进度条
}
//结束采集
message C2SEndCollect {
  int64 Id = 1; //唯一编号
  int32 Ret = 2; // 0 失败，1成功
}
//结束采集
message S2CEndCollect {
  int32 Tag = 1; //
  int32 Ret = 2; // 0 失败，1成功
}
//怪物喊话
message S2CMonsterTalk {
  int64 Id = 1; //怪物编号
  int32 TalkId = 2;
}


message Skill {
  int32 I = 1; //技能Id
  int32 L = 2; //技能等级
}

message SkillExtra {
  int32 I = 1; //技能Id
  int32 L = 2; //技能等级
  repeated int32 Param1 = 3; //参数1
  repeated int32 Param2 = 4; //参数2
}

//升级单个人物技能
message C2SRoleSkillUp {
  int32 Id = 1; //要升级的技能ID
}
//一键自动升级人物技能
message C2SRoleSkillUpAuto {
}
//升级人物技能
message S2CRoleSkillUp {
  int32 Tag = 1; //结果标志
  repeated Skill Skill = 2; //升级后玩家的所有技能列表
  repeated int32 SkillId = 3; //哪些技能进行了升级
}

//设置人物技能施放队列
message C2SRoleSkillOrder {
  repeated Skill Skill = 1; //修改后玩家的所有技能列表
}
//设置人物技能施放队列
message S2CRoleSkillOrder {
  int32 Tag = 1; //结果标志
}

//客户端展示了欢迎界面
message C2SWelcome {
}
//解锁皮肤
message C2SUnlockSkin {
  int32 SkinId = 1; //要解锁的皮肤ID
}
//解锁皮肤
message S2CUnlockSkin {
  int32 Tag = 1; //结果标志
  repeated Skin Skins = 2; //当前玩家所有皮肤ID
  int32 SkinId = 3; //要解锁的皮肤ID
}
//幻化皮肤
message C2SWearSkin {
  int32 SkinId = 1; //要幻化的皮肤ID
}
//幻化皮肤
message S2CWearSkin {
  int32 Tag = 1; //结果标志
  int32 SkinId = 2; //要幻化的皮肤ID
}
//升级皮肤
message C2SSkinUp {
  int32 SkinId = 1; //要升级的皮肤ID
}
//升级皮肤
message S2CSkinUp {
  int32 Tag = 1; //结果标志
  int32 SkinId = 2; //要升级的皮肤ID
  int32 SkinLevel = 3; //升级后的等级
}
//脱掉皮肤
message C2SDropSkin {
  int32 SkinId = 1; //要脱掉的皮肤ID
}
//脱掉皮肤
message S2CDropSkin {
  int32 Tag = 1; //结果标志
  int32 SkinId = 2; //要脱掉的皮肤ID
}
//时装套装收集属性激活
message C2SSkinSuitExtAttr {
  int32 SuitId = 1; //时装套装Id
  int32 Num = 2; //激活件数
}
message S2CSkinSuitExtAttr {
  int32 Tag = 1;
  SkinExtAttr SkinExtAttr = 2;
}
//时装注灵
message C2SSkinReikiUp {
  int32 ItemId = 1;
  uint32 ItemNum = 2;
  int32 Auto = 3;
}
message S2CSkinReikiUp {
  int32 Tag = 1;
}

//时装炼神
message C2SSkinSpiritUp {
  int32 ItemId = 1;
  uint32 ItemNum = 2;
  int32 Auto = 3;
}
message S2CSkinSpiritUp {
  int32 Tag = 1;
}

//激活仙装额外属性，2件，4件解锁
message C2SActiveSkinExt {
  int32 SuitId = 1; // 套装ID
  int32 PartNum = 2; // 激活额外属性的部件数
}
message S2CActiveSkinExt {
  int32 Tag = 1;
}

//套装升阶
message C2SSkinSuitUp {
  int32 SuitId = 1; // 套装ID
  int32 Auto = 2;
}
message S2CSkinSuitUp {
  int32 Tag = 1;
}

//套装穿戴
message C2SWearSkinSuit {
  int32 SuitId = 1; // 套装ID
}
message S2CWearSkinSuit {
  int32 Tag = 1;
}

//套装脱掉
message C2SDropSkinSuit {
  int32 SuitId = 1; // 套装ID
}
message S2CDropSkinSuit {
  int32 Tag = 1;
}

//领取VIP等级礼包
message C2SGetVipPrize {
  int32 VIPLevel = 1; //等级
}
//领取VIP等级礼包
message S2CGetVipPrize {
  int32 Tag = 1; //结果标志
  int32 VIPLevel = 2; //等级
}

//购买VIP等级礼包
message C2SBuyVipPrize {
  int32 VIPLevel = 1; //等级
}
//购买VIP等级礼包
message S2CBuyVipPrize {
  int32 Tag = 1; //结果标志
  int32 VIPLevel = 2; //等级
}

//领取每日VIP礼包
message C2SGetVipDayGift {
}
message S2CGetVipDayGift {
  int32 Tag = 1; //结果标志
}

//获取超级VIP的QQ
message C2SGetSuperVipQQ {

}
message S2CGetSuperVipQQ {
  int32 Tag = 1; //结果标志
}

//领取新手礼包
message C2SGetNewPrize {
  int32 Id = 1; //功能表ID
}
message S2CGetNewPrize {
  int32 Tag = 1; //结果标志
  int32 Id = 2; //功能表ID
}

//领取功能预告奖励
message C2SGetFnPreviewPrize {
  int32 Id = 1; //功能表ID
}
message S2CGetFnPreviewPrize {
  int32 Tag = 1; //结果标志
  int32 Id = 2; //功能表ID
}

//功能预告客户端缓存
message C2SFnPreviewCfg {
  string Cfg = 1;
}

//修改客户端参数值
message C2SClientSwitch {
  int32 Value = 1;
}
message S2CClientSwitch {
  int32 Tag = 1;
}

//分享成功一次
message C2SShareSuccess {
}

/***********************************************升阶相关*******************************************************/
//玩家所有升阶系统数据
message S2CUserGrade {
  repeated Grade Grade = 1;
}

//转生
message C2SReborn {
}
message S2CReborn {
  int32 Tag = 1; //结果标志
}

//玩家升阶数据
message Grade {
  int32 T = 1; //系统类型，对应功能表ID
  int32 L = 2; //等级、阶
  int32 P = 3; //升阶进度（经验)
  int32 S = 4; //星级（若不需要则为0）
  int32 M = 5; //炼神等级
  int32 SL = 6; //注灵等级
  int32 SE = 7; //注灵经验
  int32 SK1 = 8; //技能1等级
  int32 SK2 = 9; //技能2等级
  int32 SK3 = 10; //技能3等级
  int32 SK4 = 11; //技能4等级
  repeated int32 Prize = 12; //已领取的升阶奖励阶数，初始为空
  int32 TongLing = 13; //通灵丹数量
  int32 ForgeExp = 14; //淬炼经验
  int32 ForgeLevel = 15; //淬炼等级
  int32 ForgeOpen = 16; //是否已突破后开启淬炼功能，0否1是
  int32 TongLingLev = 17; //通灵等级
}

//升阶请求
message C2SGradeUp {
  int32 T = 1; //系统类型，对应功能表ID
  //升级功能类型：
  //    1本体升级，
  //    2使用炼神丹，
  //    3注灵升级，
  //    4突破至下一阶
  //    5使用通灵丹
  //    6满阶后突破到淬炼
  //    7一键淬炼
  //    8通灵升级
  //    9通灵特效设置
  //    11升级技能1，12升级技能2，13升级技能3，14升级技能4，
  int32 F = 2;
  uint32 Times = 3; //升阶次数
  int32 AutoBuy = 4; //是否自动购买，0否，1元宝，2仙玉，3自动判断货币类型
}

//升阶成功返回
message S2CGradeUp {
  int32 Tag = 1; //结果标志
  int32 Multi = 2; //暴击倍数，0或1表示没暴击
  int32 New = 3; //表示是否是新开启的升阶数据
  int32 T = 4; //原样返回
  int32 F = 5; //原样返回
}

//领取升阶奖励
message C2SGetGradePrize {
  int32 T = 1; //系统类型，对应功能表ID
  int32 L = 2; //要领取的奖励等级
  int32 Multi = 3; //1：直接领取，3：三倍领取
}
message S2CGetGradePrize {
  int32 Tag = 1; //结果标志
  string TagP = 2; //错误字符串
}

//升阶-化金
message C2SGradeHuaJin {
  int32 T = 1; //系统类型，对应功能表ID
  int32 Part = 2; //装备部位（0：表示一键化金）
}
message S2CGradeHuaJin {
  int32 Tag = 1; //结果标志
  int32 T = 2; //
  int32 Part = 3; //
}

/***********************************************新好友系统相关*******************************************************/
//玩家新好友列表
message PlayerNewFriend {
  repeated int64 BlackList = 1; //黑名单列表
  repeated FriendInfos NewBlackList = 2;//新黑名单列表
}

message FriendInfos {
  int64 Uid = 1;    //角色ID
  string Nick = 2;  //昵称
  int32 Server = 3; //区服
  string World = 4; //世界
}

//获取数据
message C2SGetFriendInfos {
}

//获取数据
message S2CGetFriendInfos {
  int32 Tag = 1; //结果标记
  repeated FriendInfos BList = 2; //黑名单数据
  int32 B = 3; //黑名单数量
  int32 Tb = 4; //黑名单上限
}

//拉黑
message C2SBlack {
  int32 Typ = 1; //1:拉黑；2：取消拉黑
  int64 FriendId = 2; //对方ID
  string Nick = 3; //昵称
  int32 Server = 4;
  string Wrold = 5;
}

//拉黑
message S2CBlack {
  int32 Tag = 1; //结果标记
  int32 Typ = 2; //1:拉黑；2：取消拉黑
  int64 FriendId = 3; //对方ID
}

/***********************************************好友系统相关*******************************************************/
//玩家好友列表
message RoleFriend {
  repeated DBFriend FriendList = 1;
  repeated DBFriend EnemyList = 2; //仇人列表
}

message DBFriend {
  int32 FId = 1; //好友的PlayerId
  int32 T = 2; //好友类型，1我的关注，2我的粉丝，3互粉，4我的仇人
  int32 Cs = 3; //好友币状态，十位：1自己未赠送，2自己已赠送；   个位：1对方未赠送，2对方赠送自己未领取，3自己已领取
  int32 E = 4; //是否拉黑，0否1是
}

message Friend {
  DBFriend F = 1;
  int32 A = 2; //角色ID
  string N = 3; //昵称
  int32 L = 4; //等级
  int64 S = 5; //战斗力
  int32 V = 6; //VIP等级
  int64 O = 7; //离线时间戳，若在线则为0
  int64 Gl = 8; //仙阶
  string Gn = 9; //帮会
  int32 Server = 10; //区服
  string World = 11; //世界
}

//获取好友列表
message S2CGetFriends {
  int32 F = 1; //已关注
  int32 Tf = 2; //关注上限
  int32 A = 3; //粉丝数Cs
  int32 Ta = 4; //粉丝上限
  int32 B = 5; //黑名单数量
  int32 Tb = 6; //黑名单上限
  int32 S = 7; //今日赠送次数
  int32 Ts = 8; //总赠送次数
  int32 R = 9; //今日接受次数
  int32 Tr = 10; //总接受次数
  repeated Friend List = 11; //好友列表
  int32 E = 12; //仇人数量
  int32 Eb = 13; //仇人上限
}

message FriendSendMessage {
  repeated Friend List = 1; //好友列表
  int32 FriendId = 2; //好友ID
}

//关注（添加好友）
message C2SFocus {
  int32 FriendId = 1; //对方ID
}

//关注（添加好友）。客户端收到后重新拉取好友列表
message S2CFocus {
  int32 Tag = 2; //结果标记
  int32 FriendId = 1; //对方ID
}

//取消关注（删除好友）
message C2SCancelFocus {
  int32 FriendId = 1; //对方ID
}

//取消关注（删除好友）。客户端收到后重新拉取好友列表
message S2CCancelFocus {
  int32 Tag = 2; //结果标记
  int32 FriendId = 1; //对方ID
}

//拉黑
message C2SHate {
  int32 FriendId = 1; //对方ID
}

//拉黑。客户端收到后重新拉取好友列表
message S2CHate {
  int32 Tag = 2; //结果标记
  int32 FriendId = 1; //对方ID
}

//取消拉黑
message C2SCancelHate {
  int32 FriendId = 1; //对方ID
}

//取消拉黑。客户端收到后重新拉取好友列表
message S2CCancelHate {
  int32 Tag = 2; //结果标记
  int32 FriendId = 1; //对方ID
}

//赠送友币
message C2SGiveCoin {
  int32 FriendId = 1; //对方ID
}

//赠送友币。客户端收到后重新拉取好友列表
message S2CGiveCoin {
  int32 Tag = 2; //结果标记
  int32 FriendId = 1; //对方ID
}

//接收友币
message C2SGetCoin {
  int32 FriendId = 1; //对方ID
}

//接收友币。客户端收到后重新拉取好友列表
message S2CGetCoin {
  int32 Tag = 2; //结果标记
  int32 FriendId = 1; //对方ID
}

//获取推荐列表
message C2SGetSuggest {
}

//获取推荐列表
message S2CGetSuggest {
  repeated Friend List = 1; //好友列表
}

//一键赠送
message C2SOneKeyGiveCoin {

}

message S2COneKeyGiveCoin {
  int32 Tag = 1;
  int32 Num = 2;
}
//一键获取
message C2SOneKeyGetCoin {

}
message S2COneKeyGetCoin {
  int32 Tag = 1;
  int32 Num = 2;
}
//一键关注
message C2SOneKeyFocus {

}
message S2COneKeyFocus {
  repeated int32 Tags = 1;
  int32 Num = 2;
}

//仇人记录列表
message C2SEnemyRecord {
}
message S2CEnemyRecord {
  repeated EnemyRecord N = 1;
}
//删除仇人
message C2SDelEnemy {
  int32 Id = 1; //仇人ID
}
message S2CDelEnemy {
  int32 Tag = 1;
}

//添加仇人
message C2SAddNewEnemy {
  int32 Id = 1; //对方ID
}
//添加仇人。客户端收到后重新拉取好友列表
message S2CAddNewEnemy {
  int32 Tag = 2; //结果标记
  int32 Id = 1; //对方ID
}

/***********************************************聊天系统相关*******************************************************/
//聊天消息结构
message ChatMsg {
  int64 ID = 1; //消息ID
  int32 ChannelId = 2; //频道ID
  int32 Type = 3; //消息类型skin
  string Content = 4; //消息内容
  int32 SenderId = 5; //发送人ID
  string SenderNick = 6; //发送人昵称
  int32 SenderRoleId = 7; //发送人角色ID
  int64 SenderGodLevel = 8; //境界等级
  int64 AreaId = 9; //区编号
  int32 SenderHead = 10; //发送人头像资源ID
  int32 SenderHeadFrame = 11; //发送人头像框资源ID
  int32 SenderChatFrame = 12; //发送人聊天框资源ID
  int32 SenderTitle = 13; //发送人称号皮肤ID
  int32 SenderVIP = 14; //发送人VIP
  int32 AtUserShowAreaId = 15; //@的人的区服id
  string AtUserNick = 16; //@的人的昵称
  int64 AtUserId = 17; //@的人的id
  string World = 18; //世界
  string AtWorld = 19; //@的人的世界
  int32 HideVIP = 20; //Vip等级是否屏蔽  0正常显示  1屏蔽
}

//发聊天消息
message C2SSendChatMsg {
  int32 ChannelId = 1; //频道ID
  string Content = 2; //消息内容
  int64 AtUserId = 3; //@的玩家id
}

//发聊天消息
message S2CSendChatMsg {
  int32 Tag = 1;
}

//拉取历史聊天消息
message C2SGetHistoryChat {
}

//拉取历史聊天消息
message S2CGetHistoryChat {
  repeated ChatMsg Chatmessage = 1; //各个频道的历史消息（最新50条）
}

// 删除指定玩家的聊天记录
message S2CDelHistoryChat {
  int32 Tag = 1;
  int64 UserId = 2; //被删除记录的玩家
  int64 MsgId = 3; //被删除的记录id
}

//推送新的系统和世界聊天消息
message S2CNewChatMsg {
  ChatMsg Chatmessage = 1;
}

//私聊消息结构
message WhisperMsg {
  int32 SenderId = 1; //发送方ID
  string SenderNick = 2; //消息字符串，拼接表情%emoj64%
  int32 SenderRoleId = 3; //发送人头像ID
  int64 SenderGodLevel = 4; //发送人的仙位
  int32 ReceiverId = 5; //接收方ID
  string ReceiverNick = 6; //消息字符串，拼接表情%emoj64%
  int32 ReceiverRoleId = 7; //发送人头像ID
  int64 ReceiverGodLevel = 8;
  string Content = 9; //消息字符串，拼接表情%emoj64%
  int64 Time = 10; //发送时间戳
}

//私聊
message C2SWhisper {
  int32 ReceiverId = 1; //对方ID
  string Content = 2; //消息字符串，拼接表情%emoj64%
}

//私聊
message S2CWhisper {
  int32 Tag = 1;
  WhisperMsg M = 2;
}

//获取和某人的私聊记录
message C2SGetWhisper {
  int32 PlayerId = 1; //对方ID
}

//获取和某人的私聊记录
message S2CGetWhisper {
  repeated WhisperMsg m = 1;
  int32 TargetId = 2;
}

//玩家上线时，主动推送所有未读私聊消息
message S2CAllUnreadWhisper {
  repeated WhisperMsg m = 1;
}
//获取玩家在线状态
message C2SGetOnlineStatus {
  repeated int32 UidList = 1;
}
message PlayerOnlineStatus {
  int32 Uid = 1; //玩家id
  int32 Status = 2; //0:不在线 1:在线
}
message S2CGetOnlineStatus {
  repeated PlayerOnlineStatus List = 1;
}
//删除和某人的私聊记录
message C2SRemoveWhisper {
  int32 PlayerId = 1; //对方ID
}

//删除和某人的私聊记录
message S2CRemoveWhisper {
  int32 Tag = 1;
}

/***********************************************背包系统相关*******************************************************/
//角色背包
message RoleBag {
  repeated ItemData Items = 1;
  int32 Size = 2; //背包总容量
  int32 Auto = 3; //是否自动熔炼
  int32 BeastSize = 4; //凶兽背包增量
  int32 HuanLingSize = 5; //幻灵背包增量
}

//背包物品发生变化时（登录时、获得、减少）推送玩家背包数据
message BagChange {
  int32 T = 1; //变化类型：0增加 1修改 2删除
  ItemData Item = 2; //物品修改后的状态
}

message S2CBagChange {
  repeated BagChange Change = 1;
}

//获得新道具，前端飘字
message S2CNewItem {
  repeated BagChange Change = 1;
}

//移除道具“新”标记
message C2SRemItemNew {
  string Id = 1; //唯一ID
}
message S2CRemItemNew {
  int32 Tag = 1;
  string Id = 2; //唯一ID
}

//（用于机器人）拉取当前的背包数据
message C2SUserBag {
}
//玩家登录时推送整个背包
message S2CUserBag {
  RoleBag Bag = 1;
  int32 Init = 2; //玩家登录时，第一个此包值为1，表示前端需要初始化背包数据
  int32 End = 3; //玩家登录时，最后一个此包值为1，表示所有背包数据发送完毕
}

//扩展玩家背包格子数量
message C2SExtendBag {
  int32 Count = 1; //开启背包格子数量
}
message S2CExtendBag {
  int32 Tag = 1;
  int32 Size = 2;
}

//扩展玩家装备背包格子数量
message C2SExtendEquipBag {
  int32 Type = 1; //1、凶兽 2、幻灵
  uint32 Count = 2; //开启背包格子数量
}
message S2CExtendEquipBag {
  int32 Tag = 1;
  int32 Type = 2; //1、凶兽 2、幻灵
  int32 Size = 3;
}

//背包装备分解
message C2SBagEquipBreak {
  int32 Type = 1; //1：凶兽 2：幻灵 3：英雄套装
  repeated string ItemIds = 2; //装备道具唯一id的数组
}
message S2CBagEquipBreak {
  int32 Tag = 1;
  int32 Type = 2; //1：凶兽 2：幻灵 3：英雄套装
}

//使用物品
message C2SExchange {
  string ItemID = 2; //要使用的物品ID
  uint64 Count = 1; //使用多少个兑换物
  int32 Param1 = 3; //兑换结果物品ID
}
message S2CExchange {
  int32 Tag = 1;
}

//批量使用物品
message C2SBatchExchange {
  repeated C2SExchange Exchange = 1;
}
message S2CBatchExchange {
  int32 Tag = 1;
}

//银两兑换
message C2SGoldBag {
  int32 Buy = 1; //是否用元宝购买，0否，1是
}
message S2CGoldBag {
  int32 Tag = 1;
}

//拉取银两兑换信息
message C2SGetGoldBagInfo {
}
message S2CGetGoldBagInfo {
  int32 TodayRamin = 1; //今日剩余次数
  int32 NextVipTimes = 2; //下一级VIP额外使用次数
}

// 货币兑换
message C2SCurrencyExchange {
  int32 ExchangeId = 1; // 兑换Id
}
message S2CCurrencyExchange {
  int32 Tag = 1;
}

message ItemSell {
  string SItemId = 1; // 道具唯一Id
  int64 ItemNum = 2; // 道具数量
}

// 道具出售
message C2SItemSell {
  repeated ItemSell ItemSell = 1;
}
message S2CItemSell {
  int32 Tag = 1;
}

//一键穿戴装备
message C2SWearEquip {
  int32 Type = 1; //装备所属系统类型，如人物、坐骑、翅膀等
}
message S2CWearEquip {
  int32 Tag = 1;
}

//穿戴单个装备。如果此装备已穿戴则脱掉
message C2SWearOneEquip {
  repeated string ItemId = 1; //要穿的装备ID
}
message S2CWearOneEquip {
  int32 Tag = 1;
}

//熔炼
message C2SMeltEquip {
  repeated string Items = 1; //要熔炼的装备ID数组
}
message S2CMeltEquip {
  int32 Tag = 1;
  repeated ItemData NewEquip = 2; //熔炼后是否掉落新装备
}

message S2CAutoMeltGain {
  repeated ItemData Items = 1;
}

//熔炼极品记录
message C2SMeltRecord {
}
message S2CMeltRecord {
  int32 Tag = 1; //结果标志
  repeated MeltRecord Record = 2; //记录列表
}
message MeltRecord {
  string Nick = 1; //玩家昵称
  ItemData Equip = 2; //熔炼出的装备
}

//自动熔炼规则设置，设置成功重发人物属性
message C2SMeltSetting {
  int32 Type = 1; //规则类型，1等级，2星级，3品质
  int32 Value = 2; //值
}
message S2CMeltSetting {
  int32 Tag = 1; //结果标志
}

//使用物品：开奖
message C2SOpenTreasure {
  string ItemID = 2; //要使用的物品ID
  uint64 Count = 1; //使用数量
}
message S2COpenTreasure {
  int32 Tag = 1;
}

//切换自动熔炼
message C2SAutoMelt {
}
message S2CAutoMelt {
  int32 Tag = 1;
  int32 Auto = 2; //是否自动熔炼，0否，1是
  int32 Melt = 3; //本次是否执行了熔炼操作，0否，1是
}

//施放当前等待发放的道具
message C2SGetBattlePrize {
}
//客户端飘字专用包
message ItemFly {
  repeated ItemNum Item = 1;
}

//道具合成，合成成功发背包变化
message C2SItemStick {
  int32 Id = 1; //要合成的道具ID
  uint32 Times = 2; //合成次数
}
message S2CItemStick {
  int32 Tag = 1;
  int32 Id = 2; //要合成的道具ID
  int32 Times = 3; //成功次数
}

/****************装备养成****************/

//装备格相关数据
message EquipPos {
  int32 Pos = 1; //位置
  int32 StrengthLevel = 2; //强化等级
  repeated IntAttrQ Attr = 3; //洗练属性。K表示属性ID，V表示值0
  repeated int32 Stone = 4; //此部位镶嵌的宝石道具ID数组，按顺序存放，长度为5
  int32 Steel = 5; //炼器层级
  int32 MaxSteel = 6; //炼器历史最高层级
  int32 ForgeLevel = 7; //洗练阶数，初始为1
  int32 MaxReborn = 8; //历史穿戴装备的最高转生等级
  int32 maxStar = 9; //历史穿戴装备的最高星级
  EquipDuJin EquipDuJin = 10; //镀金数据
  EquipZhuHun EquipZhuHun = 11; //铸魂数据
  EquipJingLian EquipJingLian = 12; //精炼数据
}

//洗练结果结构体，比属性结构体多一个品质字段
message IntAttrQ {
  int32 k = 1;
  int64 v = 2;
  int32 q = 3; //品质
}

//上线推送装备部位所有数据信息
message S2CEquipPosInfo {
  repeated EquipPos EquipPos = 1;
}

//炼器
message C2SEquipSteel {
  int32 Pos = 1; //炼器部位
  int32 Luck = 2; //是否使用幸运符，0否1是
  int32 Auto = 3; //是否自动购买，0否1是
  int32 Gold = 4; //是否使用神符，0否1是
}
message S2CEquipSteel {
  int32 Tag = 1; //结果标记
  int32 Success = 2; //是否成功，0否，1是
  int32 Pos = 3; //炼器部位
  int32 Steel = 4; //操作后层级
}

//星级传承
message C2SEquipStarGive {
  string Id1 = 1; //原装备ID
  string Id2 = 2; //目标装备ID
}
message S2CEquipStarGive {
  int32 Tag = 1;
  string Id1 = 2; //原装备ID
  string Id2 = 3; //目标装备ID
}

//装备升星
message C2SEquipRiseStar {
  int32 Quality = 1;
  int32 Reborn = 2;
  int32 Star = 3;
  int32 EquipPart = 4;
  string Id1 = 5; //升星装备1
  string Id2 = 6; //升星装备2
  string Id3 = 7; //升星装备3
}
message S2CEquipRiseStar {
  int32 Tag = 1;
  string Id = 2; //升星后装备
}

//装备一键升星
message C2SEquipOneKeyRiseStar {
  int32 Quality = 1;
  int32 Reborn = 2;
  int32 Star = 3;
  int32 EquipPart = 4;
}
message S2CEquipOneKeyRiseStar {
  int32 Tag = 1;
  repeated string Ids = 2; //升星后装备
}
//机器人一键升星
message C2SEquipOneKeyRiseStarRobot {
}
message S2CEquipOneKeyRiseStarRobot {
  int32 Tag = 1;
}

//装备打造
message C2SEquipBuild {
  int32 EquipSys = 1; //装备系统
  int32 EquipLevel = 2; //装备等级
  int32 EquipPart = 3; //装备部位
  int32 PrefBuild = 4; //使用完美打造石
  int32 ExcBuild = 5; //使用卓越属性石
}
message S2CEquipBuild {
  int32 Tag = 1;
  string Id = 2; //打造出来的新装备
}

//强化
message C2SEquipStrength {
  int32 Pos = 1; //要强化的装备位置，1-10。
}
//操作成功会主动推送S2CEquipPosInfo
message S2CEquipStrength {
  int32 Tag = 1;
  int32 Pos = 2; //要强化的装备位置，1-10。
  int32 StrengthLevel = 3; //操作后强化等级
}

//一键强化
message C2SEquipStrengthOneKey {
}
//操作成功会主动推送S2CEquipPosInfo
message S2CEquipStrengthOneKey {
  int32 Tag = 1;
  repeated int32 Pos = 2; //成功强化的部位
}

//激活强化大师
message C2SEquipStrengthSuit {
}
message S2CEquipStrengthSuit {
  int32 Tag = 1;
  int32 Level = 2; //激活后目前的强化大师等级
}

//装备洗练
message C2SEquipForge {
  int32 Pos = 1; //洗练位置
  int32 T = 2; //洗练类型是否使用仙玉洗练，0不使用，1使用
  repeated int32 LockAttr = 3; //锁定属性ID组，写属性ID而不是属性所处位置
  int32 Luck = 4; //是否使用洗练符，0否，1橙色，2红色
}
//操作成功会主动推送S2CEquipPosInfo
message S2CEquipForge {
  int32 Tag = 1; //结果
  int32 Pos = 2; //洗练位置
  int32 T = 3; //洗练类型是否使用仙玉洗练，0不使用，1使用
  repeated int32 LockAttr = 4; //锁定属性ID组
  repeated IntAttrQ Attr = 5; //洗练后属性。K表示属性ID，V表示值
}

//装备洗练升阶
message C2SEquipForgeLevel {
  int32 Pos = 1; //升阶位置
}
//操作成功会主动推送S2CEquipPosInfo
message S2CEquipForgeLevel {
  int32 Tag = 1; //结果
  int32 Pos = 2; //洗练位置
}
//前端打开洗练界面，隐藏小红点
message C2SEquipForgeOpen {
}

//一键镶嵌或替换宝石，镶嵌成功推送背包变化
message C2SEquipStoneWearChange {
}
//操作成功会主动推送S2CEquipPosInfo
message S2CEquipStoneWearChange {
  int32 Tag = 1;
}

//一键合成或替换宝石，镶嵌成功推送背包变化
message C2SEquipStoneStickChange {
}
//操作成功会主动推送S2CEquipPosInfo
message S2CEquipStoneStickChange {
  int32 Tag = 1;
}

//宝石合成，合成成功发背包变化
message C2SEquipStoneStick {
  int32 Id = 1; //要合成的宝石道具ID
  int32 Times = 2; //合成次数
}
message S2CEquipStoneStick {
  int32 Tag = 1;
  int32 Id = 2; //要合成的宝石道具ID
}

/***********************************************商城系统相关*******************************************************/
//虚拟商城类型列表
message C2SGetShopMallTypeList {
}
message S2CGetShopMallTypeList {
  repeated int32 MallTypeIdList = 1;
}

//虚拟商城列表
message C2SGetShopMallList {
  int32 MallType = 1;
}
message ShopGoodsInfo {
  int32 GoodsId = 1;
  int32 LimitBuy = 2; //是否达到购买条件 0:否 1:是
  int32 LimitUseTimes = 3; // 已经购买次数
  int32 LimitTotalTimes = 4; //限制购买次数
  int32 LimitTimesType = 5; //限制次数类型，0终身限制， 1每日限制
  int32 MallType = 6;
  int32 Sort = 7;
}
message S2CGetShopMallList {
  repeated ShopGoodsInfo GoodsData = 1;
  int32 LimitValue = 2; //限制购买因素的值
  int32 MallType = 3;
}
//虚拟商城购买
message C2SShopBuy {
  int32 GoodsId = 1;
  uint32 Num = 2;
}
message S2CShopBuy {
  int32 Tag = 1;
  int32 GoodsId = 2;
  int32 LimitBuy = 3; //是否达到购买条件 0:否 1:是
  int32 LimitUseTimes = 4; // 已经购买次数
  int32 LimitTotalTimes = 5; //总限制购买次数
  int32 LimitTimesType = 6; //限制次数类型，0终身限制， 1每日限制
  int32 MallType = 7;
}
//获取某个商品的限制购买次数数据
message C2SGetGoodsLimit {
  int32 GoodsId = 1;
}
message S2CGetGoodsLimit {
  int32 Tag = 1;
  int32 LimitUseTimes = 2; // 已经购买次数
  int32 LimitTotalTimes = 3; //总限制购买次数
  int32 LimitTimesType = 4; //限制次数类型，0终身限制， 1每日限制
}
/***********************************************寄售行*******************************************************/
message DbSendShop {
  string DbId = 1;
  ItemData ItemData = 2;
  int32 TotalNum = 3; //总数量
  int32 LeftNum = 4; //剩余数量
  int64 EndTime = 5; //到期时间
  int32 Uid = 6; //发布者id
  int32 Sid = 7; //发布者服务器id
  int32 Price = 8; //发布的单价
  int32 status = 10; //1:在售 2:售罄 3:已清算(下架)
  int64 LeftCoin3 = 11; //剩余提取的仙玉
  int64 LockTime = 12; //锁定时间

}
message DbSaleLog {
  int64 BuyerId = 1; //买家id
  int32 ItemId = 2; //购买道具
  int64 Num = 3; //购买数量
  int64 BuyTime = 4; //购买时间
  int64 Price = 5; //购买单价
}

//获取寄售列表
message C2SGetSendShopList {
  int32 Td = 1; //类型id 我的关注:-1
  int64 Page = 2; //页数
  int64 Size = 3; //每页大小
}
message S2KGetSendShopList {
  repeated int32 Items = 1;
  int32 Td = 2;
  int64 Page = 3;
  int64 Size = 4;
}
message SendShopGroup {
  int32 Iid = 1; //道具id
  int32 Sn = 2; //在售数量
  int32 M = 3; //是否关注
}
message S2CGetSendShopList {
  repeated SendShopGroup List = 1;
  int32 Td = 2; //类型id
  int32 Tag = 3;
  int64 Page = 4; //页数
  int64 Total = 5; //总记录数量
}

//获取单个商品列表
message C2SGetSendShopById {
  int32 Iid = 1; //道具id
  int64 Page = 2; //页数
  int64 Size = 3; //每页大小
}
message SendShopSingle {
  ItemData ItemData = 1;
  int32 P = 2; //单价
  int32 Ln = 3; //剩余数量
  int32 N = 4; //总数量
  int64 Et = 5; //到期时间戳
  string Lid = 6; //商品唯一标识
}
message S2CGetSendShopById {
  int32 Iid = 1;
  repeated SendShopSingle List = 2;
  int64 Page = 4; //页数
  int64 Total = 5; //总记录数量
}

//获取我的寄售列表
message SellItem {
  ItemData ItemData = 1;
  int32 L = 3; //最低限价
  int32 U = 4; //最高限价
  int32 P = 5; //参考单价
  repeated SendShopSingle OtherList = 6; //其他玩家出售列表

}
message C2SGetMySendShop {
}
message S2KGetMySendShopList {
  int32 PlayerId = 1;
  repeated ItemData Items = 2;
  int32 Lt = 3;
  int64 Page = 4;
  int64 Total = 5;
}
message S2CGetMySendShop {
  repeated SendShopSingle List = 1; //我的寄售列表
  repeated SellItem ItemList = 2; //可寄售商品信息
  int32 Lt = 3; //今日剩余可上架次数
}

//上架
message C2SSendShopOnSale {
  ItemData ItemData = 1; //道具
  int32 P = 3; //单价
}
message S2KSendShopOnSale {
  int32 PlayerId = 1;
  int32 ServerId = 2;
  ItemData ItemData = 3; //道具
  int32 Price = 5;
  string OrderId = 6; //订单编号
}
message S2CSendShopOnSale {
  int32 Tag = 1; //tag
  int64 SaleCount = 2; //寄售数量
}

//购买商品
message C2SSendShopBuy {
  string Lid = 1; //商品唯一标识
  int32 N = 2; //购买数量
}
message S2KSendShopPreBuy {
  string Lid = 1;
  int32 Num = 2;
}
message K2SSendShopPreBuy {
  int32 Tag = 1;
  int32 Price = 2;
  int32 ItemId = 3;
  int32 Num = 4;
  string Lid = 5;
}
message S2KSendShopBuy {
  string Lid = 1;
  int32 Num = 2;
  int32 PlayerId = 3;
  string OrderId = 4; //订单编号
}
message K2SSendShopBuy {
  string Lid = 1;
  ItemData ItemData = 2;
  int32 Coin3 = 4; //元宝
  int32 PlayerId = 5;
  int32 Tag = 6;
  string OrderId = 7; //订单编号
}
message S2CSendShopBuy {
  int32 Tag = 1; //tag
}

//清算(下架)
message C2SSendShopClear {
  string Lid = 1; //商品唯一标识  全部清算:-1
  int64 IsLower = 2; //是否下架，0，清算，1下架
}
message S2KSendShopClear {
  int32 PlayerId = 1;
  string Lid = 2;
  int64 IsLower = 3; //是否下架，0，清算，1下架
}
message ClearInfo {
  ItemData ItemData = 1;
  int32 Status = 3; //1:一个没卖 2:部分卖出 3:全卖了
  int64 Money = 4;
  int64 LeftNum = 5; //道具剩余数量
  int64 EndTime = 6; //开始寄售的时间戳
  int32 TotalNum = 7; //总售卖数量
  string Lid = 8; //db id
}
message K2SSendShopClear {
  repeated ClearInfo Items = 1;
  int64 SaleCount = 2; //寄售数量
  string OrderId = 3;
  int64 IsLower = 4; //是否下架，0，清算，1下架
}
message S2CSendShopClear {
  int32 Tag = 1; //tag
  int64 IsLower = 2; //是否下架，0，清算，1下架
}

//出售记录
message SaleItemLog {
  int32 Iid = 1; //道具id
  int32 N = 2; //道具数量
  int32 Gn = 3; //元宝数量
  int64 St = 4; //售出时间戳
}
message C2SSaleLog {
}
message S2KGetSaleLog {
  int32 PlayerId = 1;
}
message S2CSaleLog {
  repeated SaleItemLog List = 1; //记录
}

//标记收藏
message C2SMarkSendShop {
  int32 Iid = 1; //道具id
  int32 A = 2; //1:关注 2:取关
}
message S2CMarkSendShop {
  int32 Tag = 1; //tag
  int32 Iid = 2; //道具id
  int32 A = 3; //1:关注 2:取关
}

/***********************************************赠送相关*******************************************************/
//剩余赠送数量
message C2SGetSendCfg {
  int32 ItemId = 1;
}
message S2CGetSendCfg {
  int32 T = 1; //今日剩余赠送次数
}
//发送用户信息
message SendUserInfo {
  int64 UserId = 1; //用户id
  string Nick = 2; //用户昵称
  int64 FightValue = 3; //战斗力
  int64 Level = 4; //等级
  int64 VipLevel = 5; //vip等级
  int64 RoleId = 6; //种族编号
  int64 GodLevel = 7; //仙阶等级
  int64 AreaId = 8; //区编号
  int64 ServerId = 9; //当前的serverId
  int64 RealmLevel = 10; //境界等级
  int64 Reborn = 11; //转生数
  int64 Break = 12; //重数
  int32 HideVIP = 13; //Vip等级是否屏蔽  0正常显示  1屏蔽
}
message C2SGetSendUserInfo {
  int64 UseId = 1; //用户编号
}
message S2CGetSendUserInfo {
  int64 Tag = 1;
  SendUserInfo Info = 2;
}
message C2SSendItem {
  int32 Uid = 1; //接受者id
  int32 Iid = 2; //道具id
  int32 In = 3; //道具数量
}
message S2CSendItem {
  int32 Tag = 1; //tag
}

/***********************************************任务系统相关*******************************************************/
//玩家计数器信息
message Counter {
  int32 T = 1; //计数器类型  tontguan
  int64 C = 2; //当前计数量
  string UT = 3; //上次计数时间，某些计数器用来进行业务判断，如连续XXX
  int32 P = 4; // 参数
}
//玩家计数器信息
message S2CCounter {
  int32 T = 1; //计数器类型  tontguan
  int64 C = 2; //当前计数量
  int32 P = 4; // 参数
}

//数据库中的玩家任务信息
message Task {
  int32 Id = 1; //任务ID
  int32 T = 8; //任务类型
  //    int32 CT = 2; //全局计数器类型
  //    int32 S = 3; //0进行中，1已完成未领奖，2已完成已领奖
  int64 IC = 4; //接取任务时的初始计数，默认为0，当任务是独立计数时，初始值为全局计数
  int32 C = 5; //每日完成次数
  //    string ST = 5; //接取任务的时间，用来计算倒计时
  //    string FT = 6; //完成任务的时间，用来计算倒计时
  //    string GT = 7; //领取任务奖励的时间，用来计算倒计时
}

//已完成的任务存储简单
message FinishTask {
  int32 Id = 1; //任务ID
  int32 T = 2; //任务类型
  int64 IC = 3; //初始计数
  int32 C = 4; //每日完成次数
}

//返回给客户端的玩家任务信息
message S2CTask {
  int32 Id = 1;
  int32 T = 4; //任务类型
  int32 S = 2; //0进行中，1已完成未领奖，2已完成已领奖
  int64 IC = 3; //初始计数，默认为0，当任务是独立计数时，初始值为全局计数
}

//日常任务信息
message DBDailyTask {
  repeated DailyTask T = 1;
  string Key = 2; // 任务Key
}
//日常任务信息
message DailyTask {
  int32 Uid = 1; //玩家ID
  int32 ID = 2; //任务ID
  int32 T = 3; //任务类型
  int32 S = 4; //任务状态
  int64 I = 5; //初始计数
  int32 C = 6; //每日完成次数
}

//领取任务奖励
message C2SGetTaskPrize {
  int32 TaskId = 1; //任务ID
  int32 TaskType = 3; //任务类型
  int32 Multi = 2; //领取倍数
}
//领取任务奖励
message S2CGetTaskPrize {
  int32 Tag = 1; //操作结果
  repeated ItemInfo Prize = 2; //奖励数组
}

message C2SHistoryTaskInfo {
}
//主线任务数据
message S2CHistoryTaskInfo {
  //当前主线任务ID，若主线任务已完成，则此值为主线任务表最大ID
  int32 MainTaskId = 1;
  //当前地图任务小关总数。当主线任务完成时，此值开始+2递增。若为0，则说明还在做主线
  //此值表示当前地图任务所处的总关卡数，小于等于玩家当前已通关的总关卡数
  int32 NowStage = 2;
  //需要切换的新地图ID。若为0，说明不需要切换地图
  int32 NewMapId = 3;
  //因条件不足，等待接取的任务ID
  int32 WaitId = 4;
  //缓存记录主线任务中玩家已完成的通关任务目前到了多少关
  int32 TaskStage = 5;
}

//领取主线任务奖励
message C2SGetHistoryTaskPrize {
  int32 TaskId = 1; //任务ID
}
//领取主线任务奖励
message S2CGetHistoryTaskPrize {
  int32 Tag = 1; //操作结果
  repeated ItemInfo Prize = 2; //奖励数组
  S2CTask NextTask = 3; //下一个主线任务
}

//机器人直接更改当前任务为完成状态，一般在场景相关任务下使用
message C2SRobotCompleteTask {
  int32 TaskId = 1; //任务ID
  int32 TaskType = 2; //任务类型
}
message S2CRobotCompleteTask {
  int32 Tag = 1;
}

//资源找回数据结构
message LifeRemain {
  int32 TaskId = 1; //历练任务ID
  int32 Type = 2; //类型，1绑元 2元宝 3历练点
  int32 Times = 3; //可找回次数
}

//返回昨日历练任务可找回资源
message S2CLastDayRemain {
  repeated LifeRemain List = 1; //所有可找回的历练任务及次数
}

//找回
message C2SLifeFind {
  int32 TaskId = 1; //历练任务ID
  int32 Type = 2; //找回类型：1绑元 2元宝 3历练点
  uint32 Count = 3; //找回次数
}
//找回
message S2CLifeFind {
  int32 Tag = 1; //结果标记
  LifeRemain Remain = 2; //找回之后的信息
}

//一键找回
message C2SLifeFastFind {
}
message S2CLifeFastFind {
  int32 Tag = 1; //结果标记
}

//世界等级数据
message C2SWorldLevel {
}

//世界等级数据
message WorldLevel {
  int32 Level = 1; //当前世界等级
  repeated Rank Players = 2; //前三名玩家信息
}

//平定安邦一键完成
message C2SPeaceFinish {
}
message S2CPeaceFinish {
  int32 Tag = 1; //结果标记
}

/*********************师门任务***********************/
//数据库中存储的怪物数据结构
message SMMonsterInfo {
  int32 RefreshId = 1; //怪物刷新id
  int32 Star = 2; //怪物星级
}
//单个师门怪物信息
message SMMonster {
  int32 Id = 1; //怪物id 。怪物表中的ID
  int32 Star = 2; //怪物星级
}
//当前师门怪物信息。当上线、杀怪等操作之后重新推这个包
message S2CSMMonster {
  repeated SMMonster Monster = 1; //地图剩余妖魔数组
}

//挑战师门怪，发过来要挑战怪物的刷新ID和星级以作验证
message C2SSMFight {
  SMMonster Monster = 1; //怪物数据
}
message S2CSMFight {
  int32 Tag = 1; //结果标记
  repeated ItemInfo Prize = 2; //奖励
}

//一键刷新星级至满星
message C2SSMRefreshStar {
  SMMonster Monster = 1; //怪物数据
}
message S2CSMRefreshStar {
  int32 Tag = 1; //结果标记
  SMMonster OldMonster = 2; //刷新前的老怪物数据
  SMMonster NewMonster = 3; //刷新后的怪物信息
}

//一键完成任务
message C2SSMFastFinish {
}
message S2CSMFastFinish {
  int32 Tag = 1; //结果标记
  repeated ItemInfo Prize = 2; //奖励
}
/***********************************************邮件系统相关*******************************************************/
//邮件信息
message MailInfo {
  int32 MailId = 1;
  int32 MailTplId = 2; //邮件模板ID
  string MailTplParam = 4;
  string Title = 5; //邮件标题
  int32 MailType = 6; //邮件类型
  int32 IsRead = 7; // 1:未读 2:已读
  int32 IsReceive = 8; //1:有附件未领取 2:已领取
  string ReceiveTime = 9; //发送时间
  string Content = 10;
  repeated ItemInfo AttachInfo = 11; //不唯一的附件
  repeated ItemData AttachData = 12; //唯一的附件
}
//数据库用邮件信息
message DbMailInfo {
  int32 MailId = 1;
  int32 MailTplId = 2;
  string MailTplParam = 3;
  int32 MailType = 4;
  int32 IsReceive = 5; // 1 未领取 2 已领取
  string Content = 6;
  int64 ReceiveTime = 7; //发送时间戳
  int32 ChangeType = 8;
  int32 SendUserId = 9;
  string SendUserNick = 10;
  string Title = 11; //邮件标题
  repeated ItemInfo AttachInfo = 12; //不唯一的附件
  repeated ItemData AttachData = 13; //唯一的附件
  int32 IsRead = 14; // 1 未读 2 已读
  int64 BgId = 15; //后台ID(后台发送的用户邮件)
}

message RoleMail {
  int32 SystemMailId = 1;
  int32 UserMailId = 2;
  int32 DbMailId = 3;
  repeated DbMailInfo DbMailInfo = 4;
}
message C2SMailList {
  int32 MailType = 1;
}
//邮件列表
message S2CMailList {
  repeated MailInfo MailList = 1;
}

//获取邮件附件
message C2SGetMailAttach {
  int32 MailId = 1;
  int32 MailType = 2;
}
message S2CGetMailAttach {
  int32 Tag = 1;
}

//读取邮件
message C2SReadMail {
  int32 MailId = 1;
  int32 MailType = 2;
}
message S2CReadMail {
  int32 Tag = 1;
}

//一键删除邮件
message C2SDelMail {
  int32 MailId = 1; //为0 ，全部删除
  int32 MailType = 2;
}
message S2CDelMail {
  int32 Tag = 1;
}

message C2SGM {//1
  string Data = 1;
}
message S2CNewMail {
}
/***********************************************BOSS系统相关*******************************************************/
//服务器极品掉落记录
message BossGoodDrop {
  string IT = 1; //场景类型名称
  string Nick = 2; //玩家昵称
  int64 Time = 3; //掉落时间
  int32 Item = 4; //装备ID
  string World = 5;
}
//拉取极品掉落记录
message C2SGetBossGoodDrop {
}
message S2CGetBossGoodDrop {
  repeated BossGoodDrop List = 1;
}

//玩家个人Boss数据
message PlayerPersonalBossData {
  int32 Id = 1; //BossId
  int64 NextTimestamp = 2; //下一次可以挑战的时间戳
}
//个人boss信息
message BossPersonalInfo {
  int32 Id = 1;
  int32 K = 2; //是否击杀，0，没有击杀，1已经击杀
  int32 L = 3; //剩余挑战次数
  int64 NT = 4; //下一次可以挑战的时间戳
}
//发送个人boss信息
message S2CBossPersonalInfo {
  repeated BossPersonalInfo Items = 1;
}
//个人boss挑战
message C2SBossPersonalFight {
  int32 Id = 1;
}
message S2CBossPersonalFight {
  int32 Tag = 1;
  int32 Id = 2;
  int64 Win = 3; //是否胜利
  int64 NT = 4; //下一次可以挑战的时间戳
}
//个人boss，一键扫荡
message C2SBossPersonalSweep {
}
message S2CBossPersonalSweep {
  int32 Tag = 1;
  repeated BossPersonalInfo Ids = 2;
}

//玩家VipBoss数据
message PlayerVipBossData {
  int32 Id = 1; //BossId
  int64 NextTimestamp = 2; //下一次可以挑战的时间戳
}
//至尊首领
message BossVipInfo {
  int32 Id = 1;
  int64 K = 2; //是否击杀，0，没有击杀，1已经击杀
  int32 L = 3; //剩余挑战次数
  int64 NT = 4; //下一次可以挑战的时间戳
}
//发送至尊首领信息
message S2CBossVipInfo {
  repeated BossVipInfo Items = 1;
}
message C2SBossVipStart {
  int32 Id = 1;
}
message S2CBossVipStart {
  int32 Tag = 1;
  int32 Id = 2;
  int32 Win = 3; //是否胜利，1胜利，0挑战失败
  int64 NT = 4; //下一次可以挑战的时间戳
}
//至尊boss，一键扫荡
message C2SBossVipSweep {
}
message S2CBossVipSweep {
  int32 Tag = 1;
  repeated BossVipInfo Ids = 2;
}
/***********************************************多人boss*******************************************************/
//玩家多人Boss数据
message PlayerMultiBossData {
  int32 Id = 1; //BossId
  int32 IsInspireOpen = 2; //是否开启鼓舞
  int64 InspireTimestamp = 3; //鼓舞倒计时时间戳
}
//多人boss信息
message MultiBossInfo {
  int32 Id = 1;
  int64 CurrHp = 2;
  int64 MaxHP = 3;
  int32 Num = 4; //争夺人数
  int64 ReliveTimestamp = 5; //复活时间戳
  int64 RunAwayTimestamp = 6; //逃跑时间戳
  int32 State = 7; //Boss状态  0,可挑战  1,挑战中  2,已逃跑
  string LastNick = 8; //上轮归属玩家昵称
  int64 LastUserId = 9; //上轮归属玩家Id
}

//向客户端发送多人Boss信息
message C2SMultiBossInfo {
}
message S2CMultiBossInfo {
  repeated MultiBossInfo Items = 1;
}

//玩家锁定在哪一个Boss
message C2SMultiBossPlayerInBoss {
}
message S2CMultiBossPlayerInBoss {
  int32 BossId = 1;
  int32 DamageOrder = 2;
  int64 Damage = 3;
}

//进入Boss场景
message C2SMultiBossJoinScene {
  int32 Id = 1;
}
message S2CMultiBossJoinScene {
  int32 Tag = 1;
  int32 Id = 2;
}

//离开Boss场景
message C2SMultiBossLeaveScene {
  int32 Id = 1;
}
message S2CMultiBossLeaveScene {
  int32 Tag = 1;
}

//挑战 舍弃
message C2SMultiBossStart {
  int32 Id = 1;
}
message S2CMultiBossStart {
  int32 Tag = 1;
}

//鼓舞
message C2SMultiBossInspire {
  int32 Id = 1;
  int32 InspireType = 2; //1元宝鼓舞,2仙玉鼓舞
}
message S2CMultiBossInspire {
  int32 Tag = 1;
  int32 Id = 2;
  int32 IsInspireOpen = 3; //是否开启鼓舞
  int64 InspireTimestamp = 4; //鼓舞倒计时时间戳
}

//多人boss提示配置
message C2SMultiBossCfg {
  string Cfg = 1;
}

//获取多人boss购买信息
message C2SMultiBossGetBuyInfo {
}
message S2CMultiBossGetBuyInfo {
  int32 Coin = 1; //货币数量
  int32 CoinType = 2; //货币类型
  int32 Times = 3; //挑战次数
  int32 LeftTimes = 4; //剩余次数
  int32 TotalTimes = 5; //购买次数上限
  int32 NoticeTimes = 6; //预告次数
  int32 NoticeVip = 7; //预告vip
}

message C2SMultiBossBuyTimes {
  uint32 Num = 1; //购买次数
}
message S2CMultiBossBuyTimes {
  int32 Tag = 1;
}

message MultiBossDamageRank {
  int64 UserId = 1;
  int64 DamageTime = 2;
  string Nick = 3;
  int64 Damage = 4;
  int32 Head = 5; //头像资源ID
  int32 HeadFrame = 6; //头像框资源ID
  string World = 7;
}
message C2SMultiBossGetDamageLog {
  int32 Id = 1;
}
message S2CMultiBossGetDamageLog {
  int32 BossId = 1;
  int32 BossState = 2;
  repeated MultiBossDamageRank Items = 3;
  int64 MyDamage = 4;
}
message S2CMultiBossGetMyDamage {
  int32 BossId = 1;
  int64 MyDamage = 2;
}

//角色鼓舞数据
message InspireData {
  string InstanceId = 1; //key值,取用场景副本Id
  int32 IsInspireOpen = 2; //是否开启鼓舞
  int64 InspireTimestamp = 3; //鼓舞倒计时时间戳
}
message RoleInspires {
  repeated InspireData Items = 1;
}

//Boss场景鼓舞
message C2SBossInspire {
  string InstanceId = 1; //场景Id
  int32 InspireType = 2; //1元宝鼓舞,2仙玉鼓舞
}
message S2CBossInspire {
  int32 Tag = 1;
  string InstanceId = 2; //场景Id
  int32 InspireType = 3; //1元宝鼓舞,2仙玉鼓舞
  int32 IsInspireOpen = 4; //是否开启鼓舞
  int64 InspireTimestamp = 5; //鼓舞倒计时时间戳
}


message J2SUserLogin {
  int64 UserId = 1;
  string Token = 2;
  int64 PlatFormUserId = 3;
  int32 ServerId = 4;
  int32 AreaId = 5;
}
message J2SUserLogout {

}
message S2JUserState {
  int32 State = 1;
}
message J2SStartLogin {

}

//玩家仇人数据
message EnemyData {
  int64 UserId = 1; //仇人的Id
  string Nick = 2; //昵称
  string EnmityPlace = 3; //结仇地方
}
message RoleEnemys {
  repeated EnemyData Items = 1;
}
message S2CAddEnemy {
  EnemyData data = 1;
}
/***********************************************世界boss*******************************************************/
//世界boss归属数据
message WorldBossOwnerData {
  int64 UserId = 1;
  string Nick = 2;
  int64 AreaId = 3; //区ID
  int32 ShowHead = 4; //头像
  int32 ShowHeadFrame = 5; //头像框
  int64 Hp = 6; //血量
  string World = 7; //世界简称
}
//通知客户端归属发生变化
message S2CWorldBossOwner {
  WorldBossOwnerData Data = 1;
}

//世界Boss达标奖励
message WorldBossReachGoalPrize {
  int32 Id = 1; //奖励Id
  int32 State = 2; //奖励状态  0进行中，1已完成未领奖，2已完成已领奖
}
//通知客户端奖励状态发生变化
message S2CWorldBossReachGoalPrize {
  int32 FightTimes = 1;
  repeated WorldBossReachGoalPrize Items = 2;
}
//领奖
message C2SWorldBossReachGoalGetPrize {
  int32 Id = 1;
}
message S2CWorldBossReachGoalGetPrize {
  int32 Tag = 1;
  int32 Id = 2;
}

//世界Boss破盾奖励归属玩家
message WorldBossBreakShieldOwnerData {
  int64 UserId = 1;
  string Nick = 2;
  int64 AreaId = 3; //区ID
  int32 Points = 4; //拼出点数
  string World = 5; //世界简称
}
//世界Boss破盾奖励拼点信息
message S2CWorldBossBreakShieldInfo {
  int64 OverTimestamp = 1; //拼点结束时间
  WorldBossBreakShieldOwnerData Owner = 2;
  int32 MyState = 3; //我的拼点状态   0未拼点  1已拼点    2放弃拼点
  int32 MyPoints = 4; //我拼出的点数
}

//拼点
message C2SWorldBossStakePoints {
  int32 Op = 1; //拼点操作，1拼点 2放弃拼点
}
message S2CWorldBossStakePoints {
  int32 Tag = 1;
  int32 State = 2; //0未拼点  1已拼点    2放弃拼点
  int32 Points = 3; //拼出点数
}

//世界Boss等级
message S2CWorldBossLevel {
  int32 Level = 1;
}

//boss刷新时间
message S2CBossRefreshTime {
  int64 RefreshTime = 1; //刷新时间(最终几点刷新)
}

//世界Boss活动结束
message S2CWorldBossEnd {
  int32 Tag = 1;
  int64 SceneCloseTime = 2; //关闭场景时间
}

//世界Boss关闭场景
message S2CWorldBossCloseScene {
  int32 Tag = 1;
}

/***********************************************boss之家*******************************************************/
//boss之家Boss信息
message HomeBossInfo {
  int32 HomeId = 1;
  int32 BossId = 2;
  int64 CurrHp = 3;
  int64 MaxHP = 4;
  HomeBossOwnerData BossOwner = 5; //Boss归属玩家

  int32 State = 6; //Boss状态  0,死亡  1,复活
  int64 ReliveTimestamp = 7; //复活时间戳
  int32 MonsterLevel = 8;
}

//向客户端发送Boss之家Boss信息
message S2CHomeBossInfo {
  repeated HomeBossInfo Items = 1;
}

//进入Boss场景
message C2SBossHomeJoinScene {
  int32 HomeId = 1;
}
message S2CBossHomeJoinScene {
  int32 Tag = 1;
  int32 HomeId = 2;
}

//离开Boss场景
message C2SBossHomeLeaveScene {
  int32 HomeId = 1;
}
message S2CBossHomeLeaveScene {
  int32 Tag = 1;
  int32 HomeId = 2;
}

message HomeBossDamage {
  int64 UserId = 1;
  int64 DamageTime = 2;
  string Nick = 3;
  int64 Damage = 4;
  int64 AreaId = 5; //区服Id
  int32 ShowHead = 7; //头像
  int32 ShowHeadFrame = 8; //头像框
  string World = 9; //世界简称
}
//Boss之家伤害排行
message S2CHomeBossDamageRank {
  int32 HomeId = 1;
  int32 BossId = 2;
  repeated HomeBossDamage Items = 3;
}
//Boss之家我的伤害
message S2CHomeBossDamageMy {
  int32 HomeId = 1;
  int32 BossId = 2;
  int64 MyDamage = 3;
}
//Boss之家归属玩家数据
message HomeBossOwnerData {
  int64 UserId = 1;
  string Nick = 2;
  int64 AreaId = 3; //区服ID
  int32 ShowHead = 4; //头像
  int32 ShowHeadFrame = 5; //头像框
  int64 Hp = 6; //血量
  string World = 7; //世界简称
}
//Boss之家通知客户端归属发生变化
message S2CHomeBossOwner {
  int32 HomeId = 1;
  int32 BossId = 2;
  HomeBossOwnerData Data = 3;
}

//Boss之家, 玩家使用体力丹
message C2SHomeBossBuyBodyPower {
}
message S2CHomeBossBodyPower {
  int32 Tag = 1;
}

//Boss之家自动购买体力丹
message C2SHomeBossAutoBuy {
  int32 AutoBuy = 1;
}
message S2CHomeBossAutoBuy {
  int32 Tag = 1;
  int32 AutoBuy = 2;
}

//Boss之家 体力不足时是否使用体力丹
message S2CHomeBossIfUseBodyPower {
  int64 KickOutTimestamp = 1; //如果不使用体力丹，踢出场景时间戳
  int32 HomeId = 2;
}
message C2SHomeBossIfUseBodyPower {//TODO 废弃
  int32 Use = 1; //0不使用  1 使用
  int32 HomeId = 2;
}

message S2CHomeBossTempBagAdd {
  repeated ItemData Items = 1;
}
message C2SHomeBossGetTempBag {
}
message S2CHomeBossGetTempBag {
  repeated ItemData Items = 1;
}
message C2SHomeBossReceiveTempBag {
}
message S2CHomeBossReceiveTempBag {
  int32 Tag = 1;
}

//世界Boss设置复活提醒
message C2SBossHomeCfg {
  string Cfg = 1;
}

/***********************************************>>>>>>>>>*******************************************************/
//世界boss排行榜数据
message WorldBossRankData {
  int64 UserId = 1;
  string Nick = 2;
  int32 RoleId = 3;
  int64 Damage = 4;
  int64 AreaId = 5; //区ID
  string World = 6; //世界简称
}
//通知客户端前5名发生变化
message S2CWorldBossRank5 {
  repeated WorldBossRankData Rank = 1;
}
//世界boss结算信息
message S2CActWorldBossSettlement {
  string KillNick = 1; //击杀者名字
  string KillGang = 2; //击杀者帮派
  int32 KillAreaId = 3; //击杀者帮派
  string FirstNick = 4; //第一名字
  string FirstGang = 5; //第一者帮派
  int32 FirstAreaId = 6; //第一者帮派
  int32 Rank = 7; //我的伤害排名（用来显示伤害排名奖励）
  int32 IsKill = 8; //是否是击杀者
  int32 KillRoleId = 9; //击杀者种族
  int32 FirstRoleId = 10; //第一名种族
}

message WorldBossKillData {
  int64 UserId = 1;
  string Nick = 2;
  string GangName = 3;
  int64 AreaId = 4; //区编号
  string World = 5; //世界简称
}
//世界boss击杀数据
message K2SWorldBossKillData {
  WorldBossKillData Data = 1;
}
//获取上次击杀信息
message C2SGetWorldBossKillData {

}
message S2CGetWorldBossKillData {
  WorldBossKillData Data = 1;
}
//获取伤害排名
message C2SGetWorldBossRank {
  int32 Num = 1; //请求排行榜数量
}
message S2CGetWorldBossRank {
  repeated WorldBossRankData Rank = 1;
  int32 SelfRank = 2; //自己的排名,0表示没有排名
  int64 SelfDamage = 3; //自己的航海
}
/************************************************************************************************************/
//材料副本信息
message InstanceMaterialInfo {
  int32 Id = 1; //副本编号
  int32 K = 2; //是否击杀，0，没有击杀，1已经击杀
  int32 L = 3; //剩余挑战次数
  int32 V = 4; //可以购买的vip等级
  int32 C = 5; //vip购买价格.
  int32 T = 6; //vip购买货币类型
  int32 S = 7; //副本星级
  int32 E = 8; //当前星级经验
  int32 LB = 9; //剩余购买次数
}
//获取材料副本信息
message C2SInstanceMaterialInfo {
}
//发送材料副本信息
message S2CInstanceMaterialInfo {
  repeated InstanceMaterialInfo Items = 1;
}

//材料副本挑战
message C2SInstanceMaterialFight {
  int32 Id = 1;
}
message S2CInstanceMaterialFight {
  int32 Tag = 1;
  InstanceMaterialInfo info = 2;
}
//材料副本，一键扫荡
message C2SInstanceMaterialSweep {
  int32 Id = 1; //不指定ID为一键扫荡
}
message S2CInstanceMaterialSweep {
  int32 Tag = 1;
  //    repeated InstanceMaterialInfo info = 2;
}
//一键购买次数
message C2SInsMatePurchase {
  int32 Id = 1; //不指定ID为一键购买
}
message S2CInsMatePurchase {
  int32 Tag = 1;
  int32 FBId = 2; //副本Id
}

//试炼副本信息
message InstanceSLInfo {
  int32 Id = 1; //副本编号
  int32 K = 2; //是否击杀，0，没有击杀，1已经击杀
  int32 L = 3; //剩余挑战次数
  int32 V = 4; //可以购买的vip等级
  int32 C = 5; //vip购买价格.
  int32 T = 6; //vip购买货币类型
  int64 Max = 7; //最高击杀数
  int32 LB = 8; //剩余购买次数
}
message C2SEnterSLFB {
  int32 Id = 1; // 副本ID
}
message S2CEnterSLFB {
  int32 Tag = 1;
}
message C2SLeaveSLFB {
  int32 Id = 1; // 副本ID
}
message S2CLeaveSLFB {
  int32 Tag = 1;
}
//获取试练副本信息
message C2SInstanceSLInfo {
}
//发送试炼副本信息
message S2CInstanceSLInfo {
  repeated InstanceSLInfo Items = 1;
}
//试炼副本挑战
message C2SInstanceSLFight {
  int32 Id = 1;
  int32 Auto = 2; // 是否自动挑战，1 是
}
message S2CInstanceSLFight {
  int32 Tag = 1;
  InstanceSLInfo info = 2;
}
//是否自动战斗
message C2SInstanceSLAutoFight {
  int32 Id = 1;
  int32 Auto = 2; // 是否自动挑战，1 是
}
message S2CInstanceSLAutoFight {
  int32 Tag = 1;
  int32 Auto = 2; // 是否自动挑战，1 是
}
//材料副本，一键扫荡
message C2SInstanceSLSweep {
  int32 Id = 1; //不指定ID为一键扫荡
}
message S2CInstanceSLSweep {
  int32 Tag = 1;
}
//一键购买次数
message C2SInsSLPurchase {
  int32 Id = 1; //不指定ID为一键购买
}
message S2CInsSLPurchase {
  int32 Tag = 1;
  int32 FBId = 2; //副本id
}
//试炼副本鼓舞
message C2SInsSLInspire {
  int32 Id = 1; // 副本ID
  int32 IsCoin3 = 2; // 仙玉鼓舞 1:是
  int32 IsCoin4 = 3; // 元宝鼓舞 1:是
  int32 Coin3Auto = 4; // 仙玉自动加成 1:是
  int32 Coin4Auto = 5; // 元宝自动加成 1:是
}
message S2CInsSLInspire {
  int32 Tag = 1;
  int32 Id = 2; // 副本ID
  int32 Coin3Times = 3; // 仙玉鼓舞次数
  int32 Coin4Times = 4; // 元宝鼓舞次数
  int32 Coin3Auto = 5; // 仙玉自动加成 1:是
  int32 Coin4Auto = 6; // 元宝自动加成 1:是
}

//藏宝图副本信息
message InstanceTreasureInfo {
  int32 Id = 1; //副本编号
  int64 S = 2; //星星, 0 为未击杀
  int32 L = 3; //剩余挑战次数 ,0 ,客户端显示已领取
}
//发送藏宝图副本信息
message S2CInstanceTreasureInfo {
  repeated InstanceTreasureInfo Items = 1;
  repeated int32 B = 2; //已经领取过的宝箱id
}
//藏宝图副本挑战
message C2SInstanceTreasureFight {
  int32 Id = 1;
}
message S2CInstanceTreasureFight {
  int32 Tag = 1;
  int32 Star = 2; //星星
  int32 Id = 3;
}
//个人boss，一键扫荡
message C2SInstanceTreasureSweep {
}
message S2CInstanceTreasureSweep {
  int32 Tag = 1;
  repeated int32 Ids = 2;
}
//藏宝图副本领取宝箱
message C2SGetInstanceTreasureBox {
  int32 Id = 1; //0一键领取
}
//藏宝图副本领取宝箱
message S2CGetInstanceTreasureBox {
  int32 Tag = 1;
  repeated int32 Ids = 3;
}

//发送勇闯天庭信息
message S2CInstanceHeavenlyInfo {
  int32 M = 1; //历史最高关卡
  int32 D = 2; //今日最高关卡
  repeated int32 B = 3; //已经领取过的宝箱id
}

//勇闯天庭挑战
message C2SInstanceHeavenlyFight {
  int32 Id = 1;
}
//勇闯天庭挑战
message S2CInstanceHeavenlyFight {
  int32 Tag = 1;
  int32 Id = 2;
  int32 Win = 3; //输赢：大于0 赢，0输`
}
//勇闯天庭挑战
message C2SInstanceHeavenlySweep {
}
//勇闯天庭挑战
message S2CInstanceHeavenlySweep {
  int32 Tag = 1;
  int32 D = 2; //今日最高关卡
}
//勇闯天庭挑战
message C2SGetInstanceHeavenlyBox {
  int32 Id = 1;
}
//勇闯天庭挑战
message S2CGetInstanceHeavenlyBox {
  int32 Tag = 1;
  int32 Id = 3;
}

//发送降妖除魔信息
message S2CInstanceDemonInfo {
  int32 M = 1; //历史最高关卡
  int32 D = 2; //今日最高关卡
  repeated int32 B = 3; //已经领取过的宝箱id
}

//降妖除魔挑战
message C2SInstanceDemonFight {
  int32 Id = 1;
}
//降妖除魔挑战
message S2CInstanceDemonFight {
  int32 Tag = 1;
  int32 Id = 2;
  int32 Win = 3; //输赢：大于0 赢，0输`
}
//降妖除魔挑战
message C2SInstanceDemonSweep {
}
//降妖除魔挑战
message S2CInstanceDemonSweep {
  int32 Tag = 1;
  int32 D = 2; //今日最高关卡
}
//降妖除魔挑战
message C2SGetInstanceDemonBox {
  int32 Id = 1;
}
//降妖除魔挑战
message S2CGetInstanceDemonBox {
  int32 Tag = 1;
  int32 Id = 3;
}

//发送玲珑宝塔信息
message S2CInstanceTowerInfo {
  int32 M = 1; //历史最高关卡
}
//玲珑宝塔挑战
message C2SInstanceTowerFight {
  int32 Id = 1;
}
//玲珑宝塔挑战
message S2CInstanceTowerFight {
  int32 Tag = 1;
  int32 Id = 2;
  int32 Win = 3; //输赢：大于0 赢，0输`
}

/***********************************************伙伴系统相关*******************************************************/
message Partner {
  int32 Id = 1; //系统ID，不同类型的伙伴ID会重复
  int32 T = 2; //类型
  int32 L = 3; //等级
  int32 E = 4; //经验（升级进度条）
  repeated Skill AS = 5; //主动技能列表
  repeated Skill PS = 6; //被动技能列表
  repeated Skill PS2 = 7; //刷新被动技能临时列表
  int32 R = 8; //被动技能刷新次数
  int32 B = 9; //出战顺序
  int32 S = 10; //星级
  int32 SE = 11; //升星进度条
  int32 G = 12; //突破星级
  int32 GE = 13; //突破升星进度条
  string N = 14; //玩家修改的昵称
  int32 M = 15; //合体仙侣
  int32 Use = 16; //仙侣（仙侣上阵已用 1：激活；2：觉醒）
  int32 Sex = 17; //仙童性别
}

//获取指定类型下的所有伙伴信息
message C2SGetAllPartnerByType {
  int32 Type = 1; //伙伴类型
}
message S2CGetAllPartnerByType {
  repeated Partner Partners = 1;
}

//获取伙伴基础数据
message C2SGetPartner {
  int32 Id = 1; //ID
  int32 Type = 2; //类型
}
message S2CGetPartner {
  Partner P = 1; //数据
}

//升级
message C2SPartnerLevelUp {
  int32 Id = 1; //ID
  int32 Type = 2; //类型
  int32 Auto = 3; //是否自动购买，0否，1是
  uint32 Times = 4; //培养道具数量
  int32 ItemId = 5; //仙童培养有多个道具Id的情况下，需要指定道具
}
message S2CPartnerLevelUp {
  int32 Tag = 1;
  int32 Id = 2; //ID
  int32 Type = 3; //类型
  int32 L = 4; //等级
  int32 E = 5; //经验（升级进度条）
  repeated Skill PassiveSkills = 6;
}

//升星
message C2SPartnerStarUp {
  int32 Id = 1; //ID
  int32 Type = 2; //类型
}
message S2CPartnerStarUp {
  int32 Tag = 1;
  int32 Id = 2; //ID
  int32 Type = 3; //类型
  int32 S = 4; //星级
  int32 SE = 5; //升星进度条
  repeated Skill ActiveSkills = 7; //如果是仙侣升星或仙童天赋升级，则将主动技能当前等级返回
}

//突破
message C2SPartnerGradeUp {
  int32 Id = 1; //ID
  int32 Type = 2; //类型
}
message S2CPartnerGradeUp {
  int32 Tag = 1;
  int32 Id = 2; //ID
  int32 Type = 3; //类型
  int32 G = 4; //突破阶数
  int32 GE = 5; //突破进度条
}

//出战。如果用一个伙伴替换另一个伙伴的位置，则后者直接休息
message C2SPartnerBattlePos {
  int32 Id = 1; //ID
  int32 Type = 2; //类型
  int32 Pos = 3; //出战顺序，0表示休息，1234
}
message S2CPartnerBattlePos {
  int32 Tag = 1;
  int32 Id = 2; //ID
  int32 Type = 3; //类型
  int32 RestId = 5; // 被顶替之后休息的伙伴ID
  int32 Pos = 4; //出战顺序，0表示休息，1234
}

//机器人用：一键出战
message C2SPartnerBattlePosRobot {
  int32 Type = 1; //类型
}

//刷新被动技能
message C2SPartnerRefreshSkill {
  int32 Id = 1; //ID
  int32 Type = 2; //类型
  int32 RefreshType = 3; //刷新类型，1低级，2高级
  repeated Skill LockSkills = 4; //锁定的技能数组
  int32 Auto = 5; //是否自动购买材料，0否1是
}
message S2CPartnerRefreshSkill {
  int32 Tag = 1;
  repeated Skill Skills = 2; //刷新被动技能临时列表
  int32 Id = 3; //ID
  int32 Type = 4; //类型
  int32 RefreshType = 5; //刷新类型，1低级，2高级
  repeated Skill LockSkills = 6; //锁定的技能数组
  int32 Times = 7; //总刷新次数
}

//遗忘被动技能（魔灵）
message C2SPartnerDelSkill {
  int32 Id = 1; //魔灵ID
  int32 SkillId = 2; //要遗忘的技能ID
}
message S2CPartnerDelSkill {
  int32 Tag = 1;
  int32 Id = 2; //ID
  repeated Skill Skills = 3; //遗忘被动技能后的列表
}

//升级被动技能（魔灵）
message C2SPartnerUpSkill {
  int32 Id = 1; //魔灵ID
  int32 SkillId = 2; //要升级的技能ID
}
message S2CPartnerUpSkill {
  int32 Tag = 1;
  int32 Id = 2; //魔灵ID
  repeated Skill Skills = 3; //遗忘被动技能后的列表
}

//替换刷新出来的临时被动技能
message C2SPartnerReplaceSkill {
  int32 Id = 1; //ID
  int32 Type = 2; //类型
}
message S2CPartnerReplaceSkill {
  int32 Tag = 1;
  int32 Id = 2; //ID
  int32 Type = 3; //类型
  repeated Skill PS = 4; //刷新被动技能临时列表
}

//修改名称
message C2SPartnerNick {
  int32 Id = 1; //ID
  int32 Type = 2; //类型
  string N = 3; //昵称
}
message S2CPartnerNick {
  int32 Tag = 1;
  int32 Id = 4; //ID
  int32 Type = 2; //类型
  string N = 3; //昵称
}

//激活缘分
message C2SPartnerSuit {
  int32 Id = 1; //要激活的缘分ID
}
message S2CPartnerSuit {
  int32 Tag = 1;
  int32 Id = 2; //要激活的缘分ID
}

//机器人一键激活缘分
message C2SPartnerSuitRobot {
}

//激活新伙伴
message C2SUnlockNewPartner {
  int32 Id = 1; //要激活的伙伴ID
  int32 Type = 2; //类型
}
message S2CUnlockNewPartner {
  int32 Tag = 1;
  int32 Id = 2; //要激活的伙伴ID
  int32 Type = 3; //类型
}

//合成伙伴
message C2SStickPartner {
  int32 Id = 1; //要合成的伙伴ID
  int32 Type = 2; //类型
}
message S2CStickPartner {
  int32 Tag = 1;
  int32 Id = 2; //要合成的伙伴ID
  int32 Type = 3; //类型
}

//被动技能新解锁时主动推
message S2CPartnerNewSkill {
  int32 Type = 1; //伙伴类型
  int32 Id = 2; //伙伴ID
  repeated Skill PS = 4; //被动技能列表
}

/*************************仙侣*************************/
message PetA {
  Partner P = 1;
}
//获取所有仙侣信息
message C2SUserPetA {
}
message S2CUserPetA {
  repeated PetA P = 1; //所有仙侣
}

//获取仙侣信息
message C2SGetPetAInfo {
  int32 Id = 1; //ID
}
message S2CGetPetAInfo {
  int32 Tag = 1;
  PetA P = 2; //仙侣信息
}

//激活仙侣
message C2SUnlockNewPetA {
  int32 Id = 1; //要激活的仙侣ID
}
message S2CUnlockNewPetA {
  int32 Tag = 1;
  int32 Id = 2; //要激活的仙侣ID
  PetA P = 3; //仙侣信息
}

//仙侣出战。如果用一个仙侣替换另一个仙侣的位置，则后者直接休息
message C2SPetABattlePos {
  int32 Id = 1; //ID
  int32 Pos = 2; //出战顺序，0表示休息，1234
}
message S2CPetABattlePos {
  int32 Tag = 1;
  int32 Id = 2; //ID
  int32 RestId = 3; // 被顶替之后休息的伙伴ID
  int32 Pos = 4; //出战顺序，0表示休息，1234
}

//升级
message C2SPetALevelUp {
  int32 Id = 1; //ID
  int32 Auto = 2; //是否自动购买，0否，1元宝，2仙玉
  uint32 Times = 3; //升级次数
}
message S2CPetALevelUp {
  int32 Tag = 1;
  int32 Id = 2; //ID
  int32 Level = 3; //等级
  int32 Exp = 4; //经验（升级进度条）
}

//升星
message C2SPetAStarUp {
  int32 Id = 1; //ID
}
message S2CPetAStarUp {
  int32 Tag = 1;
  int32 Id = 2; //ID
  int32 Star = 3; //星级
  int32 Exp = 4; //升星进度条
}

/*************************合体仙侣*************************/
//合体仙侣--获取数据
message C2SGetPetAMergeInfo {
}
message S2CGetPetAMergeInfo {
  int32 Tag = 1;
  PetAMerge PetAMerge = 2; //合体仙侣信息
}

//合体仙侣--放大镜
message C2SGetPetAMergeFv {
}
message S2CGetPetAMergeFv {
  int64 Fv = 1; //总战力
  int64 BaseFv = 2; //基础战力
  int64 ActiveFv = 3; //激活战力
  int64 AwakeFv = 4; //觉醒战力
}

//合体仙侣--上阵
message C2SPetAMergeUp {
  int32 Pos = 1; //上阵位置位置1--6
  int32 PetAId = 2; //仙侣Id PetAId>0:上阵；PetAId=0：下阵
}
message S2CPetAMergeUp {
  int32 Tag = 1;
  int32 Pos = 2; //位置1--6
  int32 PetAId = 3; //仙侣Id
}

//合体仙侣--激活
message C2SPetAMergeActive {
}
message S2CPetAMergeActive {
  int32 Tag = 1;
  int32 PetAMergeId = 2; //合体仙侣Id
}

/*************************魔灵*************************/
message Devil {
  Partner P = 1;
}
message S2CUserDevil {
  repeated Devil P = 1;
  repeated DevilPos DevilPos = 2; // 魔灵附身位置
}
message C2SDevilAwake {
}
message S2CDevilAwake {
  int32 Tag = 1; //结果标志
}
//魔灵升级
message C2SDevilLevelUp {
  int32 Id = 1; //魔灵ID
  repeated ItemInfo Item = 2; //要使用的升级道具
}
message S2CDevilLevelUp {
  int32 Tag = 1; //结果标志
  int32 Id = 2; //魔灵ID
  int32 L = 3; //操作后等级
  int32 E = 4; //操作后经验（升级进度条）
}
//魔灵附身位置
message DevilPos {
  int32 T = 1; //附身类型，1主角，2宠物，3仙侣1，4仙侣2，5战神，6仙童
  int32 Id = 2; //魔灵ID
}
//魔灵附身
message C2SDevilPos {
  int32 T = 1; //附身类型，1主角，2宠物，3仙侣1，4仙侣2，5战神，6仙童。传0表示下阵取消附身
  int32 Id = 2; //魔灵ID
}
message S2CDevilPos {
  int32 Tag = 1; //结果标志
  repeated DevilPos DevilPos = 2; // 操作后的魔灵附身位置
}

//魔魂镶嵌
message C2SDevilSoulPos {
  int32 Pos = 1; //镶嵌位置，0-10，0表示不镶嵌
  string Id = 2; //魔魂全局唯一ID
}
message S2CDevilSoulPos {
  int32 Tag = 1; //结果标志
}

//魔魂分解，操作成功后重推所有魔魂数据
message C2SDevilSoulDel {
  repeated string Id = 1; //要分解的魔魂全局唯一ID
}
message S2CDevilSoulDel {
  int32 Tag = 1; //结果标志
}

//魔魂是否自动分解状态切换，操作成功后重发人物属性
message C2SDevilSoulAuto {
  int32 Auto = 1; //是否自动分解，0否，1年份低于已镶嵌，2相同魔魂保留一个，3百年以下，4千年以下，5万年以下
}
message S2CDevilSoulAuto {
  int32 Tag = 1; //结果标志
}

//魔魂升级
message C2SDevilSoulLevelUp {
  string Id = 1; //魔魂全局唯一ID
}
message S2CDevilSoulLevelUp {
  int32 Tag = 1; //结果标志
  string Id = 2; //魔魂全局唯一ID
  ItemData DevilSoul = 3; //操作后的此魔魂数据
}

//魔魂升星，操作成功后重推所有魔魂数据
message C2SDevilSoulStarUp {
  string Id = 1; //魔魂全局唯一ID
  repeated string SameId = 2; //选择要消耗的同类魔魂全局唯一ID
  repeated string AnyId = 3; //选择要消耗的任意魔魂全局唯一ID
}
message S2CDevilSoulStarUp {
  int32 Tag = 1; //结果标志
  string Id = 2; //魔魂全局唯一ID
  ItemData DevilSoul = 3; //操作后的此魔魂数据
}

/*************************天神*************************/
message SkyGod {
  Partner P = 1;
}
message S2CUserSkyGod {
  repeated SkyGod P = 1;
}

/*************************圣兽*************************/
//message Beast {
//    Partner P = 1;
//}
//message S2CUserBeast {
//    repeated Beast P = 1;
//}
/*************************师徒*************************/
message MasterPupilList {
  int32 U = 1; //玩家id
  string N = 2; //玩家昵称
  int32 L = 3; //等级
  int32 OnlineState = 4; //1:在线 2:离线
  int32 IsMaster = 5; //1:师傅 2:徒弟
  int32 IsGiveExp = 6; //今日是否已经传功 1:今日师傅未传功 2:今日师傅已传功,未领取 3:已领取传功
  int32 RoleId = 7;
}

message DbMasterInfo {
  int32 U = 1; //玩家id
  int32 IsMaster = 2; //1:师傅 2:徒弟
  int32 IsGiveExp = 3; //今日是否已经传功 1:今日师傅未传功 2:今日师傅已传功,未领取 3:已领取传功
}

message DbMasterData {
  int64 JoinTime = 1; //加入师门的时间戳
  repeated DbMasterInfo MasterList = 2; //师徒列表
  repeated MasterArray InviteList = 3; //邀请列表

}


message S2CMasterMessage {
  int32 OutTime = 1; //出师倒计时 天数
  repeated MasterPupilList List = 2; //师徒列表
  repeated MasterArray InviteList = 3; //邀请列表

}
//发送师徒广播
message C2SSendMasterNotice {

}

message S2CSendMasterNotice {
  int32 Tag = 1;
}
message MasterArray {
  int32 U = 1; //玩家ID
  string N = 2; //玩家昵称
  int32 L = 3; //玩家等级
  int32 D = 4; //1:增加 2:删除 3:更改
  int32 S = 5; //1:点击收徒 2:已发送邀请
  int64 T = 6; //发送公告的时间
  int64 DeleteTime = 7; //邀请过期删除时间点
}

//师徒邀请列表
message S2CMasterAds {
  repeated MasterArray PupilList = 1;
}
//发送师徒邀请 师父发
message C2SMasterInvite {
  int32 U = 1; //玩家id
}
message S2CMasterInvite {
  int32 Tag = 1; //Tag
}
//推送师徒邀请 徒弟接受
message S2CInvitePupil {
  int32 U = 1;
  string N = 2;
}
//处理师徒邀请 徒弟处理
message C2SHandleMasterInvite {
  int32 U = 1; //玩家id
  int32 Y = 2; //同意1,不同意2
}

message S2CHandleMasterInvite {
  int32 Tag = 1; //tag
}
//师傅传功
message C2SMasterGiveExp {
  int32 U = 1; //徒弟id
}
message S2CMasterGiveExp {
  int32 Tag = 1; //tag
}
//徒弟接受传功
message C2SGetMasterExp {

}
message S2CGetMasterExp {
  int32 Tag = 1; //tag
}
//逐出师门
message C2SDeletePupil {
  int32 U = 1; //徒弟id
}
message S2CDeletePupil {
  int32 Tag = 1; //tag
}
//出师
message C2SDeleteMaster {
  int32 T = 1; //出师类型 1:普通 2:完美
}
message S2CDeleteMaster {
  int32 Tag = 1; //Tag
}

//获取徒弟的日常完成进度
message MasterTask {
  int32 Id = 1; //任务ID
  int32 State = 2; // 任务状态，0正在做，1完成未领奖，2已领奖
  int32 Count = 3; // 任务进度
}
//师徒任务
message C2SGetPupilTask {
  int32 Id = 1; //徒弟ID
}
message S2CGetPupilTask {
  int32 Tag = 1; //Tag
  repeated MasterTask Task = 2; // 任务详情
}

/************************************************姻缘************************************************/
message RoleMarryInfo {
  repeated DbMarryInfo MarryList = 1;
}
message DbMarryInfo {
  int32 U = 1; //配偶Id
  int64 T = 2; //结婚的时间戳
  int32 H = 3; //房屋类型
  int32 HL = 4; //房屋阶数
  int32 MV = 5; //亲密度
  int32 HM = 6; //房屋当前进度
  repeated HouseUpList HouseUpList = 7; //房屋进度log
  int32 Pos = 8;
  repeated MarryInvite InviteList = 9;
  int64 CanAddHouseValue = 10; //对方给自己增加的进度值

}
message MarryInvite {
  int32 Pos = 1;
  int32 HouseId = 2;
  int32 InviteUserId = 3;
}
message C2SGetMarryList {

}
message MarryList {
  int32 U = 1; //id
  string N = 2; //昵称
  int32 L = 3; //等级
  int64 F = 4; //战力
  int32 R = 5; //角色id
}
message S2CGetMarryList {
  int32 Tag = 1;
  repeated MarryList List = 2; //求婚对象
}
//求婚
message C2SGetMarry {
  int32 I = 1; //婚姻表id
  int32 P = 2; //1;夫君 2;女
  int32 U = 3; //求婚对象的id
}
message S2CGetMarry {
  int32 Tag = 1; //tag
}
//推送对方求婚
message S2CSendMarry {
  int32 I = 1; //婚姻表id
  string N = 2; //昵称
  int64 L = 3; //等级
  int64 F = 4; //战力
  int32 R = 5; //角色id
  int32 M = 6; //今日剩余结婚次数
  int32 U = 7; //对方uid

}
//处理求婚
message C2SHandelMarry {
  int32 U = 1; //对方id
  int32 Y = 2; //1:同意 2:拒绝
}
message S2CHandelMarry {
  int32 Tag = 1; //tag
}
//送花
message C2SSendFlower {
  int32 F = 1; //花id
  uint32 N = 2; //花数量
  uint32 Bn = 3; //购买数量
}
message S2CSendFlower {
  int32 Tag = 1; //tag
  int32 Mv = 2; //亲密度
}
//接受鲜花
message S2CGetFlower {
  string N = 1; //昵称
  int32 F = 2; //花id
  int32 NM = 3; //数量
  int32 MV = 4; //亲密度
}
//上线之后推送 姻缘状态
message S2CMarryStatus {
  int32 U = 1; //uid
  string N = 2; //昵称
  int32 R = 3; //头像
  int64 D = 4; //登记时间
  int32 M = 5; //婚姻表id
  int32 HL = 6; //房屋阶数
  int32 HS = 7; //房屋当前进阶
  int32 MV = 8; //亲密度
  int32 Pos = 9; //位置 1;夫君 2;女
  int32 LT = 10; //今日剩余结婚次数
  repeated HouseUpList List = 11;
}
//房屋升阶
message C2SMarryUpdate {

}
message S2CMarryUpdate {
  int32 Tag = 1; //tag
}
//房屋装修
message C2SHouseUpdate {
  int32 M = 1; //婚姻表id
}
//房屋装修
message S2CHouseUpdate {
  int32 Tag = 1; // tag
}
message HouseUpList {
  int64 T = 1; //发送时间
  int32 V = 2; //进度值
}

//获取房屋升阶进度
message C2SGetUpdate {

}
message S2CGetUpdate {
  int32 Tag = 1; //tag
}
message S2CNewMarry {
  int32 U = 1; //丈夫id
  int32 RM = 2; //丈夫角色Id
  int32 RF = 3; //妻子角色Id
  string HN = 4; //丈夫昵称
  string WN = 5; //妻子昵称
}
//送结婚贺礼
message C2SSendMarryGift {
  int32 I = 1; //贺礼id
  int32 U = 2; //丈夫id
}
message S2CSendMarryGift {
  int32 Tag = 1; //tag

}
//离婚
message C2SDeleteWife {

}
message S2CDeleteWife {
  int32 Tag = 1; //tag
}
message S2CMateOnline {
  int32 R = 1; //RoleId
}
/************************************************科举************************************************/
message S2CQuizAsk {
  int32 Qid = 1; //问题id
  int32 Num = 2; //当前是第几题
  repeated int32 Aid = 3; //答案顺序
  int32 AserTime = 4; //答题剩余时间（秒）
  int32 NextTime = 5; //下题出现时间
}

message S2CQuizRank {
  repeated QuizRank RankList = 1; //排行榜
  int32 Mn = 2; //我的排名
  int32 Ms = 3; //我的积分
}
message QuizRank {
  string Nick = 1;
  int32 Score = 2;
  int32 Num = 3;
  int32 Id = 4;
}
//回答问题
message C2SAnswerQuiz {
  int32 Aid = 1; //回答问题的下标
}
message S2CAnswerQuiz {
  int32 Y = 1;
}
//推送最后奖励
message S2CQuizSum {
  int32 Mn = 1; //我的排名
  int32 Ms = 2; //我的积分
  string I = 3; //我的奖励
}
//推送状元
message S2CQuizFirst {
  string Nick = 1; //状元昵称
}
//科举开始
message S2CQuizStart {

}
/************************************************取经东归************************************************/

message DbPlayerWestExp {
  repeated DbWestExp List = 1;
}
message DbWestExp {
  int32 ProId = 1; //护送id
  int64 StartTime = 2; //开始时间
  repeated RobbedPlayer RobberList = 3; //抢劫者的信息列表
  int32 IsHavePrize = 4; //是否有未领的奖励 0 否 1是
  int32 Flag = 5; //是否已结束 0:未开始护送 1:已开始护送 2:已结束
  repeated ItemInfo Prize = 6; //奖励
  int32 IsDouble = 7; //是否双倍
  int32 IsHaveSend = 8; //是否发送过双倍通知
  int64 RobbedTimes = 9; //打劫成功次数
  int64 LogIncId = 10; //log序列ID
  int64 Idx = 11;
  int64 FinishTime = 12; //完成时间，用于计算过期
  repeated RobbedPlayer TotalRobberList = 13; //所有抢劫者的信息列表
  int64 Level = 14; //开始护送时的人物等级
}
//抢劫
message RobbedPlayer {
  int64 EnemyId = 1; //uid
  int32 ProId = 2; //护送ID
  int32 Y = 4; //1:被抢成功 2:被抢失败
  int32 R = 5; //0:未复仇,1:复仇成功 2:复仇失败
  int64 LogId = 6; //记录ID，复仇用
  string N = 7; //昵称
  int64 Idx = 8;
  repeated ItemInfo Prize = 9; //拦截损失
  int64 AreaId = 10; //区服ID
  string World = 11;
}

//上线推送取经东归相关信息
message S2CWestExp {
  int32 Lt = 1; //剩余护送次数
  int32 Tt = 2; //总护送次数
  int32 Rl = 3; //剩余抢劫次数
  int32 Rt = 4; //总抢劫次数
  int32 IsHavePrize = 5; //是否还有未领的奖励
  int64 St = 6; //开始护送的时间
  repeated RobbedPlayer RobberList = 7; //抢劫者的信息列表
  int32 PrayId = 8; //祈福ID
  int32 IsDouble = 9; //是否双倍
  int64 Level = 10; //开始护送时的人物等级
}
message ProtectingPlayer {
  int32 Uid = 1; //userid
  int32 Rid = 2; //roleid
  string N = 3; //昵称
  string Gn = 4; //帮会
  int64 Fv = 5; //战力
  int32 I = 6; //护送id
  int64 Pt = 7; //护送开始时间
  int32 C = 8; //0可以抢劫，1自己已抢劫过 2已被抢劫两次
  int32 PrayId = 9; //祈福ID
  int32 IsDouble = 10; //是否双倍
  int64 Head = 11; //头像
  int64 HeadFrame = 12; //头像框
  int64 AreaId = 13; //区服ID
  int64 Level = 14; //开始护送时的人物等级
  string World = 15;
}
//获得正在护送的玩家信息
message C2SGetProtectPlayer {
}
message S2CGetProtectPlayer {
  repeated ProtectingPlayer List = 1;
}
//新玩家开始护送
message S2CNewProtectPlayer {
  ProtectingPlayer List = 1; //新护送数据
}
//某玩家结束护送
message S2CEndProtectPlayer {
  int32 Uid = 1; //玩家ID
}
//刷新护送品质
message C2SGetWestExp {
  int32 GetType = 1; //刷新类型 1:普通刷新 2:一键刷橙
}
message S2CGetWestExp {
  int32 Tag = 1; //tag
  int32 I = 2; //护送id
}
//快速完成
message C2SQuickFinishWestExp {

}
message S2CQuickFinishWestExp {
  int32 Tag = 1; //tag
}
message C2SStartWestExp {

}
message S2CStartWestExp {
  int32 Tag = 1; //tag
}
//完成护送 推送
message S2CFinishWestExp {
  int32 I = 1; //护送id
  string P = 3; //奖励
  repeated RobbedPlayer List = 2; //被劫记录
  int32 D = 4; //奖励倍数
}
//领取奖励
message C2SGetWestPrize {

}
message S2CGetWestPrize {
  int32 Tag = 1; //tag
}
//被劫记录
message C2SGetRobbedList {

}
message Robber {
  int32 U = 1; //roleId
  int64 Fv = 2; //战力
  string N = 3; //昵称
  int32 I = 4; //护送id
  int32 Y = 5; //复仇是否成功 0:未复仇 1:复仇成功 2:复仇失败
  string Lid = 6; //列表id
  string G = 7; //帮会名称
  int32 Uid = 8; //userid
  int64 Head = 9; //头像
  int64 HeadFrame = 10; //头像框
  repeated ItemInfo Prize = 11; //拦截损失
  int64 AreaId = 12; //区服ID
  string World = 13; //世界
}
message S2CGetRobbedList {
  repeated Robber List = 1;
}
//抢劫
message C2SSendRob {
  int32 U = 1; //uid
}
message S2CSendRob {
  int32 Tag = 1; //tag
}
//被劫
message S2CBeRob {

}
//复仇
message C2SSendRevenge {
  string Lid = 1;
}
message S2CSendRevenge {
  int32 Tag = 1; //tag
  string P = 2; //奖励
  int32 Y = 3; //是否复仇成功
  string Lid = 4; //列表id
}
//双倍开始
message S2CWestExpStart {
}
//祈福
message C2SWestPray {
  int32 Id = 1; //祈福ID
}
message S2CWestPray {
  int32 Tag = 1; //tag
}
//玩家开始祈福
message S2CWestPlayerPray {
  int64 Id = 1; //开始祈福的玩家ID
  int32 PrayId = 2; //祈福档位ID
}
/************************************************排行榜************************************************/
//单个排名的信息
message Rank {
  int32 Id = 1; //玩家ID
  int32 R = 2; //排名序号
  repeated IntAttr A = 3; //所需的int型数据
  repeated StrAttr B = 4; //所需的string型数据
  int64 SortValue = 5; //用来排序的字段值
  int32 AdditionalOk = 6; //附加奖励条件是否达成，0未达成， 1达成
  RankPetData Pet = 7; //宠物数据
}
//简略排名信息，只包含名次、姓名、等级、排名值、战力
message SimpleRank {
  int32 Id = 1; //玩家ID
  int32 R = 2; //排名序号
  string Name = 3; //昵称
  int32 HeadFrame = 4; //头像框
  int32 Head = 5; //头像
  int32 Level = 6; //等级
  int32 Sid = 7; //登录服务器ID
  int64 Fv = 8; //战力
  int64 SortValue = 9; //用来排序的字段值
  int64 Vip = 10; //VIP等级
  int32 AdditionalOk = 11; //附加奖励条件是否达成，0未达成， 1达成
  string Family = 12; //家族名称
  int64 EquipFv = 13; //装备战力
  int64 PetFv = 14; //宠物单只最高战力
  int32 Reborn = 15; //转生等级
  int32 RealmLevel = 16; //境界等级
  int32 FamilyLevel = 17; //家族等级
  int64 SkinFv = 18; //时装总战力
  int32 SkinNum = 19; //时装数量
  int32 AreaId = 20; //区服id
  int64 SortValue1 = 21; //用来排序的字段值,第二个
  repeated ActRushRankReceiveData rrUserInfo = 22; //排行榜用户数据
  int32 GiveUserCount = 23;
  int32 Sex = 24; // 用户性别
  string World = 25; //世界字段
  int32 HideVIP = 26; //Vip等级是否屏蔽  0正常显示  1屏蔽
}

message CrossRank {
  int64 UserId = 1;
  string Nick = 2; //昵称
  int64 ShowAreaId = 3; //显示区服Id
  string FamilyId = 4; //家族
  int32 ShowHead = 5; //头像资源ID
  int32 ShowHeadFrame = 6; //头像框资源ID
  int64 Fv = 7; //战力
  int32 Level = 8; //等级，由转生、重数、真是等级拼接后的长int
  int32 Realm = 9; //境界
  int32 Vip = 10;
  string World = 11;
  int32 HideVIP = 12; //Vip等级是否屏蔽  0正常显示  1屏蔽
  int32 Sid = 13;
}

//拉取排行榜数据
message C2SAllRank {
  int32 Type = 1; //排行榜大类。1各系统战斗力排行榜（包括人物战力、等级、各升阶系统战力），2副本排行榜，3竞技场排行榜
  int32 Param = 2; //排行榜小类，即参数。可以是升阶系统类型、副本类型等
  //需要获得详细AB数据的名次集合，如[1,2,3]或[1]，用于主页排行榜和活动排行榜只显示前N名的人物动画，返回Rank数据结构包含AB
  repeated int32 FullDataRank = 3;
  //需要获得简略数据的名次集合，只返回SimpleRank数据结构
  repeated int32 SimpleDataRank = 4;
  int32 DataType = 5; //数据类型，0本服，1跨服
}

//推送指定排行榜数据，包括自己的排名
message S2CAllRank {
  int32 Type = 1; //排行榜大类。1各系统战斗力排行榜（包括人物战力、等级、各升阶系统战力），2副本排行榜，3竞技场排行榜
  int32 Param = 2; //排行榜小类，即参数。可以是升阶系统类型、副本类型等
  repeated Rank FullDataRank = 3; //详细AB数据
  repeated SimpleRank SimpleDataRank = 4; //简略数据
  SimpleRank MyData = 5; //自己的简略数据
  int32 DataType = 6; //数据类型，0本服，1跨服
}

//膜拜
message C2SRespect {
  int32 Type = 1; //类型，0本服膜拜，1跨服膜拜
}
message S2CRespect {
  int32 Tag = 1;
  repeated ItemInfo Prize = 2; //奖励
  int32 Type = 3; //类型，0本服膜拜，1跨服膜拜
}

message RankSortValue {
  int32 PlayerId = 1;
  int64 SortValue = 2;
}
//开服活动充值榜，存数据库
message NewRankDbInfo {
  repeated Rank players = 1;
  repeated RankSortValue allplayersData = 2; //不管上榜未上榜的数据都在这里
}

/************************************************竞技场************************************************/

//竞技场单个玩家的信息
message JJCRole {
  int32 UserId = 1; // 玩家或机器人ID
  repeated IntAttr A = 2; //所需的int型数据
  repeated StrAttr B = 3; //所需的string型数据
  int32 Kill = 4; //是否直接秒杀，0否，1是
  int32 Robot = 5; // 是否是机器人，0否，1是
}

//获取竞技场的信息。主动拉
message C2SJJCList {
}
//竞技场的信息，拉之后再推，不会主动推
message S2CJJCList {
  int32 Tag = 1;
  repeated JJCRole Roles = 2; //需要显示的5个竞技场敌人
}

//竞技场挑战
message C2SJJCFight {
  int32 TargetId = 1; //要挑战的玩家ID
  int32 TargetRank = 2; //要挑战的排名
  int32 Kill = 3; //是否秒杀，0否，1是
}
message S2CJJCFight {
  int32 Tag = 1;
  int32 IsWin = 2; //是否胜利，0否1是
  int32 HonorPrize = 3; //功勋奖励数量
  int32 Coin1Prize = 4; //银两奖励数量
  int32 Coin4Prize = 5; //绑元奖励数量
  int32 HistoryRank = 6; //历史最高排名
  int32 NowRank = 7; //当前排名
  int32 Kill = 8; //是否秒杀，0否，1是
}

//竞技场一键扫荡
message C2SJJCSweep {
}
message S2CJJCSweep {
  int32 Tag = 1;
  int32 HonorPrize = 3; //功勋奖励数量
  int32 Coin1Prize = 4; //银两奖励数量
  int32 Coin4Prize = 5; //绑元奖励数量
}
//获取竞技场购买信息
message C2SJJCGetBuyInfo {

}
//获取竞技场购买信息
message S2CJJCGetBuyInfo {
  int32 Coin = 1; //货币数量
  int32 CoinType = 2; //货币类型
  int32 Times = 3; //挑战次数
  int32 LeftTimes = 4; //剩余次数
  int32 NoticeTimes = 5; //预告次数
  int32 NoticeVip = 6; //预告vip
}
//购买竞技场挑战次数
message C2SJJCBuyTimes {
}
message S2CJJCBuyTimes {
  int32 Tag = 1;
}

/************************************************神装************************************************/

//神装觉醒
message C2SGodEquipAwake {
  int32 int32 = 1; //部位类型
}
//神装觉醒
message S2CGodEquipAwake {
  int32 Tag = 1; //结果标志
}

//神装注灵升阶请求。由于注灵有可能触发直升所以单独发包
message C2SIntoSoulGradeUp {
  int32 int32 = 1; //部位类型
}
//神装注灵升阶成功返回
message S2CIntoSoulGradeUp {
  int32 Tag = 1; //结果标志
  int32 Directly = 2; //是否直升，0否，1是
  Grade Grade = 3; //强化之后此类型升阶数据
}

//神装淬炼
message C2SGodForge {
  int32 int32 = 1; //部位类型
  int32 Type = 2; //淬炼类型，1低级，2高级
  int32 Times = 3; //淬炼次数，
}
//神装淬炼
message S2CGodForge {
  int32 Tag = 1; //结果标志
  Grade Grade1 = 2; //淬炼之后第一行淬炼数据
  Grade Grade2 = 3; //淬炼之后第二行淬炼数据
}

//神装淬炼保存
message C2SGodForgeSave {
  int32 int32 = 1; //部位类型
}
//神装淬炼保存
message S2CGodForgeSave {
  int32 Tag = 1; //结果标志
  Grade Grade1 = 2; //淬炼之后第一行淬炼数据
  Grade Grade2 = 3; //淬炼之后第二行淬炼数据
}

//神装分解
message C2SGodEquipMelt {
  string ItemId = 1; //要分解的物品ID
}
//神装分解
message S2CGodEquipMelt {
  int32 Tag = 1; //结果标志
}

message TeamInfo {
  int64 TeamId = 1;
  string Nick = 2; //用户昵称
  int32 Num = 3; //当前人数
}
message MemberInfo {
  int64 UserId = 1;
  string Nick = 2;
  int64 Level = 3;
  int64 RoleId = 4;
  int64 Value = 5; //战斗力
  int64 Leader = 7; //是否是队长
}

//获取跨服组队类别
message C2SGetTeamList {
  int32 InstanceType = 1; //副本类型
  int64 InstanceId = 2; //副本ID
}
//跨服通用
message S2CGetTeamList {
  int32 Tag = 1; //结果
  int32 InstanceType = 2; //副本类型
  int64 InstanceId = 3; //副本ID
  repeated TeamInfo Teams = 4;
}

//获取队伍成员列表
message C2SGetMemberList {
  int32 InstanceType = 1; //副本类型
  int64 TeamId = 2; //组队Id
}
//跨服通用
message S2CGetMemberList {
  int32 Tag = 1; //结果
  int64 TeamId = 2;
  repeated MemberInfo Member = 3;
}
//跨服聊天
message S2KCrossChat {
  ChatMsg Msg = 1;
}
//跨服聊天
message K2SCrossChat {
  ChatMsg Msg = 1;
}
//增加/删除临时称号
message K2SAddTmpTitle {
  int64 UserId = 1;
  int32 SkinId = 2;
  int32 Opp = 3; //1添加，2删除
}

//加入副本
message C2SJoinInstance {
  int32 InstanceType = 1; //副本类型
  int64 InstanceId = 2; //副本ID
  int64 TeamId = 3;
  int32 Type = 5; //类型：0，快速加入，1创建队伍,2，加入队伍
}
//加入副本
message S2CJoinInstance {
  int32 Tag = 1;
  int64 TeamId = 2;
  int64 LeaderId = 3;
  int32 InstanceType = 4; //副本类型
}
//离开副本
message C2SLeaveInstance {
  int32 InstanceType = 1; //副本类型
  int64 TeamId = 2;
}
//离开副本
message S2CLeaveInstance {
  int32 Tag = 1;
}
//离开副本(非组队)
message C2SLeaveInstanceCopy {
}
//离开副本(非组队)
message S2CLeaveInstanceCopy {
  int32 Tag = 1;
}
//踢人
message C2SKillInstance {
  int32 InstanceType = 1; //副本类型
  int64 TeamId = 2;
  int64 KillId = 3;
}
//踢人
message S2CKillInstance {
  int32 Tag = 1;
}
//开始战斗
message C2SStartInstance {
  int32 InstanceType = 1; //副本类型
  int64 TeamId = 2;
}
//开始战斗
message S2CStartInstance {
  int32 Tag = 1;
}

/************************************************法宝************************************************/
//法宝结构体
message Precious {
  string Id = 1; //每件装备唯一Id
  int32 IId = 2; //法宝表ID
  int32 Quality = 3; //品质
  int32 Pos = 4; //穿戴位置，0为未穿戴，其他1234
  repeated Skill Skills = 5; //被动技能列表
  int32 Lock = 6; //是否上锁，0否1是
  string Creator = 7; // 打造者昵称
  int32 EatLevel = 8; //吞噬等级
  int32 EatExp = 9; //吞噬经验

  int32 SoulId = 10; //器灵ID
  int32 SoulLevel = 11; //器灵等级
  int32 SoulExp = 12; //器灵经验
}

//法宝位置结构体，发生变化重推此包
message PreciousPos {
  int32 Id = 1; //位置ID
  int32 ForgeTime = 2; //洗练次数
  repeated IntAttr Attr = 3; //洗练属性。K表示属性ID，V表示值
}

//获取法宝位置数据
message C2SGetPreciousPos {
}
//发生变化会主动推
message S2CGetPreciousPos {
  repeated PreciousPos Pos = 1; //法宝位置数据
}

//打造法宝
message C2SCreatePrecious {
  int32 Type = 1; //打造类型，0低级1高级
  int32 Auto = 2; //自动购买材料，0否1是
}
//打造法宝
message S2CCreatePrecious {
  int32 Tag = 1; //结果
  Precious NewPrecious = 2; //新打造的法宝数据
}

//一键打造法宝
message C2SCreatePreciousFast {
  int32 Type = 1; //打造类型，0低级1高级
}
//一键打造法宝
message S2CCreatePreciousFast {
  int32 Tag = 1; //结果
  repeated Precious NewPrecious = 2; //新打造的法宝数据
  repeated Precious Precious = 3; //当前所有法宝
}
//分解法宝
message C2SMeltPrecious {
  repeated string Precious = 1; //要分解的法宝ID数组
}
//分解法宝
message S2CMeltPrecious {
  int32 Tag = 1; //结果
  repeated string Precious = 2; //要分解的法宝ID数组
}

//穿戴法宝
message C2SWearPrecious {
  string Id = 1; //要穿戴的法宝ID
  int32 Pos = 2; //穿戴的位置
}
//穿戴法宝
message S2CWearPrecious {
  int32 Tag = 1; //结果
  string Id = 2; //要穿戴的法宝ID
  int32 Pos = 3; //穿戴的位置
}

//法宝上锁或解锁
message C2SLockPrecious {
  string Id = 1; //法宝ID
}
//法宝上锁或解锁
message S2CLockPrecious {
  int32 Tag = 1; //结果
  string Id = 2; //法宝ID
  int32 Lock = 3; //当前状态，是否已锁，0否1是
}

//法宝洗练
message C2SPreciousForge {
  int32 Pos = 1; //洗练位置
  int32 T = 2; //洗练类型，0仙玉，1道具
  repeated int32 LockAttr = 3; //锁定属性ID组
}
//法宝洗练
message S2CPreciousForge {
  int32 Tag = 1; //结果
  int32 Pos = 2; //洗练位置
  int32 T = 3; //洗练类型，0仙玉，1道具
  repeated int32 LockAttr = 4; //锁定属性ID组
  repeated IntAttr Attr = 5; //洗练后属性。K表示属性ID，V表示值
  int32 Times = 6; //洗练后的次数
}

//法宝吞噬
message C2SPreciousEat {
  string Id = 1; //法宝ID
  int32 AutoBuy = 2; //是否自动购买,1 自动购买
}
//法宝吞噬
message S2CPreciousEat {
  int32 Tag = 1; //结果
  string Id = 2; //法宝ID
  int32 EatLevel = 3; //吞噬后等级
  int32 EatExp = 4; //吞噬后经验
}

//法宝附灵
message C2SPreciousSoul {
  string Id = 1; //法宝ID
  int32 SoulId = 2; //器灵ID
}
//法宝附灵
message S2CPreciousSoul {
  int32 Tag = 1; //结果
  string Id = 2; //法宝ID
  int32 SoulId = 3; //器灵ID
}

//法宝器灵升级
message C2SPreciousSoulUp {
  string Id = 1; //法宝ID
  repeated ItemInfo SoulId = 2; //要吞噬的器灵ID，只需要ID和Num
}
//法宝器灵升级
message S2CPreciousSoulUp {
  int32 Tag = 1; //结果
  string Id = 2; //法宝ID
  int32 SoulLevel = 3; //操作后的器灵等级
  int32 SoulExp = 4; //操作后的器灵经验
}

//传承
message C2SPreciousGive {
  string Id = 1; //母法宝ID
  string Id2 = 2; //子法宝ID
  int32 T = 3; //传承类型，1吞噬，2器灵
}
//传承
message S2CPreciousGive {
  int32 Tag = 1; //结果
  string Id = 2; //母法宝ID
  string Id2 = 3; //子法宝ID
  int32 T = 4; //传承类型，1吞噬，2器灵
}
//一键穿戴并分解
message C2SPreciousRobot {
}
message S2CPreciousRobot {
  repeated Precious Precious = 1; //当前剩余法宝
}
/************************************************活动类************************************************/
// 获取活动时间戳
message C2SGetActTimestamp {
  int32 ActId = 1;
}
message S2CGetActTimestamp {
  int32 Tag = 1;
  int32 ActId = 2;
  int64 StartTime = 3;
  int64 OverTime = 4;
}

// 活动开始信息
message S2CActStart {
  int32 AId = 1; // 准备开始的活动编号
  int64 OT = 2; // 活动结束时间
}
// 活动结束信息
message S2CActOver {
  int32 AId = 1; // 结束活动编号
}
// 活动显示图标
message S2CActIcon {
  repeated ActIcon AIds = 1; // 结束活动编号
}
// 活动开启的信息
message ActIcon {
  int32 Id = 1; // 编号
  int64 B = 2; // 开始时间
  int64 E = 3; // 结束时间
}

// 手动显示菱形弹窗
message S2CActShowWindow {
  int32 AId = 1; // 活动编号
}

//活动预告
message ActPreReport {
  int32 AId = 1; // 准备开始的活动编号
  int64 OT = 2; // 活动结束时间
}
message S2CActStartPre {
  ActPreReport ActPreReport = 1;
}
message S2CActOverPre {
  int32 AId = 1; // 结束活动编号
}
message S2CActList {
  repeated ActPreReport ActPreReport = 1;
}

// 创建队伍
message C2SActCreateTeam {
  int32 TeamType = 1; //队伍类型：2 帮派战队伍
}
message S2CActCreateTeam {
  int32 Tag = 1; //
  ActTeamInfo TI = 2; // 队伍信息
}
// 查询队伍列表
message C2SActFindTeams {
  int32 TeamType = 1; //队伍类型：2 帮派战队伍
}
message S2CActFindTeams {
  repeated ActTeamInfo TIS = 1; // 队伍信息
  int32 Tag = 2; //
}
// 加入队伍
message C2SActJoinTeam {
  int64 TId = 1; // 队伍信息
}
message S2CActJoinTeam {
  int32 Tag = 1; //
  ActTeamInfo TI = 2; // 队伍信息
}
// 查询队伍信息
message C2SActFindTeam {
}
message S2CActFindTeam {
  int32 Tag = 1; //
  ActTeamInfo TI = 2; // 队伍信息
}

// 设置最低战力
message C2SActNeedFightVal {
  int64 FV = 1; // 最低战力
}
message S2CActNeedFightVal {
  int32 Tag = 1; //
  ActTeamInfo TI = 2; // 队伍信息
}
// 退出队伍
message C2SActExitTeam {
  int64 Uid = 1; // 0自己退出 其他表示踢人
}
message S2CActExitTeam {
  int32 Tag = 1; //
  int64 Uid = 2; //
}
// 队伍信息
message ActTeamInfo {
  int64 Id = 1; //
  int64 NFV = 2; // 最低战力
  repeated ActTeamMemInfo MS = 4; // 成员信息
}
// 队伍成员信息
message ActTeamMemInfo {
  int64 UId = 1; // id
  string UN = 2; // 名称
  int32 L = 3; // 1队长 0成员
  int32 RId = 4; // roleId
  int64 LV = 5; // 级别
  int64 FV = 6; // 战力
  int64 MHP = 7; // 最大血量
  int64 HP = 8; // 当前血量
}
message C2SActTeamRecruit {

}
message S2CActTeamRecruit {
  int32 Tag = 1; //
}

// 加入活动
message C2SJoinActive {
  int32 AId = 1; // 活动编号
}
message S2CJoinActive {
  int32 Tag = 1; //
  int32 AId = 2; // 活动编号
}
// 离开活动
message C2SLeaveActive {
  int32 AId = 1; //活动编号
}
message S2CLeaveActive {
  int32 Tag = 1; //
  int32 AId = 2; //活动编号
}
// 触发加入活动计数事件
message K2SJoinFuncActiveHandleEvent {
  int32 ActType = 1; // 功能性活动类型
}
// 玩家复活
message C2SReviveLife {
  int32 ReviveType = 1; // 复活类型 0到时间点复活 1道具复活
}
message S2CReviveLife {
  int32 Tag = 1; //
  int32 ReviveType = 2; // 复活类型 0到时间点复活 1道具复活
}
// 玩家治疗
message C2STreatPlayer {
}
message S2CTreatPlayer {
  int32 Tag = 1;
}

//有治疗功能的场景，需要往前端推送的治疗数据
message S2CTreatData {
  repeated FightHpData Items = 1;
}
message FightHpData {
  int32 UnitType = 1; // 单位类型
  int64 Id = 2; //模板ID
  int64 Idx = 3; //没用
  int32 FightPos = 4; //站位序号
  int64 MaxHp = 5; //最大血量
  int64 CurrHp = 6; //当前血量
  int32 HpPercent = 7; //当前血量百分比
  string IdStr = 8; //字符串类ID，用于宠物
}
message FightHpGroup {
  int32 Key = 1;
  repeated FightHpData FightHp = 2;
}

/************************************************福利大厅************************************************/
//每日签到
message SignData {
  int32 Id = 1;
  int32 State = 2; // 0不可签到、1可签到、2已领取、3可补签、4可再领一次、5能补签,双倍奖励 （前端3、5表现一致，用于区分服务器发奖倍数）
  int32 IsReCharge = 3; //当日是否充值
  int32 SignNum = 4; //当日签到次数
}
//累计签到
message TotalSignData {
  int32 Id = 1;
  int32 State = 2; // 0未领取、1可领取、2已领取
}

//发给客户端签到数据
message S2CSignData {
  repeated SignData items = 1;
  repeated TotalSignData totalItems = 2;
}

//落地数据库签到数据
message DBSignData {
  repeated SignData items = 1;
  repeated TotalSignData totalItems = 2;
}

//签到
message C2SSign {
}
message C2SSignSecond {

}
message S2CSign {
  int32 Tag = 1; //结果标记
}

//补签
message C2SMakeUpSign {
  int32 Id = 1;
}
message S2CMakeUpSign {
  int32 Tag = 1; //结果标记
}

//领取累计签到奖励
message C2STotalSignPrize {
  int32 Id = 1;
}
message S2CTotalSignPrize {
  int32 Tag = 1; //结果标记
}

//不要了
//30天签到
message C2SSignPrize {
}
message S2CSignPrize {
  int32 Tag = 1; //结果标记
}

//摇钱树（摇钱）
message C2SGoldTree {
}
//摇钱树（摇钱）
message S2CGoldTree {
  int32 Tag = 1; //成功或失败
  int32 Gold = 3; //本次银两数量
  int32 NextMulti = 2; //下次暴击倍数万分比，最低10000
}

//摇钱树拉取底部信息
message C2SGetGoldTreeInfo {
}
//摇钱树拉取底部信息
message S2CGetGoldTreeInfo {
  int32 TodayUse = 1; //今日使用次数
  int32 TodayTotal = 2; //今日总次数
  int32 NextVipTimes = 3; //下一级VIP额外使用次数
  int32 ActId = 4; // 活动ID
}

//**********************************************************************************
// 公告
//**********************************************************************************
//公告用户
message NoticeUser {
  int64 Id = 1; //用户编号
  string Nick = 2; //用户昵称
  int32 AreaId = 3; //用户区
  string World = 4; //世界简称
}
//公告模板宠物
message NoticePet {
  int64 Id = 1; //宠物ID
  int64 Num = 2; //数量
}
//公告玩家宠物
message NoticePetInfo {
  Pet2 Pet2 = 1;
}
//公告道具
message NoticeItem {
  int64 Id = 1; //道具id
  int64 Num = 2; //数量
  ItemData Item = 3; //道具信息
}
//公告法宝
message NoticeFaBao {
  int32 IId = 1; //法宝表ID（类似于物品ID）
  string Id = 2; // 法宝全局唯一ID
  int32 Quality = 3; //品质，和物品品质一样
}
//广播公告
message S2CNotice {
  int64 Id = 1; //公告ID
  repeated NoticeUser U = 2; //用户信息
  repeated NoticePet Pet = 3; //模板宠物信息
  repeated NoticePetInfo PetInfo = 4; //玩家宠物信息
  repeated NoticeItem I = 5; //道具信息
  repeated int32 Stage = 6; //关卡信息
  repeated string P = 7; //关卡信息
  NoticeFaBao FaBao = 8; //法宝信息
  repeated int32 Skill = 9; //技能信息
  repeated string LinkParam = 10; //超链参数
}
//龙宫夺宝日志
message DragonLogItem {
  int64 Time = 1;
  int64 UserId = 2;
  int64 InstanceId = 3;
  repeated ItemData Item = 4;
  int32 DragonType = 5;
}
//龙宫夺宝日志
message DragonLogItemClient {
  int64 Time = 1;
  NoticeUser User = 2;
  int64 InstanceId = 3;
  repeated ItemData Item = 4;
}

message C2SGetDragonLog {
  int32 Type = 1; //1 自己 2个人
}
message S2CGetDragonLog {
  int32 Type = 1; //1 自己 2个人
  repeated DragonLogItemClient Logs = 2;
}
message C2SStartFightDragon {
  int64 Id = 1;
  int64 Auto = 2; //是否自动购买
  int64 ItemId = 3; //使用道具编号
  int64 Num = 4; //夺宝次数 1,10,50
}
message S2CStartFightDragon {
  int32 Tag = 1;
  int64 Id = 2;
  int64 ItemId = 3; //使用道具编号
}

message ActRushRankReceiveData {
  RushRankUserInfo user = 1;
  int64 giveCount = 2; //打赏数量
}

/********************************************************运营活动相关********************************************************/
//活动玩家数据结构体
message ActPlayerData {
  int32 PlayerId = 1; //玩家ID
  string Nick = 2; // 昵称
  int64 RechargeInitCount = 3; //玩家充值初始计数
  int64 ConsumeInitCount = 4; //玩家消费初始计数
  int32 Buy = 5; //是否已经购买此活动相关的某商品
  repeated BuyGoods GoodsInfo = 6; //已经购买的商品信息
  int32 DrawCount = 7; //玩家高级抽奖次数
  int32 Luck = 8; //幸运值
  repeated int32 Log = 9; //此玩家抽奖记录，记录抽奖数据ID
  int32 Score = 10; //活动积分，可用于记录任何类型的分数
  int32 Free = 11; //免费抽奖次数
  int32 MustDrawId = 12; //下次十连抽必掉的数据ID(修改成必掉道具的机会)
  repeated PlayerBossData BossData = 13; // 玩家所有BOSS数据
  repeated LuckDraw LuckDraw1 = 14; //幸运值达到某个阈值必掉道具
  repeated int32 PicturePart = 15; //当前已点亮的拼图部位集合
  int32 CanDare = 16; //玩家仙魔挑战是否触发
  repeated PlayerDareBossData DareBossData = 17; // 玩家所有仙魔挑战BOSS数据
  int32 SaveServerAge = 18; // 上次保存活动数据时的开服日期。用于纠错因开服时间配置错误而导致的运营事故
  int32 ActId = 20; //活动ID
  int64 StatTime = 21; //开始时间戳
  int32 ReturnTimes = 22; //充值返利剩余次数
  repeated ReturnDetail ReturnDetail = 23; //返利详情
  repeated ChargeReturnLog ReturnLog = 24; //此玩家抽奖记录，记录抽奖数据ID
  int32 ChargeCoin3Total = 25; //活动期间内总充值仙玉数（返利相关的，某些活动不算）
  int64 IntervalValue = 26; //活动开启的时候记录值
  int32 ReturnTodayUseTimes = 27; //充值返利今日抽取次数
  int32 ReturnBaseCache = 28; //当前充值返利基数缓存值
  int32 LowDrawTimes = 29; //低级抽奖次数，每天重置
  ChargeReturnPrizeCache ChargeReturnPrizeCache = 30; //充值返利，领取奖励缓存
  int32 ContinueRechargeTaskComplete = 31; //连充狂欢活动，今天有完成任务
  int32 ContinueRechargeTaskNum = 32; //连充狂欢活动，完成任务个数
  int64 DrawTimes = 33; //充值增加的抽奖次数
  int64 DrawTimesRmb = 34; //充值增加的抽奖剩余不够次数的rmb
  int64 PlayerTimeActJoinTimestamp = 35; //按条件激活活动，玩家加入时间戳
  int64 PlayerTimeActExitTimestamp = 36; //按条件激活活动，玩家退出时间戳
  int32 LuckDrawIdx = 37; //幸运值掉落序号
  int32 HaveCheckActTask = 38; //是否检测过已经结束的活动
  int32 TotalDrawTimes = 39; //总抽奖次数，用于判断折扣。
  repeated PlayerGiftNew GiftNew = 40; //新礼包活动中的所有礼包数据
  int32 LiangYuanState = 41; //良缘天定活动状态
  PlayerTurntabData PlayerTurntabData = 42; //转盘活动数据
  repeated int32 RedChildActId = 43; //如果该活动是容器, 这里存储亮红点的子活动的Id
  PlayerYiJiTanBaoData PlayerYiJiTanBaoData = 44; //遗迹探宝活动数据
  PlayerXunBaoData PlayerXunBaoData = 45; //寻宝活动数据
  int32 LimitTimeFight_JoinTime = 46; //限时挑战，加入时间（20200530）
  int32 LimitTimeFight_GroupId = 47; //限时挑战，挑战组
  int32 LimitTimeFight_FightIdx = 48; //限时挑战，战斗序号
  repeated ZeroBuyGiftReturnPlan ZeroBuyGiftReturnPlan = 49; //0元礼包返利计划
  PlayerRechargeTurntabData PlayerRechargeTurntabData = 50; //充值转盘活动数据
  repeated TurnTabGearPrizeState TurnTabGearPrizeState = 51; //冲榜转盘积分奖励状态
  repeated ActTheme2Lucky ActTheme2Lucky = 52; //主题活动模板2幸运值
  repeated ActRushRankReceiveData rushRankData = 53;
  repeated ActRushRankGiveLogInfo rushRankGiveLogData = 54;
  repeated ActRushRankReceiveUserList rushRankUserList = 55;
  int32 Level = 56; //活动相关等级
  int32 Exp = 57; //活动相关经验
  repeated int64 IntValue = 58; //通用Int64数组
  int32 Session = 59; //活动赛季
  repeated RechargeGearLog RechargeGearLog = 60; //充值转盘抽奖记录
  int32 LevelGroupId = 61; //等级奖励组ID
  int32 TaskGroupId = 62; //任务组Id
  int32 IsDiscountBuy = 63; //是否折扣购买(0正常购买，1打折购买)
}

// 0元礼包返利计划
message ZeroBuyGiftReturnPlan {
  int32 GiftId = 1; //礼包ID
  int32 Days = 2; //第N天返利
  int32 Type = 3; //货币类型
  int32 Total = 4; //货币数量
  int32 BuyDay = 5; //购买礼包的开服天数
  int32 Receive = 6; //是否领取
}
// 获取玩家0元购返利计划
message C2SZeroBuyGiftReturnPlan {
  int32 ActId = 1;
}
message S2CZeroBuyGiftReturnPlan {
  int32 ActId = 1;
  repeated ZeroBuyGiftReturnPlan ZeroBuyGiftReturnPlan = 2;
}
// 获取玩家0元购返利
message C2SGetZeroBuyReturnMoney {
  int32 ActId = 1;
  int32 GiftId = 2;
}
message S2CGetZeroBuyReturnMoney {
  int32 Tag = 1;
}

message S2CContinueRechargeTaskNum {
  int32 Number = 1; //连充狂欢活动，完成任务个数
}

message BuyGoods {
  int32 Gid = 1;
  int64 BuyTime = 2; //购买时的累计登录天数
  int32 Status = 3; //1:已购买 2:已领取
  int32 BuyNumTimes = 4; //该礼包购买过几次, 在折扣礼包活动中使用
}

//活动状态结构体（推给客户端）
message Activity {
  int32 ActId = 1; //活动ID,全局唯一
  int32 Type = 2; //活动类型，活动表中的活动类型编号（ID）
  int64 InitTime = 3; //预开启时间戳，秒
  int64 StartTime = 4; //开启时间戳，秒
  int64 EndTime = 5; //结束时间戳，秒
  string Pos = 6; //显示区域ID和ICOn
  string Container = 7; // 父活动ID（ActId全局唯一ID）
  int32 RedPoint = 8; //是否显示小红点，0显示，1不显示
  string Name = 10; //活动名字
  int32 Order = 11; // 排序号
  repeated ActivityIcon Icon = 12; //显示位置
  int32 RMB = 13; //涉及RMB
  int32 Param = 14; //参数
  int32 ShowTagType = 15; //显示角标类型 0不显示  >0走配置
  int32 HideTimestamp = 16; //隐藏Icon下的时间戳  1:隐藏  0:默认显示C2SGetHLRankList
  string BannerPath = 17; //banner图路径
  int32 RedInitState = 18; //活动的初始红点状态
  int32 ActIsClosed = 19; //该活动已经关闭(用于做已结束活动的特殊展示(七日活动-每日挑战))
  int64 WorldLevel = 20;
  int32 UnionStartDay = 21;
}
//活动图标显示结构体（推给客户端）
message ActivityIcon {
  int32 Pos = 1; //显示区域ID
  int32 Container = 2; // 父活动ID（ActId全局唯一ID）
  int32 Order = 3; // 排序号
  int32 Icon = 4; // 图标资源ID
  int32 Circle = 5; // 光圈资源ID
}
//活动结束倒计时配置结构体
message NoticePoint {
  int32 TimePoint = 1; //离活动结束长时间
  int32 LoopNum = 2; //发送公告，循环几次
  bool Sended = 3; //是否已经发送公告
}
//上线时推送所有已开活动
message S2CAllActivity {
  repeated Activity Activity = 1; //所有已开活动
}
//新活动预开启
message S2CActivityInit {
  repeated Activity Activity = 1; //预开启的所有活动
}
//新活动开启
message S2CActivityStart {
  repeated Activity Activity = 1; //开启的所有活动
}
//活动结束
message S2CActivityEnd {
  repeated int32 ActId = 1; //结束的所有活动
}
//寻宝活动是否免费
message C2SActivityFreeTag {
  int32 ActId = 1; //活动Id
}
message S2CActivityFreeTag {
  int32 ActId = 1; //活动Id
  int32 Free = 2; //1显示免费标识
}
//活动小红点
message S2CActivityRedPoint {
  int32 ActId = 1; //活动全局唯一ID
  int32 RedPoint = 2; // 小红点是否显示。0否1是
}
//活动图标变更
message S2CActivityIcon {
  int32 ActId = 1; //活动ID
  int32 Pos = 2; // 区域ID（暂时不考虑父容器中的图标变更）
  int32 Icon = 3; //变更后的新图标ID
}

//玩家上线时主动推送所有活动的数据
message S2CActivityData {
  repeated S2CGetDrawData S2CGetDrawData = 1;
  repeated S2CPlayerDrawData S2CPlayerDrawData = 2;
  //    repeated S2CGetDrawListRate S2CGetDrawListRate = 3;
  repeated S2CGetActShopList S2CGetActShopList = 4;
  repeated S2CGetActGiftNewList S2CGetActGiftNewList = 5;
  repeated S2CGetActBossInfo S2CGetActBossInfo = 6;
  repeated S2CPlayerBossInfo S2CPlayerBossInfo = 7;
  repeated S2CGetActTask S2CGetActTask = 8;
  repeated S2CGetInvestInfo S2CGetInvestInfo = 9;
  repeated S2CPlayerInvestData S2CPlayerInvestData = 10;
  repeated S2CGetActRankInfo S2CGetActRankInfo = 11;
  repeated S2CGetGoldTreeInfo S2CGetGoldTreeInfo = 12;
  repeated S2CGetActPicture S2CGetActPicture = 13;
  repeated S2CGetChargeReturnData S2CGetChargeReturnData = 14;
  repeated S2CGetActLimitTimeFight S2CGetActLimitTimeFight = 15; //限时挑战
}

/*************通用*************/
//通用活动操作，领奖，挑战
message C2SGetActPrize {
  int32 ActId = 1;
  int32 Param1 = 2;
  int32 Param2 = 3;
}
message S2CGetActPrize {
  int32 Tag = 1;
  int32 ActId = 2;
  int32 Param1 = 3;
  int32 Param2 = 4;
}

/*************抽奖活动*************/
//拉取抽奖活动数据
message C2SGetDrawData {
  int32 ActId = 1; //活动全局唯一ID
}
message S2CGetDrawData {
  int32 ActId = 1; //活动全局唯一ID
  string Name = 2; //标题
  int32 Luck = 3; //玩家幸运值，0不显示，其他为最大值
  string LowDraw = 4; //低级抽奖道具ID及价格
  string HighDrawOne = 5; //低级抽奖道具ID及价格
  string HighDrawTen = 6; //低级抽奖道具ID及价格
  int32 GaiID = 7; //抽奖掉落数据ID数组
  repeated DrawDetail Detail = 8; // 抽奖具体掉落数据
  int32 DoubleRate = 9; //抽奖是否双倍概率
}

//抽奖具体掉落数据结构
message DrawDetail {
  int32 ID = 1; //掉落ID
  int32 ItemId = 2; //物品ID
  int32 ItemCount = 3; //数量
  int32 TitleType = 4; //前端显示标签 1=极品，2=限时 3=超值，4=珍稀 5=绝版，6=显示品质
  int32 SortId = 5; //排序值 排序为1显示在最上方中间位置
  string ShowRate = 6; //显示概率
  string Name = 7; //别名
}

//拉取玩家的抽奖数据
message C2SPlayerDrawData {
  int32 ActId = 1; //活动全局唯一ID
}
message S2CPlayerDrawData {
  int32 Tag = 1; //成功失败
  int32 ActId = 2; //活动全局唯一ID
  int32 Luck = 3; //玩家幸运值
  int32 Score = 4; //积分
  int32 Free = 5; //是否有高级单抽免费次数，0有1无
  int32 MustDrawId = 6; //是否必掉配置物品，0否，其他为掉落ID(废弃)
  int32 ActType = 7; //活动类型
  //    int32 LuckDrawId = 8; //满幸运必掉的数据ID
  repeated LuckDraw LuckDraw = 8; //幸运值达到某个阈值必掉道具
  int32 LowDrawTimes = 9; //低级抽奖次数 (剩余)
  int32 DrawTimes = 10; //剩余总抽奖次数（免费，也就是充值增加的次数）
  int32 Discount = 11; //当前折扣，0 或者10 为不打折，1-10

}
message LuckDraw {
  int32 Value = 1; //幸运值达到
  int32 Id = 2; //必掉物品，抽奖数据表ID
  int32 Have = 3; //是否已抽中，0否1是
}

//拉取用于显示的所有物品掉落概率
message C2SGetDrawListRate {
  int32 ActId = 1; //活动ID
}
message S2CGetDrawListRate {
  int32 ActId = 1; //活动ID
  repeated string Item = 2; //需要显示的物品名称
  repeated string Rate = 3; //需要显示的物品概率
}

//购买抽奖道具
message C2SBuyDrawItem {
  int32 ActId = 1; //活动ID
  int32 Type = 2; //抽奖类型，1低级，2单次高级，3十次高级
  uint32 Count = 3; //购买次数
}
message S2CBuyDrawItem {
  int32 Tag = 1; //结果
  int32 ActId = 2; //活动ID
}

//抽奖
message C2SDraw {
  int32 ActId = 1; //活动ID
  int32 Type = 2; //抽奖类型，1低级，2单次高级，3十次高级
}
message S2CDraw {
  int32 Tag = 1; //结果
  int32 ActId = 2; //活动ID
  repeated ItemInfo Prize = 3; //抽奖奖品
  int32 CritLuck = 4; //是否幸运值暴击
  repeated int32 SpecialShow = 5; //需要特殊展示的道具Id数组
}

//获取抽奖记录
message DrawLog {
  string Nick = 1; //玩家昵称
  int32 DataId = 2; //抽奖数据表ID
  string World = 3;
}
//获取抽奖记录
message DrawDbLog {
  int32 ActId = 1;
  string Nick = 2; //玩家昵称
  int32 DataId = 3; //抽奖数据表ID
  int64 UserId = 4; //玩家ID
  string World = 5;
}
message C2SGetDrawLog {
  int32 ActId = 1; //活动ID
}
message S2CGetDrawLog {
  int32 Tag = 1; //结果
  repeated DrawLog Log = 2; //抽奖记录
  int32 ActId = 3; //活动ID
}

/*************寻宝活动*************/
//拉取寻宝数据列表
message C2SGetActXunBaoInfo {
  int32 ActId = 1; //活动全局唯一ID
}
message S2CGetActXunBaoInfo {
  int32 Tag = 1;
  int32 ActId = 2; //活动ID
  repeated XunBaoItem XunBaoItem = 3; //寻宝项
  repeated XunBaoItem ScoreItem = 4; //积分转盘项
  int32 OneTimeItemId = 5; //寻宝道具Id
  int32 GoldType = 6; //购买寻宝道具的货币类型
  int32 GoodsPrice = 7; //购买寻宝道具的价格
  int32 SalePrice = 8; //购买寻宝道具的折后价格
  int32 FiftyTimeDiscount = 9; //购买寻宝道具折扣
  int32 XunBaoTotalOdd = 11; //寻宝项的总概率
  int32 ScoreTotalOdd = 12; //积分转盘项的总概率
  int32 OneTimeNeedScore = 13; //积分转盘抽奖一次需要的积分
  int32 Type3ItemId = 14; //首抽必中道具
  int32 Type3ItemCount = 15; //首抽必中道具数量
  int32 Type3ItemNeedTotalTimes = 16; //首抽必中需要寻宝总次数
  string RelatedCfg = 17; //查头像关联的表名
  int32 DoubleDayStart = 10; //双倍奖励(开始天数)
  int32 DoubleDayEnd = 18; //双倍奖励(结束天数)
  int32 TenTimeDiscount = 19;
  int32 Score = 20; //寻宝一次获得的积分
}
//寻宝掉落项数据结构
message XunBaoItem {
  int32 Id = 1;
  int32 ItemId = 2; //物品ID
  int32 ItemCount = 3; //数量
  int32 SortId = 4; //排序值 排序为1显示在最上方中间位置
  int32 PrizeType = 5; //奖励类型
  int32 Odd = 6; //抽中概率
  int32 ExtParam = 7; //额外参数，比如寻宝项是仙侣，该字段可用作仙侣Id
  string OddClient = 8; //抽中概率(前端展示使用)
  int32 Quality = 9; //奖品品质
  int32 Category = 10; //奖品分类
  int32 Sort = 11;
}

//拉取寻宝活动产生的数据
message C2SGetActXunBaoData {
  int32 ActId = 1; //活动全局唯一ID
}
message S2CGetActXunBaoData {
  int32 Tag = 1;
  int32 ActId = 2; //活动ID
  int32 TotalTimes = 3; //玩家个人寻宝总次数
  int32 XunBaoScore = 4; //寻宝积分
  repeated ItemInfo WareHouse = 5; //珍宝仓库
  int32 HaveFreeTime = 6; //是否有免费次数   0无   1有
  int32 DoublePrize = 7; //是否双倍奖励(开服前7天双倍奖励)
}

//存储在玩家活动数据结构中
message PlayerXunBaoData {
  repeated ItemInfo WareHouse = 1; //珍宝仓库
  int32 TotalTimes = 2; //玩家个人寻宝总次数
  int32 XunBaoScore = 3; //寻宝积分
  int32 HaveFreeTime = 4; //是否有免费次数   0无   1有
  int32 DoublePrize = 5; //是否双倍奖励(开服前7天双倍奖励)
  repeated XunBaoLog ScoreLogs = 6; //积分转盘寻宝记录
  repeated XunBaoExchangeItem ExchangeItems = 7; //积分兑换项
}

//寻宝跳过动画
message C2SActXunBaoJump {
  int32 Jump = 1; // 寻宝跳过动画 0 不跳过；1 跳过
}
message S2CActXunBaoJump {
  int32 Tag = 1;
}

//寻宝抽奖
message DrawPrize {
  ItemInfo Prize = 1;
  int32 PrizeParam = 2; // 奖励参数，默认为0，仙玉抽奖为对应的百分比
  int32 PrizeType = 3; // 奖励类型，默认为0，仙玉类型为4
  int32 Pos = 4; // 奖励所占格子位置，对应于配置表中的排序字段
}
message C2SActXunBaoDraw {
  int32 ActId = 1; //活动ID
  int32 Type = 2; //抽奖类型，1寻宝1次，2寻宝10次 3寻宝50次
  int32 AutoBuy = 3; //是否自动购买抽奖道具
}
message S2CActXunBaoDraw {
  int32 Tag = 1; //结果
  int32 ActId = 2; //活动ID
  //  repeated ItemInfo Prize = 3; //抽到奖项
  int32 Score = 4; //寻宝后的积分
  int32 AddScore = 5; //本次寻宝增加的积分
  repeated DrawPrize DrawPrize = 6; //寻宝抽到的奖项
}

//寻宝积分转盘抽奖
message C2SActXunBaoScoreDraw {
  int32 ActId = 1; //活动ID
  uint32 Times = 2; //转盘抽奖次数
}
message S2CActXunBaoScoreDraw {
  int32 Tag = 1; //结果
  int32 ActId = 2; //活动ID
  repeated ItemInfo Prize = 3; //抽到奖项
}

//寻宝珍宝仓库全部取出
message C2SActXunBaoAllTake {
  int32 ActId = 1; //活动ID
}
message S2CActXunBaoAllTake {
  int32 Tag = 1; //结果
}

//寻宝记录
message XunBaoLog {
  string Nick = 1; //玩家昵称
  int32 AreaId = 2; //玩家区服
  int32 ItemId = 3; //道具Id
  int32 ItemQuality = 4; //道具品质(寻宝表中的字段)
  int64 Timestamp = 5; //时间戳
  int32 ItemNum = 6;
  string World = 7;
  int32 Percent = 8; // 仙玉夺宝奖池百分比
  int32 PrizeType = 9; // 奖励类型
}
//寻宝记录用于存数据库
message DbXunBaoLog {
  int32 ActId = 1;
  repeated XunBaoLog XunBaoLog = 2;
  int32 XunBaoTotaltimes = 3;
  int32 XunBaoDaJiangNum = 4;   //寻宝活动，大奖个数(用于助力寻宝)
}
message C2SGetXunBaoLog {
  int32 ActId = 1; //活动ID
  int32 IsSelf = 2; //是否是自己的记录 1 是
}
message S2CGetXunBaoLog {
  int32 Tag = 1; //结果
  int32 ActId = 2; //活动ID
  repeated XunBaoLog Log = 3;
  int32 IsSelf = 4; //是否为个人log 0 否；1 是
}
//积分转盘寻宝记录
message C2SGetXunBaoScoreLog {
  int32 ActId = 1; //活动ID
}
message S2CGetXunBaoScoreLog {
  int32 Tag = 1; //结果
  int32 ActId = 2; //活动ID
  repeated XunBaoLog Log = 3;
}

//寻宝积分兑换项数据结构
message XunBaoExchangeItem {
  int32 Id = 1; //积分兑换项Id
  int32 ItemId = 2; //物品ID
  int32 Focus = 3; //是否关注 0未关注 1关注
  int32 LimitUseTimes = 4; // 已经购买次数
  int32 LimitTotalTimes = 5; //限制购买次数
  int32 LimitTimesType = 7; //限制次数类型，0终身限制， 1每日限制 7每周限制
}
//拉取寻宝活动兑换的数据
message C2SGetActXunBaoExchangeData {
  int32 ActId = 1; //活动全局唯一ID
}
message S2CGetActXunBaoExchangeData {
  int32 Tag = 1;
  int32 ActId = 2; //活动ID
  repeated XunBaoExchangeItem Items = 3; //积分兑换项
  int32 XunBaoScore = 4; //寻宝积分
}

//寻宝积分兑换
message C2SActXunBaoExchange {
  int32 ActId = 1; //活动ID
  int32 ExcId = 2; //积分兑换项Id
  uint32 Num = 3; //兑换数量
}
message S2CActXunBaoExchange {
  int32 Tag = 1; //结果
  int32 ActId = 2; //活动ID
  int32 ExcId = 3; //积分兑换项Id
  int32 Num = 4; //兑换数量
}

//寻宝积分兑换项关注
message C2SActXunBaoExchangeFocus {
  int32 ActId = 1; //活动ID
  int32 ExcId = 2; //积分兑换项Id
  int32 OpType = 3; //操作类型，1关注 2取消关注
}
message S2CActXunBaoExchangeFocus {
  int32 Tag = 1; //结果
  int32 ActId = 2; //活动ID
  int32 ExcId = 3; //积分兑换项Id
  int32 OpType = 4; //操作类型，1关注 2取消关注
}

/*************转盘活动*************/
//拉取转盘数据列表
message C2SGetActTurntabInfo {
  int32 ActId = 1; //活动全局唯一ID
}
message S2CGetActTurntabInfo {
  int32 Tag = 1;
  int32 ActId = 2; //活动ID
  repeated TurntabItem TurntabItem = 3;
}
//转盘掉落项数据结构
message TurntabItem {
  int32 Id = 1;
  int32 ItemId = 2; //物品ID
  int32 ItemCount = 3; //数量
  int32 SortId = 4; //排序值 排序为1显示在最上方中间位置
  int32 Odd = 5; //概率
}

//拉取转盘抽奖数据
message C2SGetActTurntabData {
  int32 ActId = 1; //活动全局唯一ID
}
message S2CGetActTurntabData {
  int32 Tag = 1;
  int32 ActId = 2; //活动ID
  repeated PlayerTurntabItem PlayerTurntabItem = 3;
  int32 Times = 4; //剩余抽奖次数
  int32 Progress = 5; //获得抽奖次数积累进度
  int32 TotalProgress = 6; //获得抽奖次数总进度
  repeated DrawLog DrawLog = 7; //公共抽奖记录
}
//玩家转盘抽奖结果数据
message PlayerTurntabItem {
  int32 SortId = 1;
  int32 State = 2; //状态0没抽到 1已抽到
}

message PlayerTurntabData {
  repeated PlayerTurntabItem Items = 1;
  int32 TurnGroup = 2; //转盘奖励组
  int32 Times = 3; //剩余抽奖次数
  int32 Progress = 4; //获得抽奖次数积累进度
  int32 TotalProgress = 5; //获得抽奖次数总进度
  // repeated TurntabDrawLog Logs = 6; //转盘抽奖记录
  int32 AddTimesGear = 7; //增加抽奖次数档位
  //    repeated DrawLog DrawLogs = 8; //转盘抽奖记录
}

//转盘抽奖
message C2SActTurntabDraw {
  int32 ActId = 1; //活动ID
  int32 Type = 2; //抽奖类型，1单抽，2一键抽取(十次)
}
message S2CActTurntabDraw {
  int32 Tag = 1; //结果
  int32 ActId = 2; //活动ID
  int32 SortId = 3; //抽到奖项排序Id
  repeated ItemInfo Prize = 4; //抽到奖项
}

//转盘抽奖记录
message TurntabDrawLog {
  int64 Timestamp = 1; //抽取时间
  ItemInfo ItemInfo = 2; //抽取道具
}
message C2SGeTurntabDrawLog {
  int32 ActId = 1; //活动ID
  int32 IsSelf = 2;
}
message S2CGetTurntabDrawLog {
  int32 Tag = 1; //结果
  int32 ActId = 2; //活动ID
  //    repeated TurntabDrawLog Log = 3;
  int32 IsSelf = 4;
  repeated DrawLog DrawLogs = 5;
}

/*************充值转盘活动*************/
message PlayerRechargeTurntabData {
  int32 Times = 1; //剩余抽奖次数
  int32 RemainTimesRecharge = 2; //充值剩余的值(计算次数)
  int32 MoneyPoint = 3; //财富点
  int32 RemainPointRecharge = 4; //充值剩余的值(计算财富点)
  repeated int32 RewardId = 5; //以领取奖励Id数组
  repeated RechargeTurnLog Logs = 6; //转盘抽奖记录
}

//寻宝记录
message RechargeTurnLog {
  string Nick = 1; //玩家昵称
  int32 AreaId = 2; //玩家区服
  int32 ItemId = 3; //道具Id
  int32 ItemNum = 4; //道具数量
  int64 Timestamp = 5; //时间戳
  string World = 6;
}

//获取活动相关数据
message C2SGetActRechargeTurntabInfo {
  int32 ActId = 1; //活动全局唯一ID
}
message S2CGetActRechargeTurntabInfo {
  int32 Tag = 1;
  int32 ActId = 2; //活动ID
  int32 Times = 3; //剩余抽奖次数
  int32 MoneyPoint = 4; //财富点
  repeated int32 RewardId = 5; //以领取奖励Id数组
}

//转盘抽奖
message C2SActRechargeTurntabItem {
  int32 ActId = 1; //活动ID
  int32 Type = 2; //抽奖类型，1单抽，2一键抽取(十次)
}
message S2CActRechargeTurntabItem {
  int32 Tag = 1; //结果
  int32 ActId = 2; //活动ID
  int32 Type = 3; //抽奖类型，1单抽，2一键抽取(十次)
  int32 Id = 4; //抽到奖项Id
  repeated ItemInfo Prize = 5; //抽到奖项
}

//财富点领奖
message C2SActRechargeTurntabReward {
  int32 ActId = 1; //活动ID
  int32 Id = 2; //id
}
message S2CActRechargeTurntabReward {
  int32 Tag = 1; //结果
  int32 ActId = 2; //活动ID
  int32 Id = 3; //id
  repeated int32 RewardId = 4; //以领取奖励Id数组
}

//获取log
message C2SGetRechargeTurntabLog {
  int32 ActId = 1; //活动ID
  int32 Type = 2; //1:个人log 2：连服log
}
message S2CGetRechargeTurntabLog {
  int32 Tag = 1; //结果
  int32 ActId = 2; //活动ID
  int32 Type = 3; //1:个人log 2：连服log
  repeated RechargeTurnLog Logs = 4; //转盘抽奖记录
}

/*************充值返利转盘活动*************/
//拉取活动数据
message C2SGetChargeReturnData {
  int32 ActId = 1; //活动全局唯一ID
}
message S2CGetChargeReturnData {
  int32 ActId = 1; //活动全局唯一ID
  int32 IsReset = 2; //是否每日重置次数，0否1是
  int32 MaxTime = 3; //每日累计最大抽奖次数，0表示无限制
  repeated int32 Mutil = 4; // 抽奖倍数配置
}

//拉取玩家的返利数据
message C2SPlayerChargeReturnData {
  int32 ActId = 1; //活动全局唯一ID
}
message S2CPlayerChargeReturnData {
  int32 Tag = 1; //成功失败
  int32 ActId = 2; //活动全局唯一ID
  int32 Times = 3; //剩余次数
  int32 TotalCharge = 4; //活动期间总充值仙玉数
  int32 Need = 5; //下一档还需多少数量
  int32 Base = 6; //返利基数
  int32 TodayUseTimes = 7; //今日抽取次数
}
//返利详情
message ReturnDetail {
  int32 Item = 1; //返利档位
  int32 T = 2; //返利类型，0档位返利，1每充值N返利
  int32 Have = 3; //此档位是否已抽奖
}

//获取返利
message C2SChargeReturn {
  int32 ActId = 1; //活动全局唯一ID
}
message S2CChargeReturn {
  int32 Tag = 1; //成功失败
  int32 ActId = 2; //活动全局唯一ID
  int32 Multi = 3; //本次获得倍数
}

message ChargeReturnPrizeCache {
  int32 Cached = 1; //奖励是否领取    0,未缓存 1,已缓存
  int32 Multi = 2; //倍数
  int32 Base = 3; //基数
}

//获取返利领取奖励
message C2SChargeReturnReceivePrize {
  int32 ActId = 1; //活动全局唯一ID
}
message S2CChargeReturnReceivePrize {
  int32 Tag = 1; //成功失败
  int32 ActId = 2; //活动全局唯一ID
  int32 Multi = 3; //本次获得倍数
}

//获取返利记录
message ChargeReturnLog {
  string Nick = 1; //玩家昵称
  int32 Base = 2; //基数
  int32 Multi = 3; //倍数
}
message ChargeReturnDbLog {
  int32 ActId = 1;
  string Nick = 2; //玩家昵称
  int32 Base = 3; //基数
  int32 Multi = 4; //倍数
}
message C2SGetChargeReturnLog {
  int32 ActId = 1; //活动ID
}
message S2CGetChargeReturnLog {
  int32 Tag = 1; //结果
  repeated ChargeReturnLog Log = 2; //抽奖记录
  int32 ActId = 3; //活动ID
}

/*************折扣商店活动*************/
//折扣商店列表
message C2SGetActShopList {
  int32 Aid = 1; //活动id
}
message ActShopGoods {
  int32 Gid = 1; //商品id
  int32 F = 2; //是否达到购买条件 0:否 1:是
  int32 Bt = 3; //已经购买次数
  int32 T = 4; //总购买次数
  int32 Sort = 5;
  int32 ABt = 6; //连服购买次数
  int32 AT = 7; //连服总购买次数
  int32 LimitTimesType = 8; //限制次数类型，0终身限制， 1每日限制
}
message S2CGetActShopList {
  int32 Aid = 1; //活动id
  repeated ActShopGoods List = 2;
  repeated int32 Checked = 3;
}

message S2CActShopUnionBuy {
  int32 ABt = 1; //连服购买次数
  int32 AT = 2; //连服总购买次数
  int32 Gid = 3; //商品id
}

//折扣商店购买
message C2SActShopBuy {
  int32 Gid = 1; //商品id
  uint32 Num = 2; //商品数量
}
message S2CActShopBuy {
  int32 Tag = 1;
  int32 Gid = 2;
  int32 MsgParam = 3;
  ActShopGoods Goods = 4; // 购买后此商品数据
}
//礼包活动灭红点
message C2SActShopHideRed {
  int32 Actid = 1; //活动Id
}
message C2SActRechargeShopHideRed {
  int32 Actid = 1; //活动Id
}
/*************购买礼包活动*************/
//礼包列表
message C2SGetActGiftList {
  int32 Aid = 1; //活动id
}
message ActGift {
  int32 Gid = 1; //商品id
  string ItemStr = 2; //奖励 首个奖励是展示形象的id
  int32 CostType = 3; //消耗类型 1:仙玉 2:人民币 分
  int32 CostNum = 4; //现价
  int32 Price = 5; //原价
  int32 Price2 = 6; //礼包价值
  int32 Sort = 7; //活动排序
  int32 CanBuy = 8; //0:不能购买 1:可以购买 2:已购买 3:可领取 4:已领取
  string Content = 9; //底部标题
  string TabName = 10; //页签名称
  int32 IsRec = 11; //是否推荐
  int32 OpenDay = 12; //已经开服x天
  int32 OpenDayBuy = 13; //开服x天可以购买
  int32 LoginDay = 14; //买过礼包后累计登录x天
  int32 LoginDayBuy = 15; //累计登录x天可以领取
  int32 UseYuan = 16; //是否使用人民币购买
  string DevilSoulgift = 17; //魔魂数据
  int32 BuyTime = 18; //购买次数
  int32 BuyTimeLimit = 19; //购买次数上限
}
message S2CGetActGiftList {
  int32 Aid = 1;
  int32 ActType = 3; //活动类型
  repeated ActGift List = 2;
}
//礼包购买
message C2SActGiftBuy {
  int32 Gid = 1; //商品id
  int32 Aid = 2; //活动id
}
message S2CActGiftBuy {
  int32 Tag = 1;
  string P = 2; //奖励
  int32 Gid = 3;
  int32 Close = 4; //0:不关 1:关闭
}

/*************购买礼包(新类型)活动*************/
//存在玩家身上
message PlayerGiftNew {
  int32 Gid = 1; //商品id
  int32 CanBuy = 2; //0:不能购买 1:可以购买 2:已购买 3:可领取 4:已领取
  int32 BuyDay = 3; //购买该礼包的时间(开服天数)
  repeated RecRecord RecRcord = 4;
}

//礼包列表
message C2SGetActGiftNewList {
  int32 Aid = 1; //活动id
}
message ActGiftNew {
  int32 Gid = 1; //商品id
  string Goodname = 2; //商品名字
  int32 GoodType = 3; //商品类型  1:购买道具   2.一键购买其他商品Id的商品
  string GoodList = 4; //商品Id列表  (商品类型为2的商品使用)
  int32 ExistDay = 5; //持续天数 购买礼包后可以连续几天领取
  string ItemStr = 6; //礼包内容
  int32 CostType = 7; //消耗类型 1:仙玉 2:人民币 分
  int32 CostNum = 8; //现价
  int32 Price = 9; //原价
  int32 LimConId = 10; //限制条件Id  购买条件
  int32 Sort = 11; //活动排序
  int32 CanBuy = 12; //0:不能购买 1:可以购买 2:已购买 3:可领取 4:已领取

  int32 BuyDay = 13; //购买该礼包的时间(开服天数)
  repeated RecRecord RecRcord = 14;
  string LimConDes = 15; //限制条件Id  购买条件
}
//可连续领取的礼包的领取记录
message RecRecord {
  int32 Day = 1; //购买礼包后的第几天
  int32 State = 2; //0:未领取  1:已领取
}
message S2CGetActGiftNewList {
  int32 Aid = 1;
  int32 ActType = 2; //活动类型
  repeated ActGiftNew List = 3;
}

//礼包领取
message C2SActGiftNewReceive {
  int32 Gid = 1; //商品id
  int32 Aid = 2; //活动id
}
message S2CActGiftNewReceive {
  int32 Tag = 1;
  int32 Gid = 2;
  int32 Aid = 3;
}

/******************************************主题活动******************************************/
message C2SGoodsChecked {
  int32 ActId = 1;
  int32 GoodsId = 2; // 0 全部；
  int32 Checked = 3; // 0 勾选；1取消
}
message S2CGoodsChecked {
  int32 Tag = 1;
}
message ActTheme2Lucky {
  int32 Type = 1; // 类型
  int32 Lucky = 2; // 幸运值
}
message C2SActTheme2Lucky {
  int32 ActId = 1;
}
message S2CActTheme2Lucky {
  int32 ActId = 1;
  repeated ActTheme2Lucky ActTheme2Lucky = 2;
}
// 主题活动模板2玩家操作通用协议
// eg: 砸蛋
message C2SActTheme2Do {
  int32 ActId = 1;
  int32 Type = 2; // 奖池类型
  uint32 Times = 3; // 砸蛋次数
}
message S2CActTheme2Do {
  int32 Tag = 1;
  repeated ItemInfo Items = 2;
}
// 主题活动模板2宝库状态
message C2STheme2TreasuryState {
  int32 ActId = 1;
}
message S2CTheme2TreasuryState {
  int32 ActId = 1;
  int32 State = 2;
}
//获取主题活动3玩家数据，是否激活、当前派对点
message C2SActTheme3Data {
  int32 ActId = 1;
}
message S2CActTheme3Data {
  int32 ActId = 1;
  int32 Unlock = 2; //是否已激活，0否，1是
  int32 Score = 3; //当前派对点
  int32 IsDiscountBuy = 4; //是否折扣购买(0正常购买，1打折购买)
}
//主题活动3快速完成任务
message C2SActTheme3TaskFastFinish {
  int32 ActId = 1; //活动ID
  int32 TaskId = 2; //任务Id
}
message S2CActTheme3TaskFastFinish {
  int32 Tag = 1;
  string TagP = 2;
  int32 ActId = 3; //活动ID
  int32 TaskId = 4; //任务Id
}

/*************活动充值商城*************/



/*************多人冲榜打赏*************/

// 玩家展示信息
message RushRankUserInfo {
  int64 UserId = 1;
  string Nick = 2; //昵称
  int64 ShowAreaId = 3; //显示区服Id
  string FamilyId = 4; //家族
  int32 ShowHead = 5; //头像资源ID
  int32 ShowHeadFrame = 6; //头像框资源ID
  int64 Fv = 7; //战力
  int32 Level = 8; //等级，由转生、重数、真是等级拼接后的长int
  int32 Realm = 9; //境界
  int32 Vip = 10;
  string World = 11;
  int32 HideVIP = 12; //Vip等级是否屏蔽  0正常显示  1屏蔽
}

message C2SActRushRankGive {
  int32 ActId = 1;
  int64 recevieUserId = 2;
  uint64 giveCount = 3;
}

message S2CActRushRankGive {
  int32 Tag = 1;
  int32 ActId = 2; //活动Id
  int32 ItemId = 3;
  int64 ItemCount = 4;
  int64 GiveItemCount = 5;
}

message C2SActGetReceiveUserList {
  int32 ActId = 1;
  int32 isRefresh = 2; //默认  0 不刷新， 1 刷新
}

message S2CActGetReceiveUserList {
  int32 Tag = 1;
  int32 ActId = 2; //活动Id
  repeated RushRankUserInfo info1 = 3; //推荐
  repeated RushRankUserInfo info2 = 4; //人气
  repeated RushRankUserInfo info3 = 5; //同宗
  int64 GiveItemCount = 6; //捐献道具数量
}

message C2SActGetGiveLogList {
  int32 ActId = 1;
}

//多人冲榜，赠送接受日志
message ActRushRankGiveLogInfo {
  int32 logType = 1; //0 表示自己赠送别人，1 表示自己收到别人赠送
  RushRankUserInfo userIfo = 2;
  int32 ItemId = 3;
  int64 ItemCount = 4;
}

message S2CActGetGiveLogList {
  int32 Tag = 1;
  int32 ActId = 2;
  repeated ActRushRankGiveLogInfo infoList = 3;
}

message ActRushRankReceiveUserList {
  int32 UserType = 1; // 1 推荐 2 人气 3 同宗
  RushRankUserInfo userIfo = 2;
}

/*************BOSS活动*************/
//单个活动BOSS的信息
message ActBossInfo {
  int32 Id = 1; //Boss的Id
  string Name = 2; //Boss显示名称
  int32 Order = 3; //显示顺序值
  int32 BossId = 4; //显示BOSS的怪物表ID
  //    int32 ObjType = 5; //Boss类型
  //    int32 TypeId = 6; //
  int32 PetId = 5; // 宠物ID， 用于显示宠物属性和技能
  string Prize = 6; //显示奖励
}
//获取活动Boss的信息
message C2SGetActBossInfo {
  int32 ActId = 1; //活动Id
}
message S2CGetActBossInfo {
  int32 Tag = 1;
  int32 ActId = 2; //活动Id
  repeated ActBossInfo Info = 3; // 所有BOSS当前数据
}

//玩家挑战BOSS数据
message PlayerBossData {
  int32 Id = 1; //BossId
  int32 State = 2; //BOSS状态。0未开启，1挑战中，2已死亡
  int32 Prize = 3; //奖励状态。0未领取，1已领取
  //后期添加Boss状态值、玩家伤害排行等
}
//获取玩家挑战Boss的数据
message C2SPlayerBossInfo {
  int32 ActId = 1; //活动Id
}
message S2CPlayerBossInfo {
  int32 Tag = 1;
  int32 ActId = 2; //活动Id
  repeated PlayerBossData Info = 3; // 所有BOSS当前数据
}

//挑战
message C2SFightActBoss {
  int32 ActId = 1; //活动Id
  int32 BossId = 2; //挑战的BossId
}
message S2CFightActBoss {
  int32 Tag = 1;
  int32 ActId = 2; //活动Id
  int32 BossId = 3; //挑战的BossId
  repeated ItemInfo Prize = 4; //奖励列表
}

//领取奖励
message C2SGetActBossPrize {
  int32 ActId = 1; //活动Id
  int32 BossId = 2; //BossId
}
message S2CGetActBossPrize {
  int32 Tag = 1;
  int32 ActId = 2; //活动Id
  int32 BossId = 3; //挑战的BossId
  repeated ItemInfo Prize = 4; //奖励列表
}

/*********************仙魔挑战BOSS活动************************************************************************************************/
//单个仙魔挑战活动BOSS的信息
message ActDareBossInfo {
  int32 Id = 1; //Boss的Id
  string Name = 2; //Boss显示名称
  int32 Order = 3; //显示顺序值
  int32 BossId = 4; //显示BOSS的怪物表ID
  int32 ObjType = 5; //Boss类型
  int32 TypeId = 6; //
  //    int32 PetId = 5; // 宠物ID， 用于显示宠物属性和技能
  string Prize = 7; //显示奖励
}
//获取仙魔挑战活动Boss的信息
message C2SGetActDareBossInfo {
  int32 ActId = 1; //活动Id
}
message S2CGetActDareBossInfo {
  int32 Tag = 1;
  int32 ActId = 2; //活动Id
  repeated ActDareBossInfo Info = 3; // 所有BOSS当前数据
}

//玩家仙魔挑战BOSS数据
message PlayerDareBossData {
  int32 Id = 1; //BossId
  int32 State = 2; //BOSS状态。0未开启，1挑战中，2已死亡
  int32 Prize = 3; //奖励状态。0未领取，1已领取
}
//获取玩家仙魔挑战Boss的数据
message C2SPlayerDareBossInfo {
  int32 ActId = 1; //活动Id
}
message S2CPlayerDareBossInfo {
  int32 Tag = 1;
  int32 ActId = 2; //活动Id
  int32 State = 3; //0:激活状态, 1:待激活状态, 2:锁定状态, 3:挑战成功, 4:挑战失败,
  int32 DeadLine = 4; //该活动挑战截止开服天数
  repeated PlayerDareBossData Info = 5; // 所有BOSS当前数据
  int64 EndTimestamp = 6; //活动结束时间戳
  int32 ActIsOpen = 7; //活动是否已经开启
}
/*********************限时挑战************************************************************************************************/

message ActLimitTimeFightItem {
  int32 Idx = 1; //Boss的Id
  repeated ItemInfo Prize = 2; //显示奖励
  int64 FightValue = 3; //推荐战力
  int32 AnimId = 4; // 动画编号
  string FinalPrizeShow = 5; //终极大奖展示角色形象资源
}
message S2CGetActLimitTimeFight {
  int32 ActId = 1; //活动Id
  repeated ActLimitTimeFightItem Items = 2; // 所有BOSS当前数据
  int32 CurrIdx = 3; //已经挑战的idx
}


message DareState {
  int32 ActId = 1;
  int32 State = 2;
}
//玩家获取仙魔挑战状态
message C2SPlayerDareState {
}
message S2CPlayerDareState {
  repeated DareState States = 1; // 所有仙魔挑战活动的状态
}
//玩家获取仙魔挑战状态
message C2SPlayerDareIsOpen {
}
message S2CPlayerDareIsOpen {
  int32 Open = 1; // 所有仙魔挑战活动是否开启
  repeated DareEndTimestamp EndTimestamp = 2;
}
message DareEndTimestamp {
  int32 ActId = 1;
  int64 EndTimestamp = 2;
  int32 State = 3;
}

//挑战
message C2SFightActDareBoss {
  int32 ActId = 1; //活动Id
  int32 BossId = 2; //挑战的BossId
}
message S2CFightActDareBoss {
  int32 Tag = 1;
  int32 ActId = 2; //活动Id
  int32 BossId = 3; //挑战的BossId
  repeated ItemInfo Prize = 4; //奖励列表
  int32 Win = 5; //挑战是否成功，机器人用
}

//领取奖励
message C2SGetActDareBossPrize {
  int32 ActId = 1; //活动Id
  int32 BossId = 2; //BossId
}
message S2CGetActDareBossPrize {
  int32 Tag = 1;
  int32 ActId = 2; //活动Id
  int32 BossId = 3; //挑战的BossId
  repeated ItemInfo Prize = 4; //奖励列表
}
/*************良缘天定活动*************/
//获取两元天定状态(是否可领奖)
message C2SGetActLiangYuanState {
  int32 Aid = 1; //活动id
}
message S2CGetActLiangYuanState {
  int32 Aid = 1;
  int32 State = 2; //活动状态 0不可领取  1可领取 2 已领取
}
//奖励领取
message C2SActLiangYuanReceive {
  int32 Aid = 1; //活动id
}
message S2CActLiangYuanReceive {
  int32 Tag = 1;
}

//获取称号得主记录
message C2SGetActLiangYuanLog {
  int32 Aid = 1; //活动id
}
message S2CGetActLiangYuanLog {
  int32 Aid = 1;
  repeated LiangYuanLog Items = 2;
}
//良缘天定获取喜结连理称号记录
message LiangYuanLog {
  string Nick = 1; //玩家昵称
  string MateNick = 2; //伴侣昵称
  int32 AreaId = 3;
  int32 MateAreaId = 4;
  string World = 5;
  string MateWorld = 6;
}
message DBLiangYuanLog {
  int64 key = 1;
  LiangYuanLog LiangYuanLog = 2;
}

/*************遗迹探宝活动*************/
//拉取遗迹探宝列表
message C2SGetActYiJiTanBaoInfo {
  int32 ActId = 1; //活动全局唯一ID
}
message S2CGetActYiJiTanBaoInfo {
  int32 ActId = 1; //活动ID
  int32 FloorId = 2; //当前层
  int32 GridId = 3; //当前格子
  repeated YiJiTanBaoGridCfg Grid = 4; //当前层的每个格子的奖励配置
  repeated ItemInfo WareHouse = 5; //收益仓库
}
message YiJiTanBaoGridCfg {
  int32 Id = 1; //格子ID
  ItemInfo Item = 2; //奖品项
}

//用于存储的玩家遗迹探宝数据
message PlayerYiJiTanBaoData {
  int32 FloorId = 1; //当前层
  int32 GridId = 2; //当前格子
  repeated ItemInfo WareHouse = 3; //收益仓库
}

//遗迹探宝掷骰子
message C2SActYiJiTanBaoDice {
  int32 ActId = 1; //活动ID
  int32 Type = 2; //骰子类型，1幸运骰子，2黄金骰子
}
message S2CActYiJiTanBaoDice {
  int32 Tag = 1; //结果
  int32 DicePoint = 2; //骰子点数
  int32 GridId = 3; //到达格子Id
  int32 NeedNextFloor = 4; //是否切换到下一层  0不需要   1需要切换到下一层
  repeated ItemInfo Prize = 5; //收益奖项
}

//遗迹探宝一键领取收益奖励
message C2SActYiJiTanBaoGetAllPrize {
  int32 ActId = 1; //活动ID
}
message S2CActYiJiTanBaoGetAllPrize {
  int32 Tag = 1; //结果
  int32 ActId = 2; //活动ID
}

/*********************************************************************************************************************************/

//充值商城
//列表
message C2SGetChargeMallList {
  int32 T = 1; //type
}
message GoodsList {
  int32 Gid = 1; //商品id
  string Gn = 2; //商品详情
  int32 Mt = 3; //商城类型 1:充值商城 2:首充商城
  int32 S = 4; //排序
  int32 P = 5; //人民币(分)
  int32 Pid = 6; //图片id
  int32 Gt = 7; //商品类型 1:月卡 2:终身卡 3:元宝
  int32 I = 8; //是否双倍
}
message S2CGetChargeMallList {
  repeated GoodsList List = 1;
}
//拉取支付信息
message C2SChargeMallBuy {
  int32 Gid = 1;
}
message S2CChargeMallBuy {
  int32 Tag = 1;
  string data = 2; //支付sdk相关
}

//发货成功刷新列表
message S2CPayNotify {
  int32 Type = 1;
}

/*************任务活动**************/
//活动任务结构体
message ActTask {
  int32 Id = 1; //任务ID
  string Name = 2; // 任务名称
  int32 Type = 3; //任务类型
  int32 CounterType = 4; //全局计数器类型
  int32 Param = 5; //计数器参数
  int32 Target = 6; //任务完成条件
  string Prize = 7; // 奖励
  int32 Order = 8; // 排序值
  string AnimId = 9; // 各种资源ID
  int32 ClientFuncId = 10; // 客户端跳转ID
  int32 RevelValue = 11; //狂欢值
  int32 ShowCond = 12; // 隐藏任务的显示条件: 需达成指定任务
}
message C2SGetActTask {
  int32 ActId = 1; //活动Id
}
message S2CGetActTask {
  int32 Tag = 1;
  int32 ActId = 2; //活动Id
  repeated ActTask Task = 3; // 所有任务数据
}
//活动任务一件完成
message C2SActTaskOneKeyFinish {
  int32 ActId = 1; //活动Id
}
message S2CActTaskOneKeyFinish {
  int32 Tag = 1;
  int32 ActId = 2; //活动Id
  repeated ItemInfo Prize = 3; //奖励数组
}
message S2CGetFirstRechargeTask {
  repeated ActTask Task = 1; // 所有任务数据
}

/*************通天塔任务活动**************/
message GodTowerDayInfo {
  int32 Day = 1; //第几天
  int32 stage = 2; //0,不是当前天   1,是当前天
}
message C2SGetGodTowerActTaskDay {
}
message S2CGetGodTowerActTaskDay {
  repeated GodTowerDayInfo Task = 3; // 所有天数信息
}

/*************投资活动*************/
//获取某个投资活动的数据
message C2SGetInvestInfo {
  int32 ActId = 1; //活动Id
}
message S2CGetInvestInfo {
  int32 Tag = 1;
  int32 ActId = 2; //活动Id
  int32 AnimId = 3; //美术资源ID
  repeated ActTask Task = 4; // 所有任务数据
  string Name = 5; //投资计划名称
}

//获取某个投资活动玩家有没有购买
message C2SPlayerInvestData {
  int32 ActId = 1; //活动Id
}
message S2CPlayerInvestData {
  int32 Tag = 1;
  int32 ActId = 2; //活动Id
  int32 Buy = 3; //是否购买，0否，1是
}

//购买投资计划
message C2SBuyInvest {
  int32 ActId = 1; //活动Id
}
message S2CBuyInvest {
  int32 Tag = 1;
  int32 ActId = 2; //活动Id
}
//投资活动灭红点
message C2SActInvestHideRed {
  int32 Actid = 1; //活动Id
}
/*************排行活动*************/
//排行榜每个排名奖励
message RankData {
  int32 Id = 1; //
  int32 RankMin = 2; // 排名下限（包含）
  int32 RankMax = 3; // 排名上限（包含）
  string BasePrize = 4; // 基础奖励  道具ID:数量|
  string AddPrize = 5; // 附加奖励满足特殊条件才可以领取  道具ID:数量|
  string PrizeTitle = 6; // 附加奖励的条件的文字说明
  string PrizeContent = 7; // 附加奖励的内容的文字说明
  int32 CompareParam = 8; //附加奖励条件，比较参数
}

//获取某个排名活动的数据
message C2SGetActRankInfo {
  int32 ActId = 1; //活动Id
}
message S2CGetActRankInfo {
  int32 Tag = 1;
  int32 ActId = 2; //活动Id
  string Name = 3; // 活动名称
  int32 RankType = 4; // 排行榜类型
  int32 Param = 5; // 排行榜类型参数
  repeated RankData Data = 6; // 排行奖励信息
}

//拉取排行榜数据
message C2SGetActRankData {
  int32 ActId = 1; //活动ID
  repeated int32 FullDataRank = 2;
  //需要获得简略数据的名次集合，只返回SimpleRank数据结构
  repeated int32 SimpleDataRank = 3;
}

//推送指定排行榜数据，包括自己的排名
message S2CGetActRankData {
  int32 ActId = 1; //活动ID
  repeated Rank FullDataRank = 2; //详细AB数据
  repeated SimpleRank SimpleDataRank = 3; //简略数据
  SimpleRank MyData = 4; //自己的简略数据
}

//指定排行榜结束，向玩家推送排行榜结束数据
message C2SGetActRankEndData {
  int32 Active = 1; //0 默认值，1 客户端主动发起
}
message S2CGetActRankEndData {
  string ActName = 1; //排行榜活动名称
  int64 ActEndTime = 2; //排行榜活动结束时间戳
  repeated SimpleRank SimpleDataRank = 3; //简略数据
  SimpleRank MyData = 4; //自己的简略数据
}
message DbGetActRankEndData {
  int64 UserId = 1;
  S2CGetActRankEndData S2CGetActRankEndData = 2;
}
message DbDelayClearRankEndData {
  int32 ActId = 1;
  int64 ClearTime = 2;
  repeated DbGetActRankEndData DbGetActRankEndData = 3;
  S2CGetActRankEndData RankData = 4;
  repeated SimpleRank PlayerData = 5;
}
//todo 指定排行榜结束，向玩家推送排行榜结束数据  新数据结构
message C2SGetActRankEndDataN {
}
message S2CGetActRankEndDataN {
  string ActName = 1; //排行榜活动名称
  int64 ActEndTime = 2; //排行榜活动结束时间戳
  repeated SettleRank SettleRank10 = 3; //排行榜中前10名简略数据
  int32 MyRank = 4; //自己的排名
}
message DbDelayClearRankEndDataN {
  int64 UniqueId = 1;     //全局唯一Id
  int32 ActId = 2;        //活动Id
  int64 ClearTime = 3;    //过期清理时间
  repeated SettleRank SettleRankAll = 4; //排行榜中所有进榜玩家简略数据
  int32 Rank10EndIdx = 5;                //排名前10的数组在总的数组中的结束下标
  int64 ActEndTime = 6;                  //排行榜活动结束时间戳
  string ActName = 7;                    //排行榜活动名称
  int32 ActServerType = 8;
  int32 Tag = 9;//是否记录昨日排名
}
//排行结算简略排名信息，只包含名次、姓名、世界字段。用于排行结算推送
message SettleRank {
  int32 UserId = 1;   //玩家ID
  int32 R = 2;        //排名序号
  int64 SortValue = 3; //排名使用的数值
  string Name = 4;    //昵称
  string World = 5;   //世界字段
}

////获取明日冲榜活动Id(用于轮询的积分冲榜)
//message C2SGetTomorrowRankActId {
//    int32 ActId = 1; //活动Id
//}
//message S2CGetTomorrowRankActId {
//    int32 ActId = 1; //活动Id
//    int32 TomorrowActId = 2; //明日活动Id 值为0则说明没有找到明日活动
//}

/*************拼图活动**************/
//拉取拼图活动数据
message C2SGetActPicture {
  int32 ActId = 1; //活动Id
}
message S2CGetActPicture {
  int32 Tag = 1;
  int32 ActId = 2; //活动Id
  repeated ActTask Task = 3; // 所有任务数据
  repeated int32 Pictures = 4; //已经点亮的部位集合，1-16
  int32 PicAnimId = 5; //顶部图片资源ID
  int32 PartCount = 6; //部位数量
  repeated int32 PartAnimId = 7; //每个部位对应的图片资源ID数组
  int32 StickCount = 8; //点亮单个部位所需碎片数量
  int32 Prize = 9; //最终奖励道具ID
  int32 Intro = 10; // 玩法介绍
  repeated int32 PartItem = 11; //每个部位对应的碎片道具ID
}
//点亮拼图
message C2SActPictureLight {
  int32 ActId = 1; //活动Id
  int32 Part = 2; //部位ID，1-16
}
message S2CActPictureLight {
  int32 Tag = 1; //结果标志
  int32 ActId = 2; //活动Id
  repeated int32 Pictures = 3; //已经点亮的部位集合，1-16
}
/************************************************************************/

//展示物品e
message C2SShowItem {
  //1宠物 2仙侣 4仙童
  // 101 武器   102 法宝  103神装  104勋章
  int32 Type = 1; //类型  参数：物品唯一编号,参数宠物编号，勋章ID
  int64 Param1 = 2;
  string Param2 = 3;
  int32 ChannelType = 4; //频道展示     1  帮派频道  10002 世界频道   10003 跨服频道
  string Param3 = 5;
}

//展示物品
message S2CShowItem {
  int32 Tag = 1;
}
//广播展示
message S2CReportShowItem {
  int32 UserId = 1;
  string Nick = 2;
  int64 RoleId = 3; //显示头像用
  int64 GodLevel = 4; //GodLevel
  int32 Type = 5; //类型  1：武器， 参数：物品唯一编号
  int64 Param1 = 6;
  string Param2 = 7;
  int32 PetQ = 8; // 宠物品质
  int32 ChannelType = 9; //频道展示     1  帮派频道  10002 世界频道   10003 跨服频道
  int32 ShowId = 10; //展示编号
  int64 SenderGodLevel = 11; //境界等级
  int64 AreaId = 12; //区编号
  int32 SenderHead = 13; //发送人头像资源ID
  int32 SenderHeadFrame = 14; //发送人头像框资源ID
  int32 SenderChatFrame = 15; //发送人聊天框资源ID
  int32 SenderTitle = 16; //发送人称号皮肤ID
  int32 SenderVIP = 17; //发送人VIP
  string World = 18; //世界简称
  int32 HideVIP = 19; //Vip等级是否屏蔽  0正常显示  1屏蔽
  int32 PetAwaken = 20; //宠物觉醒等级
  string Param3 = 21;
}
message C2SGetShowInfo {
  int64 UserId = 1;
  int32 Type = 2; //类型  1：武器， 参数：物品唯一编号
  int64 Param1 = 3;
  string Param2 = 4;
  int32 ShowId = 6; //展示编号
}
message S2CGetShowInfo {
  int32 Tag = 1;
  int32 Type = 2; //类型  1：武器， 参数：物品唯一编号
  ItemData ItemInfo = 3; //武器信息
  Partner PartnerInfo = 4; //伙伴信息
  Pet2 PetInfo = 5; //宠物信息
  Precious PreciousInfo = 6; //
  repeated Grade GodEquip = 7; //神装相关升阶数据
  PreciousPos PreciousPosInfo = 8; //法宝当前位置信息，包含洗练数据
  int32 ShowId = 9; //展示编号
  int32 MedalId = 10; //勋章ID
  int32 MedalLevel = 11; //勋章等级
  repeated IntAttr FightAttr = 12;
  int32 PEEffectKey = 13; //激活宠物装备专属效果(展示宠物装备相关)
  repeated int32 PESuitKey = 14;   //激活宠物装备专属效果(展示宠物装备相关)
  repeated ItemData PetEquip = 15; //宠物装备信息(展示宠物相关)
  int64 PlayerId = 16;
}
//通知跨服服务器记录展示数据
message S2KShowItem {
  S2CReportShowItem ReportMsg = 1;
  S2CGetShowInfo ShowMsg = 2;
}

//跨服极品掉落
message K2SAddBossGoodDrop {
  int32 ItemId = 1;
  string InstanceType = 2;
  string Nick = 3;
}

//所有玩家跨服检测指定小红点，传入小红点ID
message K2SAllPlayerCheckSingleRed {
  int32 RedId = 1;
}

message OnlineUser {
  int32 Id = 1;
  string Nick = 2;
  int64 Level = 3;
}
message ApiResult {
  int32 Tag = 1;
  string Msg = 2;
}

//微信公众号拉取商品列表
message GoodList {
  int32 Code = 1;
  string Msg = 2;
  repeated Goods List = 3; //商品列表
}
message Goods {
  int32 GoodId = 1; //商品
  int32 Prize = 2; //价格，分
  string Desc = 3; //商品描述
  int32 Type = 4; //商品分类页签号
  string Name = 5;//商品名称
  int32 Order = 6;//排序
}

//兑换码
message C2SRedeemCode {
  string Code = 1; //激活码
  int32 ActivityId = 2; //活动id
}

message S2CRedeemCode {
  int32 Tag = 1;
  string RewardList = 2; //1:100|2:200
  int32 ActivityId = 3; //活动id
}
//实名认证
message C2SRealName {
  string Name = 1;
  string Card = 2;
}
message S2CRealName {
  int32 Tag = 1;
}
//领取实名认证奖励
message C2SGetRealNamePrize {
  int32 RealName = 1; // 0，1，2
}
message S2CGetRealNamePrize {
  int32 Tag = 1;
}
//防沉迷信息
message S2CReportFcm {
  int32 FcmMinute = 1; //防沉迷时长
  int32 FcmStatus = 2; //防沉迷状态 0:0-3小时 1:3-5小时 2:>5小时
}
message C2SSetFcm {
  int32 Fcm = 1; //防沉迷状态，0无，1未满18,2满18
}

message S2CRealNamePopups {
  int32 PopupsId = 1; //弹窗Id
  int32 RealTimeType = 2; //实名类型 0游客，1成年人，2未成年16-18，3未成年8-16，4未成年<8
  int32 ForceOffline = 3; // 1强制下线，2不强制下线
  int64 param = 4; //附带参数，可用于存放时间戳
}

//领取限时时装
message C2SGetLimitCloth {

}
message S2CGetLimitCloth {
  int32 Tag = 1;
}
//通知时装到期
message S2CGetLimitClothEnd {
}

message BossHillBox {
  int64 BoxId = 1;
  int32 Pos = 2;
  int64 OpenTime = 3; //开启宝箱时间（时间戳）
}
//仙山夺宝数据
message BossHillData {
  repeated BossHillBox Box = 1; //四个宝箱位置
  int64 TmpBoxId = 2; //当前掉落宝箱编号
  //通关数据
  repeated IntAttr Instances = 3; //通关数据, 0,表示没有击杀，1表示已经击杀，2 表示今日已经击杀过
}
//仙山夺宝信息
message S2CBossHillData {
  repeated BossHillBox Box = 1; //四个宝箱位置
  //通关数据
  repeated IntAttr Instances = 2; //通关数据, 0,表示没有击杀，1表示已经击杀，2 表示今日已经击杀过
}
//仙山夺宝战斗
message C2SBossHillFight {
  int32 Id = 1;
}
message S2CBossHillFight {
  int32 Tag = 1;
  int64 BoxId = 2; //宝箱编号
  int32 Id = 3; //挑战的编号
  bool Win = 4; //是否挑战成功
}
//替换宝箱
message C2SBossHillReplace {
  int32 Pos = 1; //1-4 替换宝箱位置
}
message S2CBossHillReplace {
  int32 Tag = 1;
  int64 BoxId = 2; //宝箱编号
  int64 OpenTime = 3; //开启宝箱时间
  int32 Pos = 4; //1-4 替换宝箱位置
}


message C2SBossHillOpen {
  int32 IsCoin = 1; //是否使用元宝
  int32 Pos = 2; //1-4 开启宝箱位置
}
message S2CBossHillOpen {
  int32 Tag = 1;
  int32 Pos = 2; //1-4 开启宝箱位置
  repeated ItemData Items = 3; //奖励数据
}

//81难数据
message Instance81Data {
  int64 InstanceId = 1; //副本编号
  repeated string FirstTeam = 2; //首通队伍
  int64 FirstTime = 3; //首通时间
  int64 FirstRound = 4; //回合数
  repeated string QuickTeam = 5; //最少回合队伍
  int64 QuickTime = 6; //挑战时间
  int64 QuickRound = 7; //最少回合数
}
//玩家81难数据
message Player81Data {
  int64 InstanceId = 1; //副本编号
  int64 State = 2; //0未通关，1，已通关，2，今日已通关
  int64 FightTimes = 3; //今日挑战次数
  int64 IsBoxOpen = 4; //0，未开启宝箱 1,已开启宝箱
}
message S2C81Info {
  repeated Player81Data Data = 1;
  int64 HelpTimes = 2; //今日帮助次数
}
//查看挑战记录
message C2SViewInstance81Data {
  int64 InstanceId = 1;
}
message S2CViewInstance81Data {
  int64 InstanceId = 1;
  Instance81Data Instance = 2; //81难数据
}

//一键扫荡当
message C2S81Sweep {
  int64 InstanceId = 1;
  int32 isSweepAll = 2; //0,扫荡当前关卡， 1,扫荡本章所有关卡
}
message S2C81Sweep {
  int32 Tag = 1;
  repeated int32 InstanceId = 2;
  repeated ItemData Items = 3; //奖励数据
}
//购买宝箱
message C2S81BuyBox {
  int32 Id = 1;
  int32 Chapter = 2; //章节编号 和id必须有1个
}
message S2C81BuyBox {
  int32 Tag = 1;
  int32 id = 2;
  int32 Chapter = 3; //章节编号 和id必须有1个
  repeated ItemData Items = 4; //奖励数据
}
/********************************神器相关********************************/

//玩家神器数据结构
message GodItem {
  int32 Id = 1; //神器ID
  int32 L = 2; // 升阶等级
  int32 S = 3; // 祭灵等级
  int32 S2 = 4; // 元魂等阶
  int32 SS1 = 5; // 天魂等级
  int32 SS2 = 6; // 地魂等级
  int32 SS3 = 7; // 命魂等级
  int32 S3 = 8; // 神元等阶
  int32 LS1 = 9; // 炼神第一行已保存属性
  int32 LS2 = 10; // 炼神第二行已保存属性
  int32 LS3 = 11; // 炼神第三行已保存属性
  int32 LS1T = 12; // 炼神第一行临时属性
  int32 LS2T = 13; // 炼神第二行临时属性
  int32 LS3T = 14; // 炼神第三行临时属性
  int32 S4 = 15; // 觉醒等阶
  int32 LSTIME = 16; // 炼神未保存的次数
  int32 ST = 17; //宝石总等级
  int32 STC = 18; //宝石雕琢总等级
}

//主动推送神器数据
message S2CAllGodItem {
  repeated GodItem GodItem = 9; //所有神器
}

//解锁神器
message C2SUnlockGodItem {
  int32 Id = 1; //神器ID
}
message S2CUnlockGodItem {
  int32 Tag = 1;
  int32 Id = 2; //神器ID
}

//升级神器
message C2SGodItemLevelUp {
  int32 Id = 1; //神器ID
}
message S2CGodItemLevelUp {
  int32 Tag = 1;
  int32 Id = 2; //神器ID
  int32 Level = 3; //操作后的等级
}

//神器祭灵
message C2SGodItemSoulUp {
  int32 Id = 1; //神器ID
}
message S2CGodItemSoulUp {
  int32 Tag = 1;
  int32 Id = 2; //神器ID
  int32 S = 3; //神器祭灵等级
}

//升级神器元魂
message C2SGodItemSoul2Up {
  int32 Id = 1; //神器ID
}
message S2CGodItemSoul2Up {
  int32 Tag = 1;
  int32 Id = 2; //神器ID
  int32 S2 = 3; //操作后的元魂等级
}

//升级神器元魂技能
message C2SGodItemSoul2SkillUp {
  int32 Id = 1; //神器ID
  int32 SkillId = 2; //元魂技能Id
}
message S2CGodItemSoul2SkillUp {
  int32 Tag = 1;
  int32 Id = 2; //神器ID
  int32 SkillId = 3; //元魂技能Id
  int32 SS = 4; //操作后的元魂技能等级
}

//升级神器神元
message C2SGodItemSoul3Up {
  int32 Id = 1; //神器ID
}
message S2CGodItemSoul3Up {
  int32 Tag = 1;
  int32 Id = 2; //神器ID
  int32 S3 = 3; //操作后的神元等级
}

//神器炼神
message C2SGodItemForge {
  int32 Id = 1; //神器ID
  int32 Type = 2; //炼神类型，1低级，2高级
  int32 Times = 3; //炼神次数，
}
//神器炼神
message S2CGodItemForge {
  int32 Tag = 1; //结果标志
  int32 Id = 2; //神器ID
  int32 Times = 3; //炼神次数，
  int32 LS1T = 4; // 炼神第一行临时属性
  int32 LS2T = 5; // 炼神第二行临时属性
  int32 LS3T = 6; // 炼神第三行临时属性
}

//神器炼神保存
message C2SGodItemForgeSave {
  int32 Id = 1; //神器ID
}
//神器炼神保存
message S2CGodItemForgeSave {
  int32 Tag = 1; //结果标志
  int32 Id = 2; //神器ID
  int32 LS1 = 3; // 炼神第一行已保存属性
  int32 LS2 = 4; // 炼神第二行已保存属性
  int32 LS3 = 5; // 炼神第三行已保存属性
}

//升级神器觉醒
message C2SGodItemSoul4Up {
  int32 Id = 1; //神器ID
}
message S2CGodItemSoul4Up {
  int32 Tag = 1;
  int32 Id = 2; //神器ID
  int32 S4 = 3; //操作后的觉醒等级
}

//升级宝石
message C2SGodItemStoneUp {
  int32 Id = 1; //神器ID
}
message S2CGodItemStoneUp {
  int32 Tag = 1;
  int32 Id = 2; //神器ID
  int32 ST = 3; //操作后的宝石等级
}

//升级宝石雕琢
message C2SGodItemStoneCut {
  int32 Id = 1; //神器ID
}
message S2CGodItemStoneCut {
  int32 Tag = 1;
  int32 Id = 2; //神器ID
  int32 STC = 3; //操作后的宝石雕琢等级
}

/*******************************王者争霸*********************************/

//获取王者争霸玩家数据
message C2SKingInfo {
}
//获取王者争霸玩家数据
message S2CKingInfo {
  int32 Tag = 1;
  int32 KingRank = 2; // 星级
  int32 Win = 3; //净胜场
  int32 ContinueWin = 4; //连胜场
  int32 Respect = 5; //是否已膜拜，0否，1是
  int32 Times = 6; //剩余挑战次数
  int32 NextTime = 7; //挑战次数下次恢复时间戳
}

//获取王者争霸是否在活动时间内
message C2SKingState {
}
//获取王者争霸是否在活动时间内
message S2CKingState {
  int32 State = 1; //当前活动状态。0正常可挑战，1在结算期间不能进入，2活动未开启，3因未进入前200无法参与
}

//王者争霸匹配
message KingMatch {
  int32 UserId = 1; // 玩家ID
  int32 ServerId = 2; //区服ID
  int32 RoleId = 3; // 角色ID
  string Nick = 4; //昵称
  int32 Rank = 5; // 当前星级
  string World = 6; //世界
}
message C2SKingMatch {
}
//王者争霸匹配
message S2CKingMatch {
  int32 Tag = 1; //标记
  repeated KingMatch MatchList = 2; // 匹配滚动时需要依次显示的玩家数据
  KingMatch Target = 3; //最终的对战对手
}

//匹配完毕倒计时结束后，开始进入战斗，若逻辑执行成功则会收到战报
message C2SKingFight {
}
message S2CKingFight {
  int32 Tag = 1; // 标记
}

//获取当前排名
message KingRank {
  int32 KingRank = 1; // 星级
  int32 ServerId = 2; //区服ID
  string Nick = 3; //昵称
  int32 Win = 4; //净胜场
  int32 Sort = 5; //名次
  int32 Head = 6; // 头像资源。资源ID*10 + (0静态，1动态)
  int32 HeadFrame = 7; // 头像框资源。资源ID*10 + (0静态，1动态)
  int64 FV = 8; //战力
  int64 Id = 9; //玩家ID
  string World = 10; //世界
}

message C2SKingRank {
  int32 Type = 1; //排行榜类型，0为本周排名，1为上周排名
}
message S2CKingRank {
  int32 Type = 1; //排行榜类型，0为本周排名，1为上周排名
  repeated KingRank Rank = 2; // 排行数据
  KingRank MyRank = 3; //我的排名
}

//获取跨服王者
message C2SKingPlayer {
}
message S2CKingPlayer {
  int32 Id = 1; //玩家ID
  int32 ServerId = 2; //区服ID
  repeated IntAttr A = 3; //所需的int型数据
  repeated StrAttr B = 4; //所需的string型数据
  int32 Win = 5; //净胜场
  string World = 6; //世界
}

//购买王者争霸挑战次数
message C2SKingBuyTimes {
  int32 T = 1; //购买类型，1仙玉，2元宝
}
message S2CKingBuyTimes {
  int32 Tag = 1;
}

//王者争霸膜拜
message C2SKingRespect {
}
message S2CKingRespect {
  int32 Tag = 1;
}

/*********************************符文***************************************/
//穿戴
message C2SWordsWear {
  int32 Part = 1; // 要穿戴的部位，填1-9。若填0表示一键穿戴所有可穿的部位
}
message S2CWordsWear {
  int32 Tag = 1;
  repeated int32 Parts = 2; //成功穿戴的位置数组
}

//合成
message C2SWordsStick {
  int32 Part = 1; // 要合成的部位，填1-9
  int32 Times = 2; // 合成次数，1表示合成一次，2表示一键合成
  int32 Level = 3; // 要合成的等级，填2-10
}
message S2CWordsStick {
  int32 Tag = 1;
}

/******************************境界系统**********************************************/
//境界结构体
message DBPlayerRealm {
  bool systemIsOpen = 1; //系统是否解锁
  int32 CurExp = 2; //当前境界经验
  int32 Level = 3; //境界小等级
  repeated RealmTargetPrize TargetPrize = 4; //达标奖励
  int32 DayPrizeState = 5; //每日奖励状态
  repeated CounterTypeTaskId CounterTypeTaskId = 6; //当前正在做的任务的计数类型对应的任务Id
}

message CounterTypeTaskId {
  int32 CounterType = 1; //计数器类型
  int32 TaskId = 2; //活动Id
}

message PlayerRealm {
  int32 CurExp = 1; //当前境界经验
  int32 Level = 2; //境界小等级
}
message S2CPlayerRealm {
  PlayerRealm Data = 1;
}

//开启境界系统
message C2SOpenRealmSystem {
}
message S2COpenRealmSystem {
  int32 Tag = 1;
}

//境界突破
message C2SRealmOverfulfil {
}
message S2CRealmOverfulfil {
  int32 Tag = 1;
}

//境界达标奖励
message RealmTargetPrize {
  int32 RealmLevel = 1; //境界等级(大等级)
  int32 PrizeState = 2; //达标奖励状态    0未达标 1未领取 2已领取
  int32 LimitPrizeState = 3; //限时奖励状态    0未达标 1未领取 2已领取
  int64 LimitPrizeExpireTimestamp = 4; //限时奖励过期时间戳
}

//获取奖励信息
message C2SGetRealmPrizeInfo {
}
message S2CGetRealmPrizeInfo {
  int32 Tag = 1;
  repeated RealmTargetPrize TargetPrize = 2;
  int32 DayPrizeState = 3; //1未领取 2已领取
}

//领取达标奖励
message C2SGetRealmTargetPrize {
  int32 RealmLevel = 1; //境界等级(大等级)
}
message S2CGetRealmTargetPrize {
  int32 Tag = 1;
  RealmTargetPrize Data = 2;
}

//领取每日奖励
message C2SGetRealmDayPrize {
}
message S2CGetRealmDayPrize {
  int32 Tag = 1;
}

//境界任务数据
message C2SRealmTask {
}
message S2CRealmTask {
  repeated RealmTask Tasks = 1;
}
message RealmTask {
  int32 Id = 1;
  int32 S = 2; //0进行中，1已完成未领奖，2已完成已领奖
  int64 IC = 3; //初始计数，默认为0，当任务是独立计数时，初始值为全局计数
  int64 C = 4; //当前计数量
  int32 SortIdx = 5;
}

/****************************************************************************/
//押注数据
message StakeData {
  int64 UserId = 1;
  int32 Pos = 2;
  int32 StakeId = 3;
  int32 Win = 4;
  int32 FightId = 5; //战斗ID 1-15
}
message GodClubDbData {
  int32 State = 1;
  repeated int32 HandleState = 2; //已经处理过的状态
  repeated int64 SignUpUser = 3; //报名用户
  int32 Session = 4; //界数
  repeated StakeData Stakes = 5; //押注数据
}
//仙道会用户数据
message GodClubUserInfo {
  int32 Session = 1; //界数
  int32 BattlefieldId = 2; //战区
  int64 UserId = 3; //用户编号
  repeated int32 Win = 4; //输赢情况
  int32 Rank = 5;
  int32 Pos = 6;
  BaseDbInfo Data = 7;
}
message GodClubFightReportItem {

  int32 Win = 3; //1 userid1 胜利，其他 userid2 胜利
  int32 GameIdx = 4; //局数
  S2CBattlefieldReport Report = 5; //战报
}
//仙道会战报
message GodClubFightReport {
  int32 Session = 1; //界数
  int32 BattlefieldId = 2; //战区
  int32 FightIdx = 3; //战斗序号
  int64 UserId1 = 4; //战斗用户
  int64 UserId2 = 5; //战斗用户
  repeated GodClubFightReportItem Items = 6;
}
//仙道会报名
message C2SGodClubSignUp {

}
message S2CGodClubSignUp {
  int32 Tag = 1;
}

//仙道会用户数据
message GodClubFightUser {
  int64 UserId = 3; //用户编号
  repeated IntAttr A = 1;
  repeated StrAttr B = 2;
}
//请求仙道会战斗详情
message C2SGodClubFight {
  int32 FightIdx = 1; //1-15
}
message S2CGodClubFight {
  GodClubFightUser A = 1;
  GodClubFightUser B = 2;
  repeated int32 Win = 3; //0: a, 失败，1 ：a 胜利
  int32 FightIdx = 4; //1-15
}
//观看录像
message C2SGodClubFightReport {
  int32 FightIdx = 1; //1-15
  int32 GameIdx = 2; //1-3
}
message S2CGodClubFightReport {
  int32 Tag = 1;
}
//仙道会16强用户
message GodClub16User {
  int64 UserId = 1; //用户编号
  int32 RoleId = 2;
  string Nick = 3;
  int32 AreaId = 4; //区编号
  int32 Pos = 5;
  repeated int32 Win = 6; //0: a, 失败，1 ：a 胜利
}

//请求仙道会战斗
message C2SGodClub16 {
}
message S2CGodClub16 {
  repeated GodClub16User Users = 1;
  repeated int32 Stakes = 2; //是否押注
}
//获取详细的押注信息
message C2SGodClubStakeInfo {
  int32 FightId = 1; //战斗id
}
//仙道会押注信息
message S2CGodClubStakeInfo {
  int32 FightId = 1; //战斗id
  int32 Pos = 2; //押注位置
  int32 StakeId = 3;
  GodClubFightUser A = 4;
  GodClubFightUser B = 5;
}
//押注
message C2SGodClubStake {
  int32 FightId = 1; //战斗id
  int32 Pos = 2; //押注位置
  int32 StackId = 3;
}
//仙道会16强用户
message S2CGodClubStake {
  int32 Tag = 1;
}

//******************************************//
//进入仙草秘境
message C2SGodHerbEnter {
  int32 Id = 1; //秘境编号
}
message S2CGodHerbEnter {
  int32 Tag = 1; //秘境编号
  int32 Id = 2; //秘境编号
}
//刷新仙草位置
message C2SGodHerbRefresh {

}
message S2CGodHerbRefresh {
  int32 Tag = 1; //秘境编号
}

//采集10次
message C2SGodHerbCollect {
  int32 Id = 1; //仙草编号
  int32 Num = 2; //采集次数 1,10,50
  int32 AutoBuy = 3; //是否自动购买,1 自动购买
}
message S2CGodHerbCollect {
  int32 Tag = 1; //
  int32 Num = 2; //采集次数 1,10,50
  repeated ItemData Data = 3; //奖励数据
}
message C2SGetGodHerbLog {
  int32 Type = 1; //1 自己 2全服
}

//龙宫夺宝日志
message GodHerbLogItemClient {
  int64 Time = 1;
  NoticeUser User = 2;
  int64 GodHerbId = 3;
  repeated ItemData Item = 4;
}

message S2CGetGodHerbLog {
  int32 Type = 1; //1 自己 2全服
  repeated GodHerbLogItemClient Logs = 2;
}
/******************************************/
//渡劫缓存
message RobberyItem {
  int32 ItemId = 1;
  int32 RobberyId = 2;
  int64 Coin3 = 3; //获得的仙玉
}
message RobberyLogItem {
  int64 UserId = 1;
  string Nick = 2;
  int32 AreaId = 3;
  int64 Time = 4; //时间
  int32 Pos = 5; //选择的位置
  int32 Mul = 6; //倍数
  int64 Coin3 = 7; //仙玉
}
//发送渡劫数据
message S2CRobberyInfo {
  repeated RobberData Items = 1;
}
//获取渡劫数据
message C2SGetRobberyData {
  int32 ItemId = 1;
  int32 Num = 2;
}
message S2CGetRobberyData {
  int64 Coin3 = 1; //获得仙玉
  int32 Id = 2; //ID
  int32 Mul = 3; //获得倍数饿
}
//领取渡劫奖励
message C2SRobbery {
  int32 ItemId = 1;
  int32 Num = 2;
  int32 Pos = 3; //渡劫极位
}
message S2CRobbery {
  int32 Tag = 1;
  int32 Id = 2;
  repeated RobberData Items = 3;

}
//领取幸运宝箱
message C2SRobberyLuck {
  int32 Id = 1; // 1 2 3
}
message S2CRobberyLuck {
  int32 Tag = 1;
  int32 Id = 2;
}
//获取渡劫记录
message C2SGetRobberyLog {
  int32 Type = 1; //1 自己 2全服
}
message S2CGetRobberyLog {
  repeated RobberyLogItem Items = 1;
  int32 Type = 2; //1 自己 2全服
}

//玩家龙宫次数
message PlayerDragonTimes {
  int32 InstanceType = 1;
  int32 InstanceId = 2;
  int64 Times = 3; //次数
}
//玩家龙宫数据
message PlayerDragon {
  int32 CloseStock = 1; //是否关闭库存，内部号关闭库存
  int64 DragonOdd = 2; //抓捕概率
  int64 TotalProfit = 3; //总盈利
  repeated int64 TotalProfits = 4; //总盈利
  int64 TotalFlowingWater = 5; //总流水
  repeated int64 TotalFlowingWaters = 6; //总流水
  int64 DayProfit = 7; //今日盈利
  repeated int64 DayProfits = 8; //今日盈利
  int64 DayFlowingWater = 9; //今日流水
  repeated int64 DayFlowingWaters = 10; //今日流水
  int64 TotalGuard = 11; //累计保送仙玉
  int64 TotalRebate = 12; //累计返利仙玉
  int64 DayGuard = 13; //今日保送仙玉
  int64 DayRebate = 14; //今日返利仙玉
  int64 CurrGuard = 15; //已经保送仙玉
  int64 CurrRebate = 16; //已经返利仙玉
  int64 MaxFlowingWater = 17; //总盈利上限，充值，和使用灵芝，免费获得元宝
  int64 DayMaxFlowingWater = 18; //今日增加的上限
  int32 Day = 19; //日期
  int64 UserId = 20; //用户编号
  repeated PlayerDragonTimes DragonTimes = 21; //仙草次数
}

//客户端缓存数据
message ClientDb {
  string Key = 1;
  string Value = 2;
}
message S2CClientDb {
  repeated ClientDb Items = 1;
}
message C2SClinetSet {
  string Key = 1;
  string Value = 2;
}
message S2CClinetSet {
  int32 Tag = 1;
}

/**************************************阵法系统***************************************/
//阵法数据
message ZF {
  int32 Id = 1; //阵法ID
  int32 State = 2; //阵法状态。0已解锁未激活，1已激活未出战，2已出战
  repeated int32 PetId = 3; //已选择的伙伴ID，按顺序排列，0表示此位置未选择，如[1,0,10,12]
}

//获取玩家阵法数据
message C2SGetZF {
}
//阵法数据发生任何变化，都会主动推这个包，比如新解锁阵法
message S2CGetZF {
  int32 Tag = 1; //结果标志
  repeated ZF ZF = 2; //阵法数据，可能为空，表示皆未解锁
}

//伙伴上下阵
message C2SZFPetUp {
  int32 Id = 1; //阵法ID
  int32 Pos = 2; //上阵位置，0表示下阵
  int32 PetId = 3; //伙伴ID
}
message S2CZFPetUp {
  int32 Tag = 1; //结果标志
  int32 Id = 2; //阵法ID
  int32 Pos = 3; //上阵位置，0表示下阵
  int32 PetId = 4; //伙伴ID
}

//阵法状态修改
message C2SZFState {
  int32 Id = 1; //阵法ID
  int32 State = 2; //修改后状态，1激活不出战，2出战
}
message S2CZFState {
  int32 Tag = 1; //结果标志
  int32 Id = 2; //阵法ID
  int32 State = 3; //修改后状态，1激活不出战，2出战
}

//阵法解锁
message C2SZFUnlock {
  int32 Id = 1; //阵法ID
}
message S2CZFUnlock {
  int32 Tag = 1; //结果标志
  int32 Id = 2; //阵法ID
}

/******************************************/
message RankPetData {
  string Id = 1;
  int32 IId = 2;
  string Name = 3;
  int32 Level = 4;
  int32 Reborn = 5;
  int64 Fv = 6;
  int32 Q = 7;
  int32 T = 8;
  int32 Awaken = 9;
}
//排行榜落地数据
message RankDataItem {
  int32 RankKey = 1;
  int64 UserId = 2;
  RankPetData Pet = 3;
  int64 Value1 = 4;
  int64 Value2 = 5;
  int64 Ext = 6;
  int32 Rank = 7; //排名
}
//排行榜落地数据
message RankDbData {
  repeated RankDataItem RankData = 1;
  int32 DataVer = 2; //排行榜数据版本号
}

//如果当前逻辑在跨服服务器，则发消息给游戏服务器，然后在游戏服务器里触发事件
message K2SNewEvent {
  int32 ServiceType = 1; //业务类型
  int64 Count = 2; //计数
  int32 Param2 = 3;
  int32 Param3 = 4;
}
message K2SNewEnemyRecord {
  int64 UserId = 1;
  int32 Instance = 2;
}
message K2SPrizeReport {
  bool Win = 1;
  repeated ItemData Item = 2;
  int32 InstanceType = 3;
}
//boss之家中体力不足时，从跨服服务器发消息到游戏服务器做处理
message K2SBossHomeBodyPowerNotEnough {
  bool AutoBuy = 1;
}
//在痴情鬼厉任务期间掉落“幻”“灵”“修”“仙”四个字其中的一个
message K2SDropHLXXItem {
}

//功能开启(发送世界聊天)
message C2SFuncOpen {
  int32 FuncId = 1;
}
message S2CFuncOpen {
  int32 Tag = 1;
}
//机器人一键上阵
message C2SRobotZF {
}

//图鉴
message PhotoBook {
  int32 Id = 1; //图鉴表ID
  int32 L = 2; //图鉴星级，初始为1
  int32 SL = 3; //强化等级，初始为0
}
message PhotoBookPrize {
  int32 Type = 1; // 类型 1 图鉴 2 藏宝阁
  int32 Num = 2; // 数量
}
//玩家所有图鉴，上线或发生变化主动推
message S2CUserPhotoBook {
  repeated PhotoBook T = 1;
}
//图鉴解锁及升级
message C2SPhotoBookLevelUp {
  int32 Id = 1; //图鉴ID
}
message S2CPhotoBookLevelUp {
  int32 Tag = 1; //结果标志
  int32 Id = 2; //图鉴ID
  int32 L = 3; //操作后具等级
  int32 SL = 4; //操作后强化等级
}
//图鉴分解分解
message C2SPhotoBookDel {
}
message S2CPhotoBookDel {
  int32 Tag = 1; //结果标志
}

//领取图鉴收集奖励
message C2SPhotoBookPrize {
  int32 Type = 1; // 类型 1 图鉴；2 藏宝阁
  int32 Num = 2; // 领取数量对应的奖励
}
message S2CPhotoBookPrize {
  int32 Tag = 1;
  repeated PhotoBookPrize Prize = 2;
}

//图鉴强化
message C2SPhotoBookStrength {
  int32 Id = 1; //图鉴ID
  int32 Type = 2; //0:强化；1：一键强化
}
message S2CPhotoBookStrength {
  int32 Tag = 1; //结果标志
  int32 Id = 2; //图鉴ID
  int32 Type = 3; //0:强化；1：一键强化
  int32 SL = 4; //操作后具等级
}

//购买充值推荐礼包
message C2SBuyChargeGift {
  int32 Id = 1; //礼包ID
}
message S2CBuyChargeGift {
  int32 Tag = 1; //结果标志
  int32 Id = 2; //礼包ID
}
//已购买的推荐礼包
message S2CAllChargeGift {
  repeated int32 List = 1; //已购买的推荐礼包
}

message S2CVipService {
  string QQ = 1;
}

//阵法系统已引导
message C2SNewPlayerZF {
}

/*********************************新版宠物*********************************/
message Pet2 {
  string Id = 1; //全局唯一Id
  int32 IId = 2; //系统ID
  int32 L = 3; //等级
  int32 E = 4; //经验（升级进度条）
  int32 R = 5; //转生等级
  int32 ATalent = 6; //当前攻击资质
  int32 DTalent = 7; //当前防御资质
  int32 HTalent = 8; //当前血量资质
  int32 Grow = 9; //当前成长值（万倍）
  repeated PetSkill S = 10; //公共技能列表
  int32 B = 11; //出战顺序
  string N = 12; //玩家修改的昵称
  int32 A = 15; //攻击
  int32 D = 16; //防御
  int32 H = 17; //血量
  int32 IsNew = 18; //0 旧；1 新
  int64 TimeStamp = 19; //新宠物获取时间戳（秒）
  int32 MaxATalent = 20; //当前最大攻击资质
  int32 MaxDTalent = 21; //当前最大防御资质
  int32 MaxHTalent = 22; //当前最大血量资质
  int32 MaxGrow = 23; //当前最大成长值
  int32 Boundary = 24; //宠物当前炼妖阈值
  int32 Lock = 25; // 是否锁定 1 是
  int32 PetType = 27; // 宠物类型
  int32 Q = 28; // 宠物品质
  int64 Fv = 29; // 宠物战力 目前只用于服务端排序
  repeated ItemInfo RaiseUpItem = 30; // 宠物培养已使用的道具
  int32 Awaken = 31; // 宠物觉醒星耀等级
  int64 BaseFv = 32; // 宠物战力 客户端计算
  repeated string Equips = 33;//宠物穿戴的装备Id
  repeated int32 BdjjIds = 34; //宠物所在榜单竞技Id;客户端做缓存用,后端不做任何处理;
}

message AwakenPet2 {
  string petId = 1; //觉醒宠物
  int32 Awaken = 2; //觉醒等级
  repeated Pet2 Pets = 3; //觉醒消耗的宠物
  repeated ItemInfo Item = 4; //觉醒消耗的道具
}

// 新版
message PetSkill {
  int32 I = 1; //技能Id
  int32 L = 2; //技能等级
  int32 Lock = 3; //技能锁定 1 锁定
}

//所有宠物
message C2SAllPet2 {
}
message S2CAllPet2 {
  int32 Tag = 1;
  repeated Pet2 List = 2; //所有宠物
}

//宠物信息
message C2SPet2Info {
  string Id = 1; //全局唯一ID，字符串
}
message S2CPet2Info {
  int32 Tag = 1;
  repeated Pet2 Pet2 = 2; //宠物信息
}

//升级
message C2SPet2LevelUp {
  string Id = 1; //ID
  int32 ItemId = 2; // 道具Id
  uint32 ItemNum = 3; //使用数量
}
message S2CPet2LevelUp {
  int32 Tag = 1;
  Pet2 Pet2 = 2; //宠物信息
}

//提升资质 废弃
message C2SPet2TalentUp {
  string Id = 1; //ID
  int32 ItemId = 2; //道具Id
  int32 Type = 3; //提升资质类型，1攻击2防御3血量
  int32 Auto = 4; //自动购买 0 否；1 是
}
message S2CPet2TalentUp {
  int32 Tag = 1;
  int32 Type = 2; //提升资质类型，1攻击2防御3血量
  Pet2 Pet2 = 3;
}

//提升成长 废弃
message C2SPet2GrowUp {
  string Id = 1; //ID
  int32 ItemId = 2; //道具Id
  int32 Auto = 3; //自动购买 0 否；1 是
}
message S2CPet2GrowUp {
  int32 Tag = 1;
  Pet2 Pet2 = 2;
}

//洗练宠物 新版
message C2SPet2RaiseUp {
  string Id = 1; //ID
  int32 ItemId = 2; //道具Id
  int32 Auto = 3; //自动购买 0 否；1 是
}
message S2CPet2RaiseUp {
  int32 Tag = 1;
  Pet2 Pet2 = 2;
}

// 宠物吞噬
message C2SPet2Devour {
  string Id = 1; // 主宠唯一ID
  string Ids = 2; // 副宠ID1|ID2|ID3
  int32 ItemId = 3; // 神兽提品道具Id
}
message S2CPet2Devour {
  int32 Tag = 1;
  Pet2 Pet2 = 2;
  int32 Type = 3; // 有值代表提品
}

// 一键宠物吞噬
message C2SOneKeyPet2Devour {
  repeated DevourParam Params = 1;
  int32 IsPart = 2; // 1 表示本次一键吞噬只有部分宠物，需等待下次吞噬请求，合并结果后，一并回包
}
message S2COneKeyPet2Devour {
  int32 Tag = 1;
  repeated Pet2 Pets = 2;
}

message DevourParam {
  string MainId = 1; // 主宠ID
  repeated string Ids = 2; // 主宠对应得副宠ID数组
}

//锁定宠物 新版
message C2SPet2Lock {
  string Id = 1;
  int32 Lock = 2;
}
message S2CPet2Lock {
  int32 Tag = 1;
  Pet2 Pet2 = 2;
}

//放生 新版
message C2SPet2GiveUp {
  string Id = 1; //ID
}
message S2CPet2GiveUp {
  int32 Tag = 1;
  string Id = 2; //ID
  repeated ItemInfo ItemInfo = 3;
}

//批量放生 新版
message C2SBatchPet2GiveUp {
  repeated string Ids = 1; //ID
}
message S2CBatchPet2GiveUp {
  int32 Tag = 1;
  repeated string Ids = 2; //ID
  repeated ItemInfo ItemInfo = 3;
}

//炼妖 废弃
message C2SPet2Compose {
  string Id1 = 1; //主宠ID
  string Id2 = 2; //副宠ID
  int32 Protect = 3; //是否使用保护丹，0否，1是
  int32 Auto = 4; //是否自动购买
}
message S2CPet2Compose {
  int32 Tag = 1;
  string Id1 = 2; //主宠ID
  string Id2 = 3; //副宠ID
  Pet2 NewPet = 4; //新宠物数据
  int32 ADiff = 5; //攻击资质变更量
  int32 DDiff = 6; //防御资质变更量
  int32 HDiff = 7; //血量资质变更量
  int32 GDiff = 8; //成长值变更量
}

//转生/飞升 废弃
message C2SPet2Reborn {
  string Id = 1; //宠物id
}
message S2CPet2Reborn {
  int32 Tag = 1;
  string Id = 2; //宠物id
  Pet2 Pet2 = 3;
}

//宠物重置
message C2SPet2Reset {
  string Id = 1; //宠物id
}
message S2CPet2Reset {
  int32 Tag = 1;
  Pet2 Pet2 = 2;
  repeated ItemInfo ItemInfo = 3;
}

//宠物拆解
message C2SPet2UnDevour {
  string Id = 1; //宠物id
}
message S2CPet2UnDevour {
  int32 Tag = 1;
  Pet2 Pet2 = 2;
}

//修改名称 废弃
message C2SPet2Nick {
  string Id = 1; //ID
  string N = 2; //昵称
}
message S2CPet2Nick {
  int32 Tag = 1;
  string Id = 2; //ID
  string N = 3; //昵称
}

//出战
message C2SPet2BattlePos {
  string Id = 1; //ID
  int32 IId = 2;
  int32 Pos = 3; //出战顺序，0表示休息，123
}
message S2CPet2BattlePos {
  int32 Tag = 1;
  string Id = 2; //ID
  string RestId = 3; // 被顶替之后休息的伙伴ID
  int32 Pos = 4; //出战顺序，0表示休息，1234
}

//宠物技能锁定 新版
message C2SPet2SkillLock {
  string Id = 1;
  int32 SkillId = 2;
}
message S2CPet2SkillLock {
  int32 Tag = 1;
  Pet2 Pet2 = 3;
}

//打书
message C2SPet2SkillBook {
  string Id = 1; //宠物Id
  int32 ItemId = 2; //要使用的技能书ID
  int32 Auto = 3; //自动购买
}
message S2CPet2SkillBook {
  int32 Tag = 1;
  Pet2 NewPet = 2; //新宠物数据
  int32 newId = 3; // 新技能ID
}

// 技能回收
message C2SRetrieveSkill {
  string books = 1; // 技能书回收 id1:数量1|id1:数量1
}
message S2CRetrieveSkill {
  int32 Tag = 1;
}

//合成宠物卡
message C2SStickPet2 {
  int32 Id = 1; //要合成的伙伴ID
}
//激活新宠物
message S2CUnlockNewPet2 {
  int32 Tag = 1;
  repeated Pet2 Pet2 = 2; //激活的宠物数据
  int32 IsShow = 3; //是否展示动画 0展示；1不展示
}

//移除新宠物的标识
message C2SRemPet2Mark {
  string id = 1; //宠物全局唯一id
}
message S2CRemPet2Mark {
  int32 Tag = 1;
  string id = 2; //宠物全局唯一id
}

//宠物兑换 废弃
message C2SPet2Exchange {
  string id = 1; //宠物全局唯一id
  int32 iid = 2; //期望兑换的宠物Id
}
message S2CPet2Exchange {
  int32 Tag = 1;
  string Id = 2; //旧宠物id
  Pet2 Pet2 = 3;
}

message Pet2Skill {
  int32 Id = 1;
  string Name = 2;
  int32 Quality = 3;
  int32 SKType = 4;
  string Summary = 5;
  int32 AttrInc = 6;
  int32 ItemId = 7;
  int32 DropProb = 8;
  string RetrieveItem = 9;
}

message SysPet2 {
  int32 Id = 1;
  int32 Quality = 2;
  repeated Pet2Skill Skills = 3;
  int32 Show_Id = 4;
}

//获取随机宠物
message C2SGetRandSysPet2 {
  string Id = 1; //主宠Id
  int32 IsDefault = 2; //是否为默认系统宠物 0：不是；1：是
}
message S2CGetRandSysPet2 {
  int32 Tag = 1;
  SysPet2 SysPet2 = 2;
}

//获取背包里的宠物碎片
message C2SGetPet2Chip {
}
message S2CGetPet2Chip {
  int32 Tag = 1;
  repeated ItemData ItemData = 2; // 宠物碎片道具
}

//宠物觉醒
message C2SPetAwaken {
  string Id = 1; //主宠唯一Id
  string IdStr = 2; //副宠唯一Id 123|456
}
message S2CPetAwaken {
  int32 Tag = 1;
  Pet2 Pet2 = 3;
}

//宠物觉醒回退
message C2SPetAwakenBackPets {
  string Id = 1; //主宠唯一Id
}
message S2CPetAwakenBackPets {
  int32 Tag = 1;
  repeated Pet2 Pet2 = 3;
  repeated ItemInfo Items = 4;
}

//宠物觉醒回退
message C2SPetAwakenBack {
  string Id = 1; //主宠唯一Id
}
message S2CPetAwakenBack {
  int32 Tag = 1;
  Pet2 Pet2 = 3;
  repeated Pet2 Pets = 4;
  repeated ItemInfo Items = 5;
}

//宠物转换
message C2SPetExchange {
  string Id = 1; //主宠唯一Id
  int32 ItemId = 2; //道具Id 废弃
  int32 PetId = 3; //转换目标宠物ID
}
message S2CPetExchange {
  int32 Tag = 1;
  Pet2 Pet2 = 3;
}

//宠物进化
message C2SPetEvolution {
  string id = 1;
}
message S2CPetEvolution {
  int32 Tag = 1;
  Pet2 Pet2 = 3;
  string DelId = 4;
}


//-------------------仙宗争夺战活动数据--------------------------

// 仙宗争夺战活动数据
message DBSectFightInfo {
  repeated DBSectFightHurt SectFightHurt = 1; // 仙宗争夺战玩家伤害
  int32 Status = 2; // 当前阶段
  int64 First = 3; // 候选人
  int32 Fight1 = 4; // 宗主守擂战1结果
  int32 Fight2 = 5; // 宗主守擂战2结果
  int32 Fight3 = 6; // 宗主守擂战3结果
  int32 LeaderWin = 7; // 宗主胜利次数
  int32 ChallengerWin = 8; // 挑战者胜利次数
  int64 LeaderFv = 9; // 活动开始时，宗主的战力值
  SectFightReport FightReport = 10; // 战报
}
// 仙宗争夺战玩家伤害数据结构
message DBSectFightHurt {
  int64 UserId = 1;
  int64 Hurt = 2;
}

//-------------------宗门--------------------------

// 宗门信息
message Sect {
  int64 Id = 1; //随第一个加入宗门的玩家ID
  string Name = 2; //仙宗名称
  int32 ReName = 3; //是否改过名 0：没有 1：改过；宗主争夺战后，重置为0
  int32 Leader = 4; //仙宗宗主ID
  int32 LoseLeader = 5; //惜败宗主
  int32 ViceLeader = 6; //尊者
  repeated int32 Elders = 7; //长老
  repeated int32 Warrior = 8; //护法
  int32 ReceiveGift = 9; //现任宗主是否领取过宗主礼包 0：没有 1：领过；宗主争夺战后，重置为0
  int32 Level = 10;
  int64 Exp = 11; //声望
  string Note = 12; //仙宗公告 宗主编辑的
  int32 Reappointment = 13; //连任届数
  int32 Session = 14; //总届数
  Statue Statue = 15; // 雕像数据
  int32 Sid = 16; // 所在区服ID
  int64 Timestamp = 17; // 首任宗主上任时间戳，用于客户端活动预告
  int32 SymbolId = 18; //宗徽
  int32 ReSymbolId = 19; //是否改宗徽 0：没有 1：改过；宗主争夺战后，重置为0
  string World = 20;
}

// 雕像
message Statue {
  repeated IntAttr A = 1;
  repeated StrAttr B = 2;
}

// 获取宗门信息
message C2SSectInfo {
}
message S2CSectInfo {
  Sect Sect = 1;
}

// 修改宗门名称
message C2SSectReName {
  string NewName = 1; //宗门新名字
}
message S2CSectReName {
  int32 Tag = 1; //修改结果
  string NewName = 2; //宗门新名字
}

// 修改宗门公告
message C2SEditSectNote {
  string Note = 1; //宗门公告
}
message S2CEditSectNote {
  int32 Tag = 1; //修改结果
  string Note = 2;
}

// 修改宗门宗徽
message C2SSectSetSymbolId {
  int32 SymbolId = 1;
}
message S2CSectSetSymbolId {
  int32 Tag = 1; //修改结果
  int32 SymbolId = 2;
}

// 领取宗门等级奖励
message C2SRecvSectReward {
  int32 Level = 1; //待领取奖励的等级
}
message S2CRecvSectReward {
  int32 Tag = 1;
  string Reward = 2; //奖励
  string Level = 3; //领奖后的总领奖记录
}

// 膜拜宗主
message C2SWorship {
}
message S2CWorship {
  int32 Tag = 1;
}

// 享用贡品
message C2STribute {
}
message S2CTribute {
  int32 Tag = 1;
}

message SectMember {
  int32 Id = 1; // 玩家id
  string Nick = 2; // 玩家昵称
  int32 RoleId = 3; // 头像
  string FamilyName = 4; // 家族名称
  int64 FamilyFv = 5; // 家族战力
  int64 SectExp = 6; // 贡献
  int64 Fv = 7; // 战力
  int32 Job = 8; // 仙宗职位
  int32 Head = 9; //头像资源ID
  int32 HeadFrame = 10; //头像框资源ID
  int64 Prestige = 11; // 声望
  int32 Sid = 16; // 玩家所在区服ID
  int32 FSid = 17; // 家族所在区服ID 废弃
  int64 OfflineTime = 18; //离线时间
  int32 VipLv = 19; //vip等级
  string World = 20; //仙宗世界
  string FWorld = 21; //家族世界 废弃
  int32 HideVIP = 22; //Vip等级是否屏蔽  0正常显示  1屏蔽
}

// 加入仙宗
message C2SJoinSect {
}
message S2CJoinSect {
  int64 Tag = 1;
}

// 拉取仙宗所有成员，分页拉取
message C2SSectMembers {
  int32 Page = 1; // 当前请求页数
  int32 Size = 2; // 页大小
}
message S2CSectMembers {
  int32 Tag = 1;
  repeated SectMember members = 2;
  int32 Total = 3; // 总数量
  int32 Online = 4; // 在线数量
  int32 Page = 5; // 当前页数
}

// 拉取仙宗所有成员，分页拉取
message C2SSectMembers2 {
  int32 Page = 1; // 当前请求页数
  int32 Size = 2; // 页大小
}
message S2CSectMembers2 {
  int32 Tag = 1;
  repeated SectMember members = 2;
  int32 Total = 3; // 总数量  排除7
  int32 Online = 4; // 在线数量 排除7
  int32 Page = 5; // 当前页数
  repeated SectMember JobMembers = 6; //特殊的7个
}

// 拉取仙踪界面信息
message C2SSectMembersInfo {
}
message S2CSectMembersInfo {
  int32 Tag = 1;
  int32 Total = 2; // 总数量
  int32 Online = 3; // 在线数量
  int64 TotalFv = 4; //仙踪宗战力
  int32 SelfSectExp = 5; //自己仙踪贡献度
  int32 SectRank = 6; //连服内仙踪战力排行
}

// 解锁/升级仙宗仙术
message C2SLevelSectSkill {
  int32 SkillId = 1;
}
message S2CLevelSectSkill {
  int32 Tag = 1;
  repeated Skill SectSkills = 2; //升级后玩家的所有技能列表
}

// 升级仙宗仙术大师
message C2SLevelSectSkillMaster {
}
message S2CLevelSectSkillMaster {
  int32 Tag = 1;
  int32 Level = 2; //升级后玩家的仙术大师等级
}

// 挑战守护兽
message C2SSectChallengeBoss {
}
message S2CSectChallengeBoss {
  int32 Tag = 1;
  int32 IsWin = 2; // 是否打死守护兽 1 打死
}

// 挑战宗主
message C2SSectChallengeLeader {
}
message S2CSectChallengeLeader {
  int32 Tag = 1;
}

//仙宗战报
message SectFightReport {
  int64 UserId1 = 1; //战斗用户
  int64 UserId2 = 2; //战斗用户
  repeated SectFightReportItem Items = 3;
}

message SectFightReportItem {
  int32 Win = 1; //1 userid1 胜利，其他 userid2 胜利
  S2CBattlefieldReport Report = 3; //战报
}

message SectFightReports {
  int64 UserId1 = 1; //战斗用户
  int64 UserId2 = 2; //战斗用户
  int32 Win = 3;
}

// 获取战报
message C2SSectFightReports {
}
message S2CSectFightReports {
  int32 Tag = 1;
  repeated SectFightReports SectFightReports = 2;
}

// 播放战报
message C2SSectPlayerFightReport {
  int32 Index = 1; // 战报列表索引
}
message S2CSectPlayerFightReport {
  int32 Tag = 1;
}

message SectBossFight {
  int64 UserId = 1;
  string Nick = 2;
  int64 Fv = 3;
  int32 RoleId = 4; // 种族Id1-6
  int32 Level = 5;
  int64 HurtVal = 6;
  int32 Head = 7; //头像资源ID
  int32 HeadFrame = 8; //头像框资源ID
  int32 Sid = 12; // 所在区服ID
  string World = 13; //玩家所在世界
}

// 伤害排行
message C2SSectLeaderFightRank {
}
message S2CSectLeaderFightRank {
  int32 Tag = 1;
  repeated SectBossFight SectBossFightArr = 2;
  int32 MyRank = 3;
}

// 我的伤害排行
message C2SSectLeaderFightMyRank {
}
message S2CSectLeaderFightMyRank {
  int32 Tag = 1;
  int32 MyRank = 2;
  int64 MyHurtVal = 3;
}

// 下次活动开启时间
message C2SSectActStartTime {
}
message S2CSectActStartTime {
  int32 Tag = 1;
  int64 StartTime = 2;
  int64 FirstOverTime = 3;
  int64 SecondStartTime = 4;
  int64 OverTime = 5;
}

message JobInfo {
  int64 UserId = 1;
  string Nick = 2;
  int64 Fv = 3;
  int64 Job = 4;
  int32 RoleId = 5; // 种族Id1-6
  int32 Level = 6;
  int32 Rank = 7;
  int32 Head = 8; //头像资源ID
  int32 HeadFrame = 9; //头像框资源ID
  int32 Sid = 12; //
  string World = 13;
}

message DbJobInfo {
  repeated JobInfo SectRank = 1;
}

// 职位排行
message C2SSectJobRank {
}
message S2CSectJobRank {
  int32 Tag = 1;
  repeated JobInfo JobRank = 2;
  int32 MyRank = 3; // 1-20,0代表未上榜
}

// 候选人信息
message C2SSectCandidate {
}
message S2CSectCandidate {
  repeated IntAttr A = 1;
  repeated StrAttr B = 2;
}

message SectGodAnimalInfo {
  int32 level = 1; // 仙宗神兽等级
  int32 Num = 2; // 魔障层数
  repeated int32 ActiveSkills = 3; // 主动技能 技能表
  repeated string PassiveSkills = 4; // 被动技能 增幅表
  int32 WinNum = 5; // 通关次数
}

// 仙宗神兽信息
message C2SSectGodAnimalInfo {
}
message S2CSectGodAnimalInfo {
  int32 Tag = 1;
  SectGodAnimalInfo SectGodAnimalInfo = 2; // 仙宗神兽信息
}

// 玩家神兽试炼数据
message GodAnimalPlayerData {
  int64 Id = 1; // 玩家ID
  int32 Num = 2; // 魔障层数
  repeated GodAnimalInvite Invite = 3; // 邀请玩家
}

// 玩家神兽试炼个人数据
message C2SSectGodAnimalData {
}
message S2CSectGodAnimalData {
  GodAnimalPlayerData GodAnimalPlayerData = 1;
}

message GodAnimalPassRecord {
  int64 UserId = 2; // 玩家ID
  string Nick = 3; // 玩家昵称
  int32 RaceId = 4; // 玩家种族ID
  int64 Fv = 5; // 玩家战力
  int32 Num = 6; // 层数
  int32 PassNum = 7; // 当前层通关人数
  int32 Head = 8; //头像资源ID
  int32 HeadFrame = 9; //头像框资源ID
  int32 Sid = 12; // 所在区服ID
  string World = 13; //玩家所在世界
}

// 当前层玩家首通数据
message C2SGodAnimalPassData {
}
message S2CGodAnimalPassData {
  int32 Tag = 1;
  GodAnimalPassRecord GodAnimalPassRecord = 2;
}

// 各层玩家首通记录
message C2SGodAnimalPassRecord {
}
message S2CGodAnimalPassRecord {
  repeated GodAnimalPassRecord GodAnimalPassRecord = 1;
}

// 挑战神兽
message C2SChallengeGodAnimal {
}
message S2CChallengeGodAnimal {
  int32 Tag = 1;
  int32 IsWin = 2; // 是否打死神兽 1 打死
}

// 神兽试炼玩家通关记录
message GodAnimalPassData {
  int32 Num = 1; // 层数
  repeated int64 UserId = 2; // 通关玩家ID
}

message GodAnimalInvite {
  int64 UserId = 1;
  repeated IntAttr A = 2;
  repeated StrAttr B = 3;
}

// 神兽试炼组队邀请
message C2SGodAnimalInvite {
}
message S2CGodAnimalInvite {
  int32 Tag = 1;
  repeated GodAnimalInvite GodAnimalInvite = 2;
}

// 提升仙宗声望等级
message C2SSectPrestigeLevelUp {
}
message S2CSectPrestigeLevelUp {
  int32 Tag = 1;
}

// 领取仙宗声望奖励
message C2SSectPrestigeRecv {
}
message S2CSectPrestigeRecv {
  int32 Tag = 1;
}

// 仙山争夺战数据存储
message DBSectIMInfo {
  repeated DBMountain Mountains = 1; // 各个仙山玩家信息
  repeated DBFightCD FightCD = 2; // 各个玩家挑战CD时间戳
  repeated DBFailRecord FailRecord = 3; // 各个玩家挑战失败标记
}
// 先占争夺战仙山中的玩家信息
message DBMountain {
  int32 Id = 1;
  repeated DBIMPlayer players = 2;
}
// 仙山争夺战战败标记
message DBFightCD {
  int64 UserId = 1;
  int64 Timestamp = 2;
}
// 挑战失败总记录
message DBFailRecord {
  int64 UserId = 1; // 玩家ID
  repeated DBFailInfo FailInfo = 2;
}
// 挑战失败记录
message DBFailInfo {
  int32 Id = 1; // 仙山ID
  int32 Pos = 2; // 失败位置
}
// 仙山争夺战玩家数据
message DBIMPlayer {
  int64 UserId = 1; // ID
  string Nick = 2; // 昵称
  int64 RoleId = 3;
  int64 Sid = 4; // 宗门区服Id
  int64 SectId = 5; // 宗门ID
  string SectName = 6; // 宗门名称
  int32 Pos = 7; // 山头索引 1-7
  int32 Realm = 8; // 境界
  int64 Hp = 9;
  int64 HpMax = 10;
  int64 Fv = 11;
  int64 Timestamp = 12; // 领奖CD
  repeated ItemInfo Reward = 13;
  int64 Prestige = 14;
  repeated ItemInfo TotalReward = 15;
  int64 TotalPrestige = 16;
  int64 AreaId = 17; //玩家区服Id
  string World = 18; //玩家所在世界
  string SWorld = 19; //玩家宗门所在世界
}
// 仙山争夺战玩家信息
message IMPlayerInfo {
  int64 UserId = 1; // ID
  string Nick = 2; // 昵称
  int64 RoleId = 3;
  int64 Sid = 4; // 服务器ID
  int64 SectId = 5; // 宗门ID
  string SectName = 6; // 宗门名称
  int32 Pos = 7; // 山头索引 1-7
  int32 Realm = 8; // 境界
  int32 SectAdd = 9; // 宗门加成
  int64 Hp = 10;
  int64 HpMax = 11;
  int64 Fv = 12;
  int64 Level = 13;
  int64 AreaId = 17; //玩家区服Id
  string World = 18; //玩家仙宗所在世界
  string SWorld = 19;
}
// 获取我在仙山中的位置
message C2SSectIMMyPos {
}
message S2CSectImMyPos {
  int32 Tag = 1;
  int32 Id = 2;
  repeated ItemInfo Reward = 4; // 我累计的奖励
  int64 FightTimestamp = 5; // 战斗CD
  int64 Timestamp = 6; // 领奖CD
  int32 SectAdd = 7;
  int32 Pos = 8;
}
// 获取当前山上所有山头的玩家数据
message C2SGetAllIMInfo {
  int32 Id = 1;
}
message S2CGetAllIMInfo {
  int32 Tag = 1;
  int32 Id = 2;
  repeated IMPlayerInfo Players = 3; // 当前仙山内的玩家
  repeated int32 Fail = 9; // 是否挑战失败 1：是，2：否
}
// 抢占仙山山头
message C2SSectIMSeize {
  int32 Id = 1;
  int32 Pos = 2; // 山头索引 1-7
  string SectName = 3; // 仙宗名称
}
message S2CSectIMSeize {
  int32 Tag = 1;
  int32 Id = 2;
  int32 Pos = 3;
  int32 SectAdd = 4;
  int64 Timestamp = 5; // 领奖时间戳
  int64 FightTimestamp = 6; // 下次挑战CD
}
// 通知被抢玩家
message S2CSectIMSeizeNotice {
  string Nick = 1;
}
// 发送奖励
message S2CSectIMSeizeReward {
  int32 Tag = 1;
  int32 Id = 2;
  int32 Pos = 3;
  int64 Timestamp = 4; // 领奖时间戳
  repeated ItemInfo Reward = 5; // 奖励
}
// 放弃仙山山头
message C2SSectIMGiveUp {
  int32 Id = 1;
  int32 Pos = 2; // 山头索引 0-6
}
message S2CSectIMGiveUp {
  int32 Tag = 1;
}
// 清除仙山挑战CD
message C2SClearIMFightCD {
}
message S2CClearIMFightCD {
  int32 Tag = 1;
}
// 仙山人员发生变化
message S2CIMPlayerChange {
  int32 Id = 1;
}

// 仙宗灵兽园数据结构
message SectPastureData {
  int32 PetGroupId = 1; // 当前宠物库ID
  int32 DropGroupId = 2; // 当前掉落库ID
  int64 GodAnimalRageTimestamp = 3; // 神兽之怒时间戳
  int64 CollapseTimestamp = 4; // 挖塌兽穴时间戳
  repeated GodAnimalRageFightTimes GodAnimalRageFightTimes = 5; // 玩家神兽之怒挑战次数
  repeated PasturePet MyPetList = 6; // 玩家搜索到的宠物列表
  repeated PastureBuff MyBuffList = 7; // 玩家搜索到的buff列表
  int32 GodAnimalRage1 = 8; // 神兽之怒第一次刷新 弃用
  int32 GodAnimalRage2 = 9; // 神兽之怒第二次刷新 弃用
  repeated SearchRecord SearchRecord = 10; // 搜寻记录
  repeated PasturePoint PasturePoint = 11; // 可用的刷怪点
  repeated int32 GodAnimalRage = 12; // 神兽之怒刷新
}

// 仙宗灵兽园抓捕记录
message BestPetRecord {
  int64 UserId = 1;
  string Nick = 2;
  int64 AreaId = 3;
  int32 PetId = 4;
  int32 Rarity = 5;
  int32 Quality = 6;
  int32 Type = 7;
  int32 Module = 8; // 1 灵兽园，2 宠物合成
  string World = 9;
}

message PasturePoint {
  int32 UserId = 1;
  int32 PointX = 2;
  int32 PointY = 3;
}

// 仙宗灵兽园玩家挑战次数
message GodAnimalRageFightTimes {
  int64 UserId = 1; // 玩家Id
  int32 Times = 2; // 挑战次数
  int64 Timestamp = 3; // 挑战CD
}

message PasturePet {
  int64 UserId = 1; // 玩家Id
  int32 Id = 2; // 灵兽园宠物表序号
  int32 PetId = 3; // 玩家搜寻的宠物列表
  int32 PointX = 4;
  int32 PointY = 5;
  int32 Event = 6;
  int32 IsFight = 7; // 是否正在战斗
  int64 Timestamp = 8; // 宠物过期时间戳
}

message PastureBuff {
  int64 UserId = 1; // 玩家Id
  int32 BuffId = 2; // 玩家搜寻的BUFF列表
  int64 Timestamp = 3;
  int32 Flag = 4; // 0 新增；1 删除；
}

message SearchRecord {
  int64 UserId = 1;
  int32 ItemId = 2;
  int32 PetId = 3;
  int32 Event = 4;
}

message C2SGroupInfo {
}
message S2CGroupInfo {
  int32 GroupId = 5; // 库Id
  int64 GroupTimestamp = 6; // 库Id更新时间
}

// 进入灵兽园
message C2SEnterAnimalPark {
}
message S2CEnterAnimalPark {
  int32 Tag = 1;
  int64 GodAnimalRageTimestamp = 2; // 神兽之怒时间戳
  int64 CollapseTimestamp = 3; // 挖塌兽穴事件时间戳
  int32 GodAnimalRageFightTimes = 4; // 神兽之怒挑战次数
  repeated SearchRecord SearchRecord = 5; // 搜寻记录
  repeated PasturePet Pet = 6; // 搜寻宠物结果
  repeated PastureBuff Buff = 7; // 搜寻BUFF结果
  int64 GodAnimalRageFightTimestamp = 8; // 神兽之怒挑战时间戳
}
// 离开灵兽园
message C2SLeaveAnimalPark {
}
message S2CLeaveAnimalPark {
  int32 Tag = 1;
}
// 自动搜寻
message C2SAutoSearch {
  repeated int32 ItemId = 1;
}
message S2CAutoSearch {
  int32 Tag = 1;
}
// 宠物搜寻
message C2SSearchPet {
  int32 ItemId = 1;
}
message S2CSearchPet {
  int32 Tag = 1;
  PasturePet Pet = 2; // 新增搜寻宠物结果
  PastureBuff Buff = 3; // 新增搜寻BUFF结果
}
//新增搜寻记录
message S2CSearchRecord {
  SearchRecord SearchRecord = 1;
}
// 神兽之怒CD更新
message S2CGodAnimalTimestamp {
  int64 Timestamp = 1; // 神兽之怒CD
}
// 挖塌事件通知
message S2CCollapseNotice {
  int64 Timestamp = 1; // 挖塌事件CD
}
// 玩家登录后，推送灵兽园BUFF，供客户端显示在BUFF栏，此数据需要保存，玩家进入灵兽园场景后，需要展示
message S2CPushAnimalParkBuff {
  repeated PastureBuff Buff = 1;
}
// 待删除的怪物
message DelPets {
  int32 PetId = 3; // 已被消灭的宠物Id
  int32 PetX = 4; // 已被消灭的宠物X坐标点
  int32 PetY = 5; // 已被消灭的宠物Y坐标点
}
// 灵兽园战斗，结果分为战斗和抓捕两种
message C2SAnimalParkGO {
  int32 PetId = 1;
  int32 X = 2;
  int32 Y = 3;
}
message S2CAnimalParkGO {
  int32 Tag = 1;
  int32 Times = 2; // 神兽之怒次数
  repeated DelPets DelPets = 3; // 待删除的怪物
}
// 抓捕结果
message S2CAnimalParkCatch {
  int32 Tag = 1;
  int32 PetId = 2;
  repeated ItemData Drop = 3;
}
// 抓捕结果Tips
message S2CAnimalParkCatchTips {
  Pet2 Pet2 = 1; // 抓捕宠物信息
  int64 UserId = 2;
  string Nick = 3;
  int64 AreaId = 4;
  string World = 5;
}

// 极品宠物获取记录
message C2SBestPetRecord {
}
message S2CBestPetRecord {
  int32 Tag = 1;
  repeated BestPetRecord BestPetRecord = 2;
}

// 挑战BOSS
message C2SFightBoss {
}
message S2CFightBoss {
  int32 Tag = 1;
  int64 GodAnimalRageFightTimestamp = 2; // 神兽之怒事件时间戳
  int64 Timestamp = 3; // 挑战CD时间戳
}

// 清除挑战BOSS CD
message C2SFightBossClearCD {
}
message S2CFightBossClearCD {
  int32 Tag = 1;
  int64 Timestamp = 2; // 挑战CD时间戳
}

//========================================跨服灵兽园============================================//
// 进入跨服灵兽园
message C2SEnterCrossPasture {
}
message S2CEnterCrossPasture {
  int32 Tag = 1;
}

// 离开跨服灵兽园
message C2SLeaveCrossPasture {
}
message S2CLeaveCrossPasture {
  int32 Tag = 1;
}

// 捕兽夹数据结构
message CrossPastureTrap {
  int32 ItemId = 1; // 捕兽夹道具Id
  int32 PetId = 2; // 跨服灵兽园宠物表中的序号Id
  int64 Wait = 3; // 等待倒计时
  int32 X = 4; // 捕兽夹坐标点
  int32 Y = 5; // 捕兽夹坐标点
  int64 Expire = 6; // 过期时间戳 清理不活跃的玩家数据
}
// 玩家捕兽点数据结构
message CrossPastureData {
  int64 UserId = 1;
  repeated CrossPastureTrap Traps = 2;
}

// 进入灵兽园后，推送玩家捕兽点的信息
message S2CCrossPastureTrapList {
  int32 Tag = 1;
  repeated CrossPastureTrap TrapList = 2;
}

// 使用捕兽夹
message C2SUseTrap {
  int32 ItemId = 1; // 道具Id
}
message S2CUseTrap {
  int32 Tag = 1;
  CrossPastureTrap Trap = 2; // 更新新增的捕兽夹或者捕获宠物的捕兽夹
}

// 捕捉宠物
message C2SCatchCrossPet {
  int32 PetId = 1; // 跨服灵兽园宠物表中的序号Id
  int32 X = 2; // 捕兽夹坐标点
  int32 Y = 3; // 捕兽夹坐标点
}
message S2CCatchCrossPet {
  int32 Tag = 1;
  int32 PetId = 2;
  repeated ItemData Drop = 3;
  CrossPastureTrap Trap = 4; // 更新消失的捕兽夹
}

// 通知客户端清理过期的捕兽夹或者宠物
message S2CDelExpireTraps {
  int32 Tag = 1;
  repeated CrossPastureTrap Traps = 2; // 更新消失的捕兽夹
}

message CatchRecord {
  int64 UserId = 1;
  string Nick = 2;
  int64 AreaId = 3; //区ID
  int32 PetId = 4; //跨服灵兽园宠物表序号id
  string World = 5;
}

message C2SCatchRecord {
}
message S2CCatchRecord {
  int32 Tag = 1;
  repeated CatchRecord Records = 2;
}

// 挑战跨服灵兽园BOSS
message C2SFightSectCrossBoss {
}
message S2CFightSectCrossBoss {
  int32 Tag = 1;
}

// 排行榜数据结构
message SectCrossBossRankItem {
  int32 Rank = 1;
  int64 UserId = 2;
  string Nick = 3;
  int64 AreaId = 4; //区ID
  int32 ShowHead = 5; //头像
  int32 ShowHeadFrame = 6; //头像框
  int32 Vip = 7;
  int32 FamilyAreaId = 8;
  string Family = 9;
  string SectName = 10;
  int64 HurtVal = 11;
  int64 SectAreaId = 12; //仙宗区id
  string World = 13; //玩家所在世界
  string SWorld = 14; //仙宗所在世界
  int32 HideVIP = 15; //Vip等级是否屏蔽  0正常显示  1屏蔽
  int64 Fv = 16; //玩家战力
}

// 获取跨服灵兽园排行榜
message C2SSectCrossBossRank {
}
message S2CSectCrossBossRank {
  int32 Tag = 1;
  repeated SectCrossBossRankItem PersonalRank = 2;
  repeated SectCrossBossRankItem SectRank = 3;
}

//BOSS掉落宝箱数据结构
message SectCrossBossBox {
  int32 ItemId = 1; // 宝箱Id
  int32 X = 2;
  int32 Y = 3;
  int64 UserId = 4; // 当前正在开启的玩家
  int64 Timestamp = 5; // 开启宝箱时间戳
  int64 MonsterId = 6; // 宝箱在场景中刷新的怪物id
}
// 获取boss掉落的宝箱列表
message C2SSectCrossBossBox {
}
message S2CSectCrossBossBox {
  int32 Tag = 1;
  repeated SectCrossBossBox Boxes = 2;
}

// 玩家进度条数据结构
message PlayerProgressBar {
  int64 UserId = 1;
  int32 Type = 2; // 类型 2 宝箱 5 可抢夺宠物
  int32 X = 3;
  int32 Y = 4;
  int64 Timestamp = 5;
  int32 MonsterId = 6; // 宝箱Id or 可抢夺的宠物Id
}
message S2CPlayerProgressBar {
  int32 Tag = 1;
  PlayerProgressBar PlayerProgressBar = 2;
}

// 玩家开始开启宝箱
message C2SOpenBoxTimestamp {
  int32 BoxId = 1; // 宝箱对应的道具Id
  int32 X = 2;
  int32 Y = 3;
  int64 MonsterId = 4; // 宝箱在场景中的显示的怪物Id
}
message S2COpenBoxTimestamp {
  int32 Tag = 1;
}

// 玩家领取宝箱奖励
message C2SReceiveBoxReward {
  int32 BoxId = 1; // 宝箱对应的道具Id
  int32 X = 2;
  int32 Y = 3;
  int64 MonsterId = 4; // 宝箱在场景中的显示的怪物Id
}
message S2CReceiveBoxReward {
  int32 Tag = 1;
}

// 挑战正在开箱子的玩家
message C2SSectCrossFightPVP {
  int64 UserId = 1; //被挑战玩家Id
}
message S2CSectCrossFightPVP {
  int32 Tag = 1;
}

// 玩家挑战BOSS次数
message C2SFightBossTimes {
  int32 ActId = 1;
}
message S2CFightBossTimes {
  int32 Tag = 1;
  int32 Times = 2;
  int64 Timestamp = 3;
}

// 清除挑战BOSS CD
message C2SFightCrossBossClearCD {
  int32 ActId = 1;
}
message S2CFightCrossBossClearCD {
  int32 Tag = 1;
  int64 Timestamp = 2; // 挑战CD时间戳
}

// 进度条中断
message C2SProgressBarBreak {
}
message S2CProgressBarBreak {
  int32 Tag = 1;
  int64 UserId = 2; // 中断的玩家Id
}

// 可抢夺宠物数据结构
message SectCrossSeizePet {
  int32 PetId = 1; // 跨服灵兽园宠物表中的序号Id
  int32 X = 2; // 宠物坐标点
  int32 Y = 3; // 宠物坐标点
  int64 UserId = 4; // 当前归属玩家
  int64 Timestamp = 5; // 进度条时间戳
  int64 AreaId = 6;
  string Nick = 7;
  int64 Fv = 8;
  int32 IsSeize = 9; //当前宠物是否是抢夺来的
  int64 ReleaseTime = 10; // 释放宠物时间戳
  int64 MonsterId = 11;
  string World = 12;
}

// 推送场景内可抢夺的宠物数据
message S2CSectCrossSeizePets {
  int32 Tag = 1;
  repeated SectCrossSeizePet pets = 2;
}

// 推送可选择的抢夺宠物
message S2CSeizePetCanChoice {
  int32 Tag = 1;
  repeated SectCrossSeizePet pets = 2;
}

// 选择保留的宠物
message C2SSeizePetChoice {
  int32 PetId = 1; // 跨服灵兽园宠物表中的序号Id
  int32 X = 2; // 宠物坐标点
  int32 Y = 3; // 宠物坐标点
}
message S2CSeizePetChoice {
  int32 Tag = 1;
}

// 开始拾取宠物
message C2SPickUpPetStart {
  int32 PetId = 1; // 跨服灵兽园宠物表中的序号Id
  int32 X = 2; // 宠物坐标点
  int32 Y = 3; // 宠物坐标点
}
message S2CPickUpPetStart {
  int32 Tag = 1;
}

// 拾取宠物
message C2SPickUpPetEnd {
  int32 PetId = 1; // 跨服灵兽园宠物表中的序号Id
  int32 X = 2; // 宠物坐标点
  int32 Y = 3; // 宠物坐标点
}
message S2CPickUpPetEnd {
  int32 Tag = 1;
}

message C2SAutoCatch {
  repeated int32 ItemId = 1;
}
message S2CAutoCatch {
  int32 Tag = 1;
}

// 抢夺记录
message SeizeRecord {
  int64 UserId = 1;
  string Nick = 2;
  int64 AreaId = 3; //区ID
  int32 PetId = 4; //跨服灵兽园宠物表序号id
  // 被抢夺玩家数据, 如果没值，则代表直接拾取
  int64 TagUserId = 5;
  string TagNick = 6;
  int64 TagAreaId = 7; //区ID
  string World = 8;
  string TagWorld = 9;
}

message C2SSeizeRecord {
}
message S2CSeizeRecord {
  int32 Tag = 1;
  repeated SeizeRecord Records = 2;
}

// 捕兽夹捕获极品宠物推送客户端弹框
message S2CTrapPet {
  int32 Tag = 1;
  int32 PetId = 2; //宠物库序号Id
}

//-------------------家族--------------------------
// 家族（仅作为数据库存储）
message DBFamily {
  string Id = 1; //家族ID
  string Name = 2; //家族名称
  int32 Level = 3; //家族等级
  int32 Exp = 4; //当前繁荣度（经验）
  repeated DBFamilyMember Members = 5; //所有成员
  int64 AccuseEndTime = 6; //弹劾结束时间，未弹劾为0
  int32 Sid = 7; //家族显示区ID
  repeated DBFamilyApply Apply = 8; //申请成员
  int32 Lock = 9; //参加领地战被锁定，不能进行人员变更
  repeated FamilyTotemPet TotemPets = 10; //家族成员的外援宠物
  int32 SymbolId = 11; //徽记id
  int64 NextChangeNameTime = 12; //上一次家族改名时间戳
  int32 AutoAgree = 13; //是否自动同意家族申请
  int64 AutoAgreeFv = 14; //自动同意家族申请的战力值
  int32 HaloId = 15; //正在使用的光环id
  int32 JJCScore = 16; // 家族竞技积分
  int64 JJCScoreUpdateTime = 17; // 家族竞技积分更新时间
  string World = 18;
}

//家族成员的外援宠物
message FamilyTotemPet {
  int64 UserId = 1;
  string PetId = 2; //宠物唯一id
  int32 PetIId = 3; //宠物id
  int32 Quality = 4; //当前品质
  int64 UseUserId = 5; //当前被谁上阵
  int32 TotemId = 6; //被上阵的图腾
  int32 PetType = 7; //宠物变异
  string World = 8; //世界简称
  int32 PetAwaken = 9; //宠物觉醒
  repeated TotemUseUsers UseUsers = 11; // 使用当前宠物的玩家Id
}

message TotemUseUsers {
  int64 UseUserId = 1; //当前被谁上阵
  int32 TotemId = 2; //被上阵的图腾
}

//家族申请列表
message DBFamilyApply {
  int64 Id = 1; // 玩家ID
  int64 Timestamp = 2; //过期时间戳
  int32 RoleId = 3; //角色ID
  int64 FV = 4; //战力
  string Nick = 5; //玩家昵称
  int32 Head = 6; //头像资源ID
  int32 HeadFrame = 7; //头像框资源ID
  int32 Sid = 8; // 所在区服ID
  string World = 9;
}

//家族成员（仅作为数据库存储）
message DBFamilyMember {
  int64 Id = 1; //玩家ID
  int32 Pos = 2; //职位，10成员，20族卫，30族长
  int32 Exp = 4; //本周贡献繁荣度
  int32 Accuse = 5; //是否参与弹劾，0否1是
  repeated int64 JJCMember = 6; // 队员
  int32 JJCStar = 7; // 家族竞技排位分
}

//家族列表数据（发给前端）
message FamilyListInfo {
  string Id = 1; //家族ID
  string Name = 2; //家族名称
  int32 Level = 3; //家族等级
  int32 MemberCount = 4; //当前人数
  string LeaderNick = 5; //族长昵称
  int32 LeaderServerId = 6; //族长区服ID
  int64 FightValue = 7; //家族总战力1
  int32 IsApply = 8; // 是否加入家族 0 否；1 是
  int32 Sid = 12; // 家族所在区服ID
  string World = 13;
}
//家族成员（发给前端）
message FamilyMember {
  int64 Id = 1; //玩家ID
  int32 Pos = 2; //职位，10成员，20族卫，30族长
  int32 Exp = 4; //本周贡献繁荣度
  int32 Accuse = 5; //是否参与弹劾，0否1是
  int32 RoleId = 6; //角色ID
  int64 FV = 7; //战力
  int64 OfflineTime = 8; //离线时间点（秒级时间戳，不是离线时长）
  string Nick = 9; //玩家昵称
  int32 Head = 10; //头像资源ID
  int32 HeadFrame = 11; //头像框资源ID
  int32 Sid = 12; // 所在区服ID
  int32 VipLevel = 13; //vip
  string World = 14; //世界
  int32 HideVIP = 15; //Vip等级是否屏蔽  0正常显示  1屏蔽
}

// 拉取自己家族数据
message C2SFamilyInfo {
  //值为1:宠物图腾拉取，服务器回包tag必为0
  int32 FuncType = 1;
}
message S2CFamilyInfo {
  int32 Tag = 1; //结果
  string Id = 2; //家族ID
  string Name = 3; //家族名称
  int32 Level = 4; //家族等级
  int32 Exp = 5; //当前繁荣度（经验）
  repeated FamilyMember Members = 6; //所有成员
  int64 AccuseEndTime = 7; //弹劾结束时间，未弹劾为0
  repeated DBFamilyApply Apply = 8; //申请列表
  int32 Sid = 12; // 所在区服ID
  repeated FamilyTotemPet TotemPets = 13; //家族成员的外援宠物
  int32 FuncType = 14;
  int32 SymbolId = 15;
  int64 NextChangeNameTime = 16;
  int32 AutoAgree = 17; //是否自动同意家族申请
  int64 AutoAgreeFv = 18; //自动同意家族申请的战力值
  int32 HaloId = 19; //正在使用的光环id
  string World = 20;
}

// 拉取本服所有家族数据，分页拉取
message C2SFamilyList {
  int32 Page = 1; // 当前请求页数
  int32 NotFull = 2; //1-只查看未满员家族
  int32 NumPerPage = 3; //每页条数
}
message S2CFamilyList {
  repeated FamilyListInfo FamilyListInfo = 1;
  int32 Page = 2; // 当前请求页数
  int32 Total = 3; //家族总数
  int32 NotFull = 4; //1-只查看未满员家族
  int32 NumPerPage = 5; //每页条数
}

// 创建家族
message C2SFamilyCreate {
  string NewName = 1; //家族名字
  int32 Sid = 2; //所在区服ID 废弃
  int32 SymbolId = 3; //徽记id
}
message S2CFamilyCreate {
  int32 Tag = 1; //结果
  S2CFamilyInfo Info = 2; //创建后的家族数据
}

// 申请加入
message C2SApplyJoin {
  string Id = 1; //要申请的家族Id，传空字符串表示快速申请
}
message S2CApplyJoin {
  int32 Tag = 1; //结果
}

// 审核加入
message C2SAgreeJoin {
  int64 Id = 1; //待审核玩家ID, 如果id为0, 则为一键拒绝
  int32 State = 2; // 1 同意；2 拒绝
}
message S2CAgreeJoin {
  int32 Tag = 1; //结果
}

// 加入家族
message C2SFamilyJoin {
  string Id = 1; //要加入的家族Id，传空字符串表示快速加入
}
message S2CFamilyJoin {
  int32 Tag = 1; //结果
  S2CFamilyInfo Info = 2; //加入后的家族数据
}

// 退出家族
message C2SFamilyLeave {
}
message S2CFamilyLeave {
  int32 Tag = 1; //结果
}

// 解散家族
message C2SFamilyDel {
}
//自己家族解散时推送
message S2CFamilyDel {
  int32 Tag = 1; //结果
}

// 升降职、转让族长、开除
message C2SFamilyChangePos {
  int64 Id = 1; //目标玩家ID，若为转让族长，则是接受转让的玩家ID
  int32 Pos = 2; //更改后的职位，0开除，10成员，20族卫，30族长
}
message S2CFamilyChangePos {
  int32 Tag = 1; //结果
  int64 Id = 2; //目标玩家ID，若为转让族长，则是接受转让的玩家ID
  int32 Pos = 3; //更改后的职位，0开除，10成员，20族卫，30族长
}
//自己被开除时发消息
message S2CFamilyGetOut {
}

// 弹劾族长
message C2SFamilyAccuse {
}
message S2CFamilyAccuse {
  int32 Tag = 1; //结果
  int64 AccuseEndTime = 6; //弹劾结束时间，未弹劾为0
}

// 获取自己领取的等级奖励
message C2SFamilyLevelPrizeInfo {
}
message S2CFamilyLevelPrizeInfo {
  repeated int32 GetLevelPrize = 1; //已领取的等级奖励
}

// 领取家族等级奖励
message C2SFamilyGetLevelPrize {
  int32 Level = 1; //要领取的奖励等级
}
message S2CFamilyGetLevelPrize {
  int32 Tag = 1; //结果
  repeated int32 GetLevelPrize = 2; //领取后，已领取的等级奖励
}

// 家族捐献
message C2SFamilyDonate {
  int32 ItemId = 1; //要捐献的道具ID
}
message S2CFamilyDonate {
  int32 Tag = 1; //结果
  int32 FamilyExp = 2; //捐献后家族当前繁荣度
  int32 SelfExp = 3; //捐献后本人本周贡献繁荣度
}

// 家族捐献剩余次数
message C2SFamilyDonateRemainTimes {
}
message S2CFamilyDonateRemainTimes {
  int32 Tag = 1; //结果
  repeated DonateRemainTimes DonateRemainTimes = 2;
}
message DonateRemainTimes {
  int32 ItemId = 1; //捐献道具
  int32 RemainTimes = 2; //剩余次数
}

//家族改名
message C2SFamilyChangeName {
  string FamilyName = 1;
}
message S2CFamilyChangeName {
  int32 Tag = 1; //结果
  string FamilyName = 2;
  int64 NextChangeNameTime = 3; //下一次可改名时间戳
}
//家族改徽记
message C2SFamilyChangeSymbol {
  int32 SymbolId = 1;
}
message S2CFamilyChangeSymbol {
  int32 Tag = 1; //结果
  int32 SymbolId = 2;
}

//改变自动审核
message C2SFamilyChangeAutoAgree {
  int32 IsAutoAgree = 1; //1-自动审核  0-不自动审核
  int64 AgreeFv = 2; //最低战力
}
message S2CFamilyChangeAutoAgree {
  int32 Tag = 1; //结果
  int32 IsAutoAgree = 2; //1-自动审核  0-不自动审核
  int64 AgreeFv = 3; //最低战力
}
//家族刷新光环
message C2SFamilyChangeHalo {
}
message S2CFamilyChangeHalo {
  int32 Tag = 1; //结果
  int32 SkillId = 2; //技能id
  int32 SkillLv = 3; //技能等级
}
//家族确认更换光环，取消更换不用发包
message C2SFamilyConfirmHalo {
}
message S2CFamilyConfirmHalo {
  int32 Tag = 1; //结果
  int32 SkillId = 2; //技能id
  int32 SkillLv = 3; //技能等级
}
/*****************************************小红点************************************/
//小红点状态 单个包
message RedState {
  int32 RedDotId = 1; //红点id
  int32 State = 2; //红点状态 0 灭 1 亮
}
//红点交互包
message S2CRedState {
  repeated RedState List = 1;
}

/*****************************************转生************************************/
//转生突破
message C2SRebornUp {
}
message S2CRebornUp {
  int32 Tag = 1; //操作结果
}
//使用转生丹
message C2SRebornPill {
}
message S2CRebornPill {
  int32 Tag = 1; //操作结果
}
//转生丹一键合成
message C2SRebornPillStick {
  int32 ItemId = 1; //低级转生丹道具ID
}
message S2CRebornPillStick {
  int32 Tag = 1; //操作结果
}

/*****************************************挂机************************************/
//获取快速挂机购买信息
message C2SAFKGetBuyInfo {
}
//获取快速挂机购买信息
message S2CAFKGetBuyInfo {
  int32 Times = 1; //已购买次数
  int32 LeftTimes = 2; //剩余次数
  int32 NoticeTimes = 3; //下一级VIP多出次数
  int32 NoticeVip = 4; //下一级VIP等级
  int32 Coin = 5; //下次购买所需仙玉数量
}

//购买快速挂机次数
message C2SAFKBuyTimes {
}
message S2CAFKBuyTimes {
  int32 Tag = 1;
}

//领取挂机奖励
message C2SGetAFKPrize {
}
message S2CGetAFKPrize {
  int32 Tag = 1;
}

/*****************************************仙丹************************************/
//一键炼化
message C2SDrugUse {
  int32 UType = 1; //仙丹类型
}
message S2CDrugUse {
  int32 Tag = 1;
}

//仙丹合成，合成成功发背包变化
message C2SDrugStick {
  int32 Id = 1; //要合成的仙丹道具ID
  uint32 Times = 2; //合成次数
}
message S2CDrugStick {
  int32 Tag = 1;
  int32 Id = 2; //要合成的仙丹道具ID
}

/*****************************************特权卡************************************/
//领取周卡每日奖励
message C2SWeekCardDayPrize {
  int32 Day = 1; //领取第几天的奖励
}
message S2CWeekCardDayPrize {
  int32 Tag = 1;
}
//领取月卡每日奖励
message C2SMonthCardDayPrize {
  int32 Day = 1; //领取第几天的奖励
}
message S2CMonthCardDayPrize {
  int32 Tag = 1;
}
//领取终身卡每日奖励
message C2SLifeCardDayPrize {
}
message S2CLifeCardDayPrize {
  int32 Tag = 1;
}
//客户端打开了特权卡界面，隐藏部分小红点逻辑
message C2SOpenCard {
}
//**************************************仙界宝藏*******************************************//
//进入仙界宝藏副本
message C2SFairyTreasureEnter {
  int32 Id = 1; //仙界宝藏编号
}
message S2CFairyTreasureEnter {
  int32 Tag = 1;
  int32 Id = 2; //仙界宝藏编号
}

//离开仙界宝藏副本
message C2SFairyTreasureLeave {
  int32 Id = 1; //仙界宝藏编号
}
message S2CFairyTreasureLeave {
  int32 Tag = 1;
  int32 Id = 2; //仙界宝藏编号
}

//获取挖宝点
message C2SGetDigTreasurePoint {
  int32 Id = 1; //仙界宝藏编号
}
message S2CGetDigTreasurePoint {
  int32 Tag = 1;
  int32 Id = 2;
  int32 X = 3;
  int32 Y = 4;
}

//挖宝
message C2SDigTreasure {
  int32 Id = 1; //仙界宝藏编号
  int32 X = 2;
  int32 Y = 3;
}
message S2CDigTreasure {
  int32 Tag = 1;
  int32 Id = 2; //仙界宝藏编号
  int32 DigType = 3; //挖宝结果类型
  repeated ItemData Data = 4; //挖宝获得道具
  int32 BossId = 5; //如果结果类型是4(挖出怪物), 该字段才有效
}

//挖宝十连挖
message C2SDigTreasure10Times {
  int32 Id = 1; //仙界宝藏编号
}
message S2CDigTreasure10Times {
  int32 Tag = 1;
  int32 Id = 2; //仙界宝藏编号
  repeated DigTreasureData List = 4; //挖宝结果
}

//十连挖，每次挖出的道具(有可能为空)
message DigTreasureData {
  int32 Id = 1; //次数Id
  repeated ItemData Data = 4; //挖宝获得道具
}

//挖宝挖出怪物战斗
message C2SDigTreasureFight {
  int32 Id = 1; //仙界宝藏编号
  int32 BossId = 2; //挖宝挖出怪物Id
}
message S2CDigTreasureFight {
  int32 Tag = 1;
  int32 Id = 2; //仙界宝藏编号
  int32 BossId = 3; //挖宝挖出怪物Id
  int32 Win = 4; //输赢
  repeated ItemData Data = 5; //打败怪物获得道具
}

//仙界宝藏挖宝记录
message C2SGetDigTreasureLog {
  int32 Type = 1; //1 自己 2全服
}
message DigTreasureItem {
  int64 Time = 1;
  NoticeUser User = 2;
  int64 FairyTreasureId = 3;
  repeated ItemData Item = 4;
}
message S2CGetDigTreasureLog {
  int32 Type = 1; //1 自己 2全服
  repeated DigTreasureItem Logs = 2;
}

////**************************************宝石之塔*******************************************//
////进入宝石之塔副本
//message C2SGemTowerEnter {
//}
//message S2CGemTowerEnter {
//    int32 Tag = 1;
//}
//
////离开宝石之塔副本
//message C2SGemTowerLeave {
//}
//message S2CGemTowerLeave {
//    int32 Tag = 1;
//}
//
////挑战宝石之塔副本
//message C2SGemTowerFight {
//    int32 Id = 1; //宝石塔副本Id
//}
//message S2CGemTowerFight {
//    int32 Tag = 1;
//    int32 Id = 2;
//    int32 Win = 3;
//}
//
////宝石之塔副本进入下一层
//message C2SGemTowerNextLayer {
//}
//message S2CGemTowerNextLayer {
//    int32 Tag = 1;
//}
//
////宝石之塔副本领取额外奖励
//message C2SGemTowerGetSepPrize {
//}
//message S2CGemTowerGetSepPrize {
//    int32 Tag = 1;
//}
//
////**************************************天仙之塔*******************************************//
////进入天仙之塔副本
//message C2SPetaATowerEnter {
//}
//message S2CPetaATowerEnter {
//    int32 Tag = 1;
//}
//
////离开天仙之塔副本
//message C2SPetaATowerLeave {
//}
//message S2CPetaATowerLeave {
//    int32 Tag = 1;
//}
//
////挑战天仙之塔副本
//message C2SPetaATowerFight {
//    int32 Id = 1; //天仙塔副本Id
//}
//message S2CPetaATowerFight {
//    int32 Tag = 1;
//    int32 Id = 2;
//    int32 Win = 3;
//}
//
////天仙之塔副本进入下一层
//message C2SPetaATowerNextLayer {
//}
//message S2CPetaATowerNextLayer {
//    int32 Tag = 1;
//}
//
////天仙之塔副本领取额外奖励
//message C2SPetaATowerGetSepPrize {
//}
//message S2CPetaATowerGetSepPrize {
//    int32 Tag = 1;
//}
////**************************************天神之塔*******************************************//
////进入天神之塔副本
//message C2SGodTowerEnter {
//}
//message S2CGodTowerEnter {
//    int32 Tag = 1;
//}
//
////离开天神之塔副本
//message C2SGodTowerLeave {
//}
//message S2CGodTowerLeave {
//    int32 Tag = 1;
//}
//
////挑战天神之塔副本
//message C2SGodTowerFight {
//    int32 Id = 1; //天神塔副本Id
//}
//message S2CGodTowerFight {
//    int32 Tag = 1;
//    int32 Id = 2;
//    int32 Win = 3;
//}
//
////天神之塔副本进入下一层
//message C2SGodTowerNextLayer {
//}
//message S2CGodTowerNextLayer {
//    int32 Tag = 1;
//}
//
////天神之塔副本领取额外奖励
//message C2SGodTowerGetSepPrize {
//}
//message S2CGodTowerGetSepPrize {
//    int32 Tag = 1;
//}

//**************************************通用爬塔*******************************************//
//进入爬塔副本
message C2SClimbingTowerEnter {
  int32 TowerType = 1;
}
message S2CClimbingTowerEnter {
  int32 Tag = 1;
  int32 TowerType = 2;
}
//离开爬塔副本
message C2SClimbingTowerLeave {
  int32 TowerType = 1;
}
message S2CClimbingTowerLeave {
  int32 Tag = 1;
  int32 TowerType = 2;
}
//挑战爬塔副本
message C2SClimbingTowerFight {
  int32 TowerType = 1;
  int32 Id = 2; //宝石塔副本Id
}
message S2CClimbingTowerFight {
  int32 Tag = 1;
  int32 TowerType = 2;
  int32 Id = 3;
  int32 Win = 4;
}
//爬塔副本进入下一层
message C2SClimbingTowerNextLayer {
  int32 TowerType = 1;
}
message S2CClimbingTowerNextLayer {
  int32 Tag = 1;
  int32 TowerType = 2;
}
//爬塔副本领取额外奖励
message C2SClimbingTowerGetSepPrize {
  int32 TowerType = 1;
}
message S2CClimbingTowerGetSepPrize {
  int32 Tag = 1;
  int32 TowerType = 2;
}

//领取剑魂塔每日奖励
message C2SClimbingTowerGetSwordSoulDayPrize {
}
message S2CClimbingTowerGetSwordSoulDayPrize {
  int32 Tag = 1;
}
//剑魂塔转盘
message C2SClimbingTowerGetSwordSoulCircle {
}
message S2CClimbingTowerGetSwordSoulCircle {
  int32 Tag = 1;
  repeated int32 RewardId = 2; //获得的奖励id，获得超级大奖时，下标0为超级大奖id

}
message C2SClimbingTowerGetSwordSoulCircleEnd {
}

//===========================仙缘==============================
//征婚贴
message WeddingTie {
  int64 UserId = 1; // 征婚人ID
  string Nick = 2; // 证婚人昵称
  int32 Vip = 3; // VIP等级
  int32 Head = 4;
  int32 HeadBox = 5;
  int64 Sid = 6; // 征婚人服务器ID
  int32 Aid = 7; // 征婚人区服ID
  string Vows = 8; // 征婚誓言
  string BetrothalAmount = 9; // 彩礼金额 ID:NUM
  int64 Timestamp = 10; // 发帖时间戳
  string World = 11;
  int32 HideVIP = 12; //Vip等级是否屏蔽  0正常显示  1屏蔽
}

//婚房
message WeddingRoom {
  int32 Gear = 1; // 房屋档位
  int32 Level = 2; // 房屋等级
  int32 Exp = 3; // 房屋当前亲密度
}

//婚戒
message WeddingRing {
  int32 Gear = 1; // 婚戒档位
  int32 GmLevel = 2; //共鸣等级
  int32 GMExp = 3; //共鸣经验
  int32 Level = 4; // 婚戒等级
  int32 Exp = 5; // 婚戒当前共鸣经验
  repeated Skill ExclusiveSkills = 6; // 专属技能
  repeated Skill CommonSkills = 7; // 通用技能
}

//亲密度
message WeddingIntimacy {
  int32 Level = 1;
  int32 Exp = 2;
  repeated int32 Received = 3;
}

//信物
message WeddingToken {
  int32 Id = 1; // 信物ID
  int32 Gear = 2; // 信物等阶
  int32 Level = 3; // 信物等级
  int32 Exp = 4; // 信物等级经验
  repeated Skill Skills = 5; // 信物技能
  int32 BuffLevel = 6; // BUFF等级
}

// 登录成功，通知玩家更新仙缘数据
message S2CSendMarryInfo {
}

// 搜索征婚人士
message C2SWeddingSeeking {
  string Nick = 1;
  int32 Page = 2;
  int32 Size = 3;
}
message S2CWeddingSeeking {
  int32 Tag = 1;
  repeated WeddingTie WeddingSeekers = 2;
  int32 Total = 3;
  string TagP = 4; // 提示信息参数
}

// 发布征婚帖
message C2SPostWeddingTie {
  int32 VowsId = 1; // 默认誓言Id
  string Vows = 2; // 自定义誓言
  string Item = 3; // 彩礼 ID:NUM
}
message S2CPostWeddingTie {
  int32 Tag = 1;
}

// 求婚
message C2SPropose {
  string ItemId = 1; // 婚戒道具唯一Id
  string ItemBoxId = 2; // 礼盒道具唯一Id
  int64 TargetId = 3; // 征婚人Id
}
message S2CPropose {
  int32 Tag = 1;
}
message S2CProposeNotify {
  ItemData Ring = 1; // 婚戒道具Id
  repeated ItemData BetrothalGift = 2; // 彩礼道具ID:道具数量
  ItemData Item1 = 3;
  ItemData Item2 = 4;
  int32 UserId = 5;
  string Nick = 6;
  int32 Vip = 7;
  int32 Head = 8;
  int32 HeadBox = 9;
  int32 Sid = 10;
  string World = 11;
  int32 HideVIP = 12; //Vip等级是否屏蔽  0正常显示  1屏蔽
}
// 红包
message S2CProposeGift {
  int64 UserId1 = 1;
  string Name1 = 2;
  int32 Head1 = 3;
  int32 HeadBox1 = 4;
  int32 Sid1 = 5;
  int64 UserId2 = 6;
  string Name2 = 7;
  int32 Head2 = 8;
  int32 HeadBox2 = 9;
  int32 Sid2 = 10;
  repeated ItemData RedBag = 11;
  string World1 = 12;
  string World2 = 13;
}

//离婚
message C2SDivorce {
}
message S2CDivorce {
  int32 Tag = 1;
}

//获取房屋信息
message C2SWeddingRoomData {
}
//提升房屋档位
message C2SWeddingRoomGearUp {
  int32 Gear = 1;
}
//提升房屋等级
message C2SWeddingRoomLevelUp {
  int32 ItemId = 1; // 升级道具id
  uint32 ItemNum = 2; // 道具数量
  int32 Auto = 3; // 是否自动购买 1是
}
//获取/提升房屋档位/等级回包
message S2CWeddingRoom {
  int32 Tag = 1;
  WeddingRoom WeddingRoom = 2;
}
//获取戒指信息
message C2SWeddingRingData {
}
//提升戒指档位
message C2SWeddingRingGearUp {
  string ItemId = 1; //戒指道具唯一id
}
//提升戒指共鸣等级
message C2SWeddingRingGMLevelUp {
  int32 ItemId = 1; //戒指道具id
  uint32 ItemNum = 2; //使用数量
  string Rings = 3; //戒指道具唯一Id，|分割
  int32 Auto = 4;
}
//提升戒指等级
message C2SWeddingRingLevelUp {
  int32 ItemId = 1; //戒指道具id
  uint32 ItemNum = 2; //使用数量
  int32 Auto = 3;
}
//提升戒指技能等级
message C2SWeddingRingSkillLevelUp {
  int32 SkillId = 1; //技能Id
  int32 SkillType = 2; //技能类型 1 通用技能；2 专属技能
  int32 Auto = 3;
}
//获取/提升戒指档位/共鸣/等级/技能等级回包
message S2CWeddingRing {
  int32 Tag = 1;
  WeddingRing WeddingRing = 2;
}

// 获取亲密度信息
message C2SWeddingIntimacy {
}

//提升亲密度等级
message C2SWeddingIntimacyLevelUp {
  uint32 ItemNum = 1; // 道具数量
  int32 Auto = 2; // 是否自动购买
}
//领取亲密度等级奖励
message C2SWeddingIntimacyReward {
  int32 Level = 1;
}
message S2CWeddingIntimacy {
  int32 Tag = 1;
  WeddingIntimacy Intimacy = 2;
}

// 获取所有仙缘信物
message C2SAllWeddingToken {

}
message S2CAllWeddingToken {
  int32 Tag = 1;
  repeated WeddingToken WeddingToken = 2;
}
// 仙缘信物提升等阶
message C2SWeddingTokenGearUp {
  int32 TokenId = 1; // 信物ID
  int32 Auto = 2; // 是否自动购买
}
message C2SWeddingTokenBuffUp {
  int32 TokenId = 1; // 信物ID
}
// 仙缘信物提升等级
message C2SWeddingTokenLevelUp {
  int32 TokenId = 1; // 信物ID
  int32 Auto = 3; // 是否自动购买
}
// 仙缘信物提升技能
message C2SWeddingTokenSkillLevelUp {
  int32 TokenId = 1; // 信物ID
  uint32 SkillId = 2; // 道具数量
  int32 Auto = 3; // 是否自动购买
}
// 信物升阶/升级/升技能回包
message S2CWeddingToken {
  int32 Tag = 1;
  WeddingToken WeddingToken = 2;
}

//获取别人的戒指信息
message C2STargetWeddingRingData {
  int64 UserId = 1;
}
message S2CTargetWeddingRing {
  int32 Tag = 1;
  WeddingRing WeddingRing = 2;
  string Vows = 3; //誓言
  int64 TargetId = 4; //伴侣ID
}

//拉取所有仙缘任务数据
message WeddingTask {
  int32 Type = 1; //任务类型
  int32 Id = 2; //任务ID
  int64 My = 3; //我的计数
  int64 Partner = 4; //对方计数
}
message C2SGetWeddingTask {
}
//获取/提升戒指档位/共鸣/等级/技能等级回包
message S2CGetWeddingTask {
  int32 Tag = 1;
  repeated WeddingTask DayTask = 2; //每日任务数据
  repeated WeddingTask OneTask = 3; //一次性任务
}

//仙侣副本邀请
message C2SWeddingInsInvite {
}
message S2CWeddingInsInvite {
  int32 Tag = 1;
  int64 P = 2; //邀请人ID
  int64 Timestamp = 3; // 邀请倒计时
}

//仙侣副本邀请拒绝
message C2SWeddingInsInviteAck {
  int32 Ack = 1; // 1 同意；2 拒绝；
}
message S2CWeddingInsInviteAck {
  int32 Tag = 1;
  int32 Ack = 2; // 1 同意；2 拒绝；
}

//仙缘挑战副本
message C2SWeddingInsFight {
}
//请求指定的战报序号
message C2SWeddingInsReport {
  int32 Index = 1; // 战报序号
}
//发送战报
message S2CWeddingInsReport {
  int32 Tag = 1;
  int32 Index = 2; // 当前层
  S2CBattlefieldReport Report = 3;
  int32 Total = 4; // 最终关卡数
}

//扫荡仙缘副本
message C2SOneKeyWeddingIns {

}
message S2COneKeyWeddingIns {
  int32 Tag = 1;
}

//密语
message C2SWeddingMsg {
  string Msg = 1; //密语内容
}
message S2CWeddingMsg {
  int32 Tag = 1;
  WhisperMsg M = 2;
}

//伴侣上线提醒
message S2CPartnerOnline {
  int64 UserId = 1;
  string Nick = 2;
  int64 Head = 3;
  int64 HeadFrame = 4;
  int64 Vip = 5;
  int64 AreaId = 6;
  int32 State = 7; //0 离线；1 上线
  int32 Type = 8; //0 提醒；1 状态
  string World = 9;
  int32 HideVIP = 10; //Vip等级是否屏蔽  0正常显示  1屏蔽
}

// 仙缘计数器
message WeddingCounter {
  int32 T = 1;    //计数器类型
  int32 P = 2;    //参数
  int64 C1 = 3;   //求婚者计数器当前计数量
  int64 C2 = 4;   //被求婚者计数器当前计数量
  int64 IC1 = 5;  //求婚者计数器初始计数量
  int64 IC2 = 6;  //被求婚者计数器初始计数量
}

// 仙缘计数器信息
message WeddingCounterInfo {
  repeated WeddingCounter Counters = 1; //计数器
  repeated int64 Players = 2;//所属玩家Id[求婚者Id,被求婚者Id]
  int32 Flag = 3; //标志,当某个玩家离婚计数器处理完毕后flag+1,当flag==2表示2个玩家均处理完毕
}

//===========================天赋、炼体==============================
//天赋升级
message C2SRoleTalentUp {
  int32 Id = 1; //要升级的天赋ID
}
message S2CRoleTalentUp {
  int32 Tag = 1;
  int32 Id = 2; //要升级的天赋ID
}

//炼体升级
message C2SRoleBodyUp {
  int32 Id = 1; //要升级的炼体ID
  int32 Type = 2; // 1 一键升级
}
message S2CRoleBodyUp {
  int32 Tag = 1;
  int32 Id = 2; //要升级的炼体ID
  int32 Type = 3; // 1 一键升级
}

//===========================吃丹==============================
//丹药--获取数据
message C2SGetDrugBase {
}
message S2CGetDrugBase {
  repeated DrugBase DrugBase = 1; //丹药数据
}

//丹药--吃
message C2SDrugBaseEat {
  int32 Class = 1; //1：仙童
  int32 Type = 2; //仙丹种类
}
message S2CDrugBaseEat {
  int32 Tag = 1;
  int32 Class = 2; //1：仙童
  int32 Type = 3; //仙丹种类
  int32 Count = 4; //本次吃丹数量
}

//**************************************宝物*******************************************//
message DBPlayerBaoWu {
  repeated LampStone LampStone = 1;
  int32 LampWishId = 2;
  repeated BaoWuTask Taskzcpx = 3;
  repeated BaoWuTask Taskzlhu = 4;
}

//阿拉丁神灯宝石
message LampStone {
  int32 Pos = 1;
  int32 Level = 2;
}

//阿拉丁神灯信息
message C2SAladdinLampInfo {
  int64 UserId = 1;
}
message S2CAladdinLampInfo {
  repeated LampStone LampStone = 2;
  int32 LampWishId = 3;
}

//激活阿拉丁神灯
message C2SAladdinLampUnlock {
}
message S2CAladdinLampUnlock {
  int32 Tag = 1;
}

//阿拉丁神灯宝石镶嵌
message C2SAladdinLampStoneUse {
  int32 Pos = 1;
}
message S2CAladdinLampStoneUse {
  int32 Tag = 1;
  LampStone Stone = 2;
}

//阿拉丁神灯宝石升级
message C2SAladdinLampStoneUpLevel {
  int32 Pos = 1;
}
message S2CAladdinLampStoneUpLevel {
  int32 Tag = 1;
  LampStone Stone = 2;
}

//阿拉丁神灯许愿
message C2SAladdinLampWish {
}
message S2CAladdinLampWish {
  int32 Tag = 1;
  int32 Id = 2; //许愿获得的BuffId
}

//宝物(特殊装备)的任务
message BaoWuTask {
  int32 Id = 1;
  int32 Type = 2; //2招财貔貅，3战力护符
  int32 State = 3; //0未达到, 1达到未领取, 2达到已领取
}

//所有状态变化的任务，玩家登录时，推所有的任务
message S2CChangeBaoWuTask {
  repeated BaoWuTask Taskzcpx = 1; //招财貔貅
  repeated BaoWuTask Taskzlhu = 2; //战力护符
}

//其他人的所有的任务
message C2SOtherBaoWuTask {
  int64 OtherId = 1; //其他人的userId
}
message S2COtherBaoWuTask {
  int64 OtherId = 1; //其他人的userId
  repeated BaoWuTask Taskzcpx = 2; //招财貔貅
  repeated BaoWuTask Taskzlhu = 3; //战力护符
}

//领取宝物奖励
message C2SReceiveBaoWuPrize {
  int32 Id = 1;
  int32 Type = 2;
}
message S2SReceiveBaoWuPrize {
  int32 Tag = 1;
  int32 Id = 2;
  int32 Type = 3;
}

//一键领取宝物奖励
message C2SOneKeyReceiveBaoWuPrize {
  int32 Type = 1; //2招财貔貅，3战力护符
}
message S2COneKeyReceiveBaoWuPrize {
  int32 Tag = 1;
  int32 Type = 2;
}

//**************************************修炼*******************************************//
message ResourceItemData {
  int32 Id = 1;
  repeated ItemData ItemData = 2;
}
message DBPlayerPractice {
  int32 CurExp = 1; //当前修炼经验
  int32 Level = 2; //当前修炼等级
  repeated ResourceRemain ResourceRemain = 3; //可找回资源数据
  repeated ResourceItemData ResourceItemData = 4; //可找回资源可获得道具
}
//修炼结构体
message PlayerPractice {
  int32 CurExp = 1; //当前修炼经验
  int32 Level = 2; //当前修炼等级
}
message C2SPlayerPractice {
}
message S2CPlayerPractice {
  PlayerPractice Data = 1;
}

//修炼升级
message C2SPracticeLevelUp {
}
message S2CPracticeLevelUp {
  int32 Tag = 1;
  int32 Exp = 2; //当前修炼经验
  int32 Level = 3; //当前修炼等级
}

//每日修炼找回数据结构
message DayPracticeRemain {
  int32 TaskId = 1; //修炼任务ID
  int32 FindType = 2; //类型，1元宝 2仙玉
  int32 Times = 3; //可找回次数
}

//返回昨日每日修炼任务可找回修炼值
message C2SLastDayPracticeRemain {
}
message S2CLastDayPracticeRemain {
  repeated DayPracticeRemain List = 1; //所有可找回的历练任务及次数
}
//每日修炼找回
message C2SDayPracticeFind {
  int32 TaskId = 1; //修炼任务ID
  int32 Type = 2; //找回类型：1元宝 2仙玉
  int32 Times = 3; //找回次数
}
message S2CDayPracticeFind {
  int32 Tag = 1; //结果标记
  DayPracticeRemain Remain = 2; //找回之后的信息
}
//每日修炼一键找回
message C2SDayPracticeFastFind {
}
message S2CDayPracticeFastFind {
  int32 Tag = 1; //结果标记
}

//资源找回数据结构
message ResourceRemain {
  int32 Id = 1; //资源找回ID
  repeated ItemData ItemData = 2; //道具数组
  int32 Times = 3; //可找回次数
}
//返回昨日可找回资源
message C2SLastDayResourceRemain {
}
message S2CLastDayResourceRemain {
  repeated ResourceRemain List = 1; //所有可找回资源
}
//资源找回
message C2SResourceFind {
  int32 Id = 1; //资源找回ID
  int32 Times = 2; //找回次数
}
message S2CResourceFind {
  int32 Tag = 1; //结果标记
  ResourceRemain Remain = 2; //找回之后的信息
}
//资源一键找回
message C2SResourceFastFind {
}
message S2CResourceFastFind {
  int32 Tag = 1; //结果标记
}

//**************************************极限生存*******************************************//
//极限生存数据
message S2CJXSCStageChange {
  int32 Stage = 1; //0未开启 1报名阶段 2第一层 3 4第二层 5 6第三层
  int64 EndTimestamp = 2; //阶段结束时间戳
}

//报名
message C2SJXSCSignUp {
}
message S2CJXSCSignUp {
  int32 Tag = 1;
}

//玩家变身
message C2SJXSCSkinChange {
}
message S2CJXSCSkinChange {
  int32 Tag = 1;
  int32 Id = 2;
}

//进入下一层场景
message C2SJXSCJoinNextLayer {
}
message S2CJXSCJoinNextLayer {
  int32 Tag = 1;
}

//退出场景
message C2SJXSCLeaveScene {
}
message S2CJXSCLeaveScene {
  int32 Tag = 1;
}

//当前层的钥匙数量
message C2SJXSCKeyNum {
}
message S2CJXSCKeyNum {
  int32 KeyNum = 1; //钥匙数量
}
//当前层的积分和排名
message C2SJXSCMyScore {
}
message S2CJXSCMyScore {
  int32 MyRank = 1; //我的排名
  int32 MyScore = 2; //我的积分
}

////极限生存积分排行
//message JXSCScore {
//    int64 UserId = 1;
//    string Nick = 2;
//    int64 Score = 3;
//    int64 AreaId = 4; //区服Id
//}
//message S2CJXSCScoreRank {
//    int32 StageId = 1;              //层Id
//    repeated JXSCScore Items = 2;   //积分数据
//}

//开宝箱
message C2SJXSCOpenBox {
  int32 Id = 1;
}
message S2CJXSCOpenBox {
  int32 Tag = 1;
  int32 Id = 2;
  repeated ItemData ItemData = 3;
}

//附近目标结构
message NearbyTarget {
  int64 Id = 1; //唯一编号 玩家(UserId) 怪物(怪物Id)
  int64 Type = 2; //对象类型 玩家(0) 怪物(8)
  int64 ChangeSkinId = 3; //玩家变身皮肤Id
  int32 HaveKey = 4; //0,没钥匙 1,金钥匙 2,银钥匙
  int32 Head = 5; //真实玩家头像
  int32 HeadFrame = 6; //真实玩家头像框
  string Nick = 7; //玩家昵称
  int32 Area = 8; //玩家区服
  int32 IsLeader = 9; //玩家是否是宗主，0否1是
  string World = 10;
}
message S2CNearbyTarget {
  int32 State = 1; //0不显示 1显示
  repeated NearbyTarget Items = 2;
}

//极限生存报名时间段
message C2SJXSCSignUpInterval {
}
message S2CJXSCSignUpInterval {
  int64 StartTime = 1; //活动开始时间
  int64 SignUpEndTime = 2; //报名阶段结束时间
}
//跨服发给游戏服务器使用
message K2SJXSCSignUpInterval {
  int64 StartTime = 1; //活动开始时间
  int64 SignUpEndTime = 2; //报名阶段结束时间
}

//极限生存跨服发送小红点
message K2SJXSCCheckRed {
}

//极限生存，玩家重进
message C2SJXSCReentry {
}

//**************************************跑商*******************************************//
//跑商数据
message BusinessData {
  int32 State = 1; //跑商状态：0无跑商，1移动中，2买卖中，3返程中，8完成待领奖，9离线暂停
  int32 LastPos = 2; //上一个节点ID
  int32 NextPos = 3; //下一个节点ID
  int32 ThisStartPos = 4; //本轮起始节点ID
  int32 ThisEndPos = 5; //本轮终点节点ID
  int64 ThisStartTime = 6; //本轮起始时间
  int64 LastPosStartTime = 7; //上一节点起始时间
  repeated BusinessWay ThisWay = 8; //本轮移动路径（包含本轮起始、途径、终点节点ID）
  int32 Ticket = 9; //银票ID
  repeated ItemInfo Goods = 10; //当前身上的货物数组
  int32 Gold = 11; //目前资金总额
  int32 TodayTimes = 12; //今日已跑商次数
  int32 TradeResult = 13; //处于买卖中状态时,本次买卖结果ID
  int32 TradeGold = 14; //处于买卖中状态时,本次交易盈利数额
  int32 GoodResultTime = 15; //本次跑商连续大赚次数
  int32 OldState = 16; //断线前状态
  repeated ItemInfo SurpriseItem = 17; //获得的额外奖励
}

//跑商节点数据，包含节点ID和到达的预计时间戳
message BusinessWay {
  int32 Id = 1; //节点ID
  int64 ArriveTime = 2; //预计到达时间
}

//发送跑商数据
message S2CBusinessData {
  BusinessData Data = 1; //跑商全部数据
}

//获取跑商数据
message C2SGetBusinessData {
}

//断线重连继续跑商
message C2SContinueBusiness {
}
message S2CContinueBusiness {
  int32 Tag = 1;
}

//购买银票，开始跑商
message C2SStartBusiness {
  int32 Id = 1; //购买的银票ID
}
message S2CStartBusiness {
  int32 Tag = 1;
  string TagP = 2; //错误参数
}

//快速完成跑商
message C2SFastBusiness {
}
message S2CFastBusiness {
  int32 Tag = 1;
  string TagP = 2; //错误参数
}

//跑商意外奖励
message S2CBusinessSurprise {
  ItemInfo Data = 1; //意外获得的道具
}

//跑商结束
message S2CBusinessEnd {
  repeated ItemInfo Data = 1; //跑商完成奖励道具
  repeated ItemInfo Suprise = 2; //跑商额外奖励道具
}

//跑商领奖
message C2SGetBusinessPrize {
}
message S2CGetBusinessPrize {
  int32 Tag = 1;
  string TagP = 2; //错误参数
  int32 Ticket = 3; //银票ID
}

//**************************************勋章、圣杯、守护精灵*******************************************//

//勋章解锁、升级
message C2SMedalUp {
  int32 Id = 1; //要解锁升级的勋章ID
}
message S2CMedalUp {
  int32 Tag = 1;
}

//勋章领取奖励
message C2SMedalGetPrize {
  int32 Id = 1; //要领奖的勋章ID
}
message S2CMedalGetPrize {
  int32 Tag = 1;
}

//守护精灵购买
message C2SGuardBuy {
}
//赠送守护精灵时也发这个包
message S2CGuardBuy {
  int32 Tag = 1;
}
//守护精灵到期提醒
message S2CGuardOverTime {
}

//**************************************主题礼包*******************************************//
//数据库存储主题礼包数据
message DBPlayerTitleGift {
  repeated PlayerTitleGift PlayerTitleGift = 1;
}
message PlayerTitleGift {
  int32 GoodId = 1; //礼包Id
  TitleGift TitleGift = 2; //礼包
  int32 OpenState = 3; //礼包的开启状态 0关闭 1开启 2结束
  int64 EndTimestamp = 4; //如果礼包是开启状态，则该字段表示礼包结束的时间戳
}
message TitleGift {
  int32 GoodId = 1; //礼包Id
  int32 State = 2; //购买状态 0:不能购买 1:可以购买 2:已购买 3:可领取 4:已领取
  int64 EndTimestamp = 3; //如果礼包有结束时间，则该字段表示礼包结束的时间戳
}

//获取可以购买的主题礼包列表
message C2SGetTitleGiftList {
}
message S2CGetTitleGiftList {
  repeated TitleGift TitleGift = 1; //可以购买的礼包列表
}

//领取已购买的主题礼包
message C2SReceiveTitleGift {
  int32 GoodId = 1;
}
message S2CReceiveTitleGift {
  int32 Tag = 1;
}

//领取首充礼包
message C2SReceiveFirstRechargeGift {
}
message S2CReceiveFirstRechargeGift {
  int32 Tag = 1;
}

//领取首充投资
message C2SReceiveFirstRechargeInvestGift {
}
message S2CReceiveFirstRechargeInvestGift {
  int32 Tag = 1;
}

//领取累充3天豪礼
message C2SReceiveTotalRechargeGift {
  int32 Stage = 1; //累充档位(1,2,3...)
  int32 Day = 2;  //天数
}
message S2CReceiveTotalRechargeGift {
  int32 Tag = 1;
  int32 Stage = 2; //累充档位(1,2,3...)
  int32 Day = 3;  //天数
}


//**************************************悬赏boss*******************************************//
//当前悬赏boss信息
message C2SXuanShangBossInfo {
}
message S2CXuanShangBossInfo {
  int32 XuanShangID = 1; //悬赏id
  int32 LeftFreeRefreshTimes = 2; //剩余免费刷新次数
  int64 NextFreeRefreshTimesTimeStamp = 3; //下次免费次数恢复时间戳
  int32 Status = 4; //悬赏状态 0:未接取 1:已接取
  int64 BossID = 5; //已接取时，bossid
  int64 XuanShangLimitTimeStamp = 6; //已接取状态下，悬赏倒计截止时间戳
  int32 LeftKillTimes = 7; //剩余讨伐次数
  int32 LeftBuyKillTimes = 8; //讨伐次数 还可购买次数
  int32 BuyKillTimesItemID = 9; //购买讨伐次数消耗道具
  int64 BuyKillTimesItemNum = 10; //购买讨伐次数消耗数量
  int32 CurScore = 11; //当前积分
  repeated int32 ScoreRewardGet = 12; //今日已领积分奖励id
}

//购买讨伐次数
message C2SXuanShangBossBuyTimes {
  int32 BuyType = 1; //1-道具兑换 2-货币购买
}
message S2CXuanShangBossBuyTimes {
  int32 Tag = 1;
}

//刷新悬赏boss（提品）
message C2SXuanShangBossRefresh {
  int32 RefreshType = 1; //0-免费刷新 1-普通提品 2-一键传说
}
message S2CXuanShangBossRefresh {
  int32 Tag = 1;
  int32 RefreshType = 2;
  int32 LeftFreeRefreshTimes = 3; //剩余免费刷新次数
  int64 NextFreeRefreshTimesTimeStamp = 4; //下次刷新次数恢复时间戳
  int32 XuanShangID = 5; //新悬赏id
}

//接取悬赏
message C2SXuanShangBossAccept {
}
message S2CXuanShangBossAccept {
  int32 Tag = 1;
  int64 BossID = 2; //接取成功，bossid
  int64 XuanShangLimitTimeStamp = 3; //接取成功的话，悬赏截止时间戳
}

//进入场景
message C2SXuanShangBossJoinScene {
  int64 BossID = 1; //bossid
}
message S2CXuanShangBossJoinScene {
  int32 Tag = 1;
  int64 BossID = 2; //bossid
}

//召唤帮手
message C2SXuanShangBossCallHelp {
  int32 OnlyFamily = 1; //是否仅限家族成员 1-是
}
message S2CXuanShangBossCallHelp {
  int32 Tag = 1;
}

//放弃任务
message C2SXuanShangBossGiveUp {
}
message S2CXuanShangBossGiveUp {
  int32 Tag = 1;
}

//悬赏结果(放弃任务、倒计时结束、战斗胜利时发送）
message S2CXuanShangResult {
  int32 Tag = 1; //0-挑战成功，其他-挑战失败消息
  repeated CommonItemType Reward = 2; //获得奖励
}
//领取积分奖励
message C2SXuanShangBossScoreReward {
}
message S2CXuanShangBossScoreReward {
  int32 Tag = 1;
  repeated int32 ScoreRewardGet = 2; //今日已领积分奖励id
}

message CommonItemType {
  int32 ItemID = 1;
  int64 ItemNum = 2;
}

message S2CXuanShangMonsterData {
  int32 MonsterID = 1;
  int64 CurHp = 2;
  int64 MaxHP = 3;
  int32 MonsterLevel = 4;
  int32 LeaderUserID = 5; //队长id
  int64 limitTimeStamp = 6; //过期时间
}

//玩家悬赏boss数据
message PlayerXuanShangBossData {
  int32 XuanShangID = 1; //悬赏id
  int32 LeftFreeRefreshTimes = 2; //剩余免费刷新次数
  int64 NextFreeRefreshTimesTimeStamp = 3; //下次刷新时间戳
  int32 Status = 4; //悬赏状态 0:未接取 1:已接取
  int64 BossID = 5; //已接取时，bossid
  int64 XuanShangLimitTimeStamp = 6; //已接取状态下，悬赏截止时间戳
  int32 CurScore = 7; //当前积分`
  repeated int32 ScoreRewardGet = 8; //今日已领积分奖励id
  int32 FreeMaxQualityTimes = 9; //已免费刷新最高品质悬赏次数
}

// 按灭小红点
message C2SAnyRedPoint {
  int32 RedId = 1;
  int32 State = 2;
}

//队伍战斗状态变化
message S2CTeamFightStateChange {
  int32 LeaderUid = 1; //队长uid
  int32 FightState = 2; //0-等待战斗  1-战斗中
}

//装备镀金信息
message EquipDuJin {
  int32 EquipPart = 1;
  int32 DuJinLevel = 2;
}

//装备镀金
message C2SEquipDuJin {
  int32 EquipPart = 1;
}
message S2CEquipDuJin {
  int32 Tag = 1;
  int32 EquipPart = 2;
  int32 NewLevel = 3;
}

//装备精炼信息
message EquipJingLian {
  int32 CurLevel = 1;
  int32 CurExp = 2;
  repeated EquipSuitInfo EquipSuitInfos = 3;
}
message EquipSuitInfo {
  int32 SuitNum = 1;
  int32 SuitId = 2;
}

//装备套装精炼
message C2SEquipJingLian {
}
message S2CEquipJingLian {
  int32 Tag = 1;
}

//装备铸魂、命魂之力信息
message EquipZhuHun {
  repeated EquipZhuHunLevelInfo EquipZhuHunLevelInfos = 1; //铸魂等级信息
  repeated EquipZhuHunSuitInfo EquipZhuHunSuitInfos = 2; //铸魂命魂之力信息
}
//铸魂等级信息
message EquipZhuHunLevelInfo {
  int32 EquipPart = 1; //部位
  int32 MingHunID = 2; //命魂类型
  int32 Level = 3; //命魂等阶
}
//铸魂命魂之力信息
message EquipZhuHunSuitInfo {
  int32 SuitID = 1; //命魂之力编号
  int32 Level = 2; //命魂之力等阶
}

//装备铸魂
message C2SEquipZhuHun {
  int32 EquipPart = 1;
  int32 MingHunID = 2; //命魂id
}
message S2CEquipZhuHun {
  int32 Tag = 1;
  int32 EquipPart = 2;
  int32 MingHunID = 3; //命魂id
  int32 NewLevel = 4;
}

//装备铸魂剥离
message C2SEquipZhuHunCancel {
  int32 EquipPart = 1;
}
message S2CEquipZhuHunCancel {
  int32 Tag = 1;
  int32 EquipPart = 2;
  int32 MingHunID = 3; //命魂id
  int32 NewLevel = 4;
}

//已解锁的宠物图腾信息
message TotemInfo {
  int32 TotemId = 1; //图腾id
  repeated TotemPet TotemPets = 2; //已上阵宠物信息
  repeated TotemPower TotemPowers = 3; //图腾之力信息
  int32 Gear = 4; //图腾附灵等阶
  int32 AttrId = 5; //图腾附灵基础属性
  int32 AttrMul = 6; //图腾附灵增幅倍率万分比
}

message TotemPet {
  int32 Pos = 1; //位置
  string PetId = 2; //宠物唯一id
  int64 OwnerUserId = 3; //所属玩家id
}

message TotemPower {
  int32 PowerId = 1; //图腾id
  int32 PetNum = 2; //已满足宠物数量
  int32 IsActive = 3; //是否已激活 1-激活
}

//宠物图腾解锁
message C2STotemUnlock {
  int32 TotemId = 1;
}
message S2CTotemUnlock {
  int32 Tag = 1;
  int32 TotemId = 2;
}

//宠物图腾附灵
message C2STotemGearUp {
  int32 TotemId = 1;
}
message S2CTotemGearUp {
  int32 Tag = 1;
  int32 TotemId = 2;
  int32 Gear = 3;
}

//宠物图腾上下阵
message C2STotemPetChange {
  int32 TotemId = 1;
  int32 ChangeType = 2; //1-上阵 2-下阵
  int32 Pos = 3; //上下阵位置
  int64 OwnerUserId = 4; //所属玩家id
  string PetId = 5; //上阵时，宠物唯一id，下阵时可以留空
}
message S2CTotemPetChange {
  int32 Tag = 1;
  int32 TotemId = 2;
  int32 ChangeType = 3; //1-上阵 2-下阵
  int32 Pos = 4; //上下阵位置
  int64 OwnerUserId = 5; //所属玩家id
  string PetId = 6; //上阵时，宠物唯一id，下阵时可以留空
}

message C2STotemHelpPetChange {
  string UpPetId = 1; //上阵宠物唯一id
  string DownPetId = 2; //下阵宠物唯一id
}

message S2CTotemHelpPetChange {
  int32 Tag = 1;
  string UpPetId = 2; //上阵宠物唯一id
  string DownPetId = 3; //下阵宠物唯一id
}

message S2CFamilyTotemPetsUpd {
  repeated FamilyTotemPet PoolPets = 1;
}

message C2STotemPetAutoChange {
  int32 OpType = 1; //1：一键上阵 2：一键替换 3：一键下阵
  int32 TotemId = 2;
}

message S2CTotemPetAutoChange {
  int32 Tag = 1;
  int32 OpType = 2; //1：一键上阵 2：一键替换 3：一键下阵
  int32 TotemId = 3;
}

message TotemPetPassiveNotice {
  int32 OpType = 1; //1：外援宠物被动下阵 2：自己宠物被动下阵 3：外援宠物被动品质下降 4：自己宠物被动品质下降
  int32 TotemId = 2; //图腾Id
  string DownPetName = 3; //下阵宠物唯一id
  int64 TimeStamp = 4; //发生时间
  string DownPetPlayerName = 5; //下阵宠物玩家名字
  int32 DownPetPlayerSect = 6; //下阵宠物玩家区服
  int32 DownPetQuality = 7; //下阵宠物品质
  string World = 8; //下阵宠物玩家世界简称
}
message S2CTotemPetPassiveNotice {
  repeated TotemPetPassiveNotice data = 1;
}

message C2STotemPetPassiveNotice {
}

message S2CTotemPetPassiveNoticeStatus {
}

//设置玩家整数属性
message C2SSetAttrInt {
  int32 AttrId = 1; //属性Id
  int64 AttrVal = 2; //属性值
}

/////////////////寻龙点穴/////////////////////////
message SeekingDragonInfo {
  int32 Floor = 1;
  int32 Pos = 2;
  int32 Type = 3;
  repeated ItemInfo Prize = 4; //奖励
  int32 Hight = 5; //是否是高级奖励
  int32 EventId = 6; //事件Id(事件表中的Id)
}

//返回数据
message S2CSeekingDragonInfo {
  repeated SeekingDragonInfo Items = 1; //配置信息
  int32 MaxFloor = 2;
}

//寻龙点睛检测红点
message C2SSeekingDragonCheckRed {
}

//寻龙点睛roll 点
message C2SSeekingDragonRoll {
  int32 Point = 1; //固定点数
}
message S2CSeekingDragonRoll {
  int32 Tag = 1;
  int32 Point = 2; // 点数
}

//获取临时背包
message C2SSeekingDragonTemBagList {

}
message S2CSeekingDragonTemBagList {
  repeated ItemInfo Items = 1;
}

//获取临时背包道具
message C2SSeekingDragonTemBag {

}
message S2CSeekingDragonTemBag {
  int32 Tag = 1;
}

//获取阶段奖励
message C2SSeekingDragonPrize {
  int32 Id = 1;
}
message S2CSeekingDragonPrize {
  int32 Tag = 1;
  int32 Id = 2;
}

//事件开启
message S2CSeekingDragonEventOpen {
  string EventUid = 1; //事件唯一值（服务器生成）
  int32 EventId = 2; //事件Id(事件表中的Id)
  int64 OpenTime = 3; //事件开启的时间节点
  int32 Pos = 4; //事件位置
}

//获取所有限时事件
message C2SSeekingDragonGetAllTimeEvent {
}
message S2CSeekingDragonGetAllTimeEvent {
  int32 Tag = 1;
  repeated SDEventInfo SDEventInfo = 2; //限时事件数据
}

//事件行为
message C2SSeekingDragonEventAction {
  string EventUid = 1; //事件唯一值（服务器生成）
  int32 EventId = 2; //事件Id
  int32 Val1 = 3; //具体行为具体处理
  int32 Val2 = 4; //具体行为具体处理
  int32 Val3 = 5; //具体行为具体处理
}
message S2CSeekingDragonEventAction {
  int32 Tag = 1;
  string EventUid = 2; //事件唯一值（服务器生成）
  int32 EventId = 3; //事件Id
  int32 Val1 = 4; //具体行为具体处理
  int32 Val2 = 5; //具体行为具体处理
  int32 Val3 = 6; //具体行为具体处理

}

//一键领取限时事件奖励
message C2SSeekingDragonRecEventReward {
  int32 Id = 1;
}
message S2CSeekingDragonRecEventReward {
  int32 Tag = 1;
  int32 Id = 2;
}

//获取log
message C2SSeekingDragonGetEventLog {
}
message S2CSeekingDragonGetEventLog {
  repeated string Log = 1;
}

///////////////////////////////////////////////////////

//组队副本数据
message TeamInstanceData {
  int32 InstanceType = 1;
  int32 Times = 2; //今日战斗次数
  int32 BuyTimes = 3; //今日购买次数
  int32 MaxStage = 4; //最大关卡
  //    int32 MaxRound = 5; //最大回合数 废弃
  int32 MinRound = 6; //最小回合数
}
//组队用户数据
message TeamPlayer {
  int64 UserId = 1;
  string Nick = 2;
  int64 AreaId = 3; //区ID
  int32 ShowHead = 4; //头像
  int32 ShowHeadFrame = 5; //头像框
  int64 FightValue = 6; //战力值
  int32 VipLevel = 7; //vip等级
  int32 ShowHeroId = 8; //出战英雄Id
  int32 ShowHeroLevel = 9; //出战英雄等级
  int32 ShowHeroQuality = 10; //出战英雄品质
  int32 ShowHeroGrade = 11; //出战英雄阶级
  int32 ShowHeroStar = 12; //出战英雄星级
  string World = 13;
  int32 HideVIP = 14; //Vip等级是否屏蔽  0正常显示  1屏蔽
  int64 LogoutTime = 15; //玩家离线时间
}
//返回组队副本数据
message S2CTeamInstanceData {
  repeated TeamInstanceData Items = 1;
}
//组队副本开始匹配
message C2STeamInstanceMatching {
  int32 InstanceType = 1;
}
//组队副本匹配结果
message S2CTeamInstanceMatching {
  int32 Tag = 1;
  int32 InstanceType = 2;
  repeated TeamPlayer Players = 3;
}
//开始战斗
message C2STeamInstanceStartFight {
  int32 InstanceType = 1;
  repeated int64 UserIds = 2;
}
//请求战报
message C2STeamInstanceGetReport {
  int32 InstanceType = 1;
  int32 Index = 2;
}
message S2CTeamInstanceGetReport {
  int32 Tag = 1;
  int32 InstanceType = 2;
  int32 Index = 3;
  int32 Total = 4;
  S2CBattlefieldReport Report = 5;
}
//购买
message C2STeamInstanceBuyTimes {
  int32 InstanceType = 1;
}
message S2CTeamInstanceBuyTimes {
  int32 Tag = 1;
  int32 InstanceType = 2;
}
message C2STeamInstanceSweep {
  int32 InstanceType = 1;
}
//扫荡
message S2CTeamInstanceSweep {
  int32 Tag = 1;
  int32 InstanceType = 2;
}

// 冲榜转盘积分奖励
message C2STurnTabGearPrize {
  int32 ActId = 1;
  int32 PrizeId = 2;
}
message S2CTurnTabGearPrize {
  int32 Tag = 1;
}

// 冲榜转盘积分奖励领取状态
message C2STurnTabGearPrizeState {
  int32 ActId = 1;
}
message S2CTurnTabGearPrizeState {
  int32 Tag = 1;
  repeated TurnTabGearPrizeState TurnTabGearPrizeState = 2;
}
message TurnTabGearPrizeState {
  int32 PrizeId = 1;
  int32 State = 2;
}

/******************************************直购礼包***********************************************/
// 直购礼包数据
message DirectGift {
  int32 GoodID = 1; //商品id与充值商城表ID对应
  string GoodName = 2; //商品名字
  //    repeated ItemInfo ItemSt = 3; //礼包内容
  int64 EndTime = 4; //礼包结束时间戳，为0表示无结束时间
  int32 CostNum = 5; //购买价格
  int32 OpenWin = 6; //是否弹窗提醒，1是
  string BgImg = 7; //背景资源ID
  string AdvImg = 8; //广告图资源ID
  int32 IconImg = 9; //图标资源ID
  int32 GroupOrder = 10; //礼包组在界面上的排序值
  int32 State = 11; //商品状态，0正常，2已购买未领奖
  int32 Pre = 12; //预制体类型
  string ItemStr = 13; //礼包内容
  string PrizeShow = 14; //大奖展示类型和资源
  int32 IconShowAnim = 15; //ICON上是否展示模型    0否   1是
  int32 BuyTimes = 16; //IOS充值次数
  int32 TotalTimes = 17; //IOS礼包需要充值总次数
  string AnimationShow = 18;
  int64 OpenTime = 19;
}

//数据库存储的玩家购买商品次数数据
message DBBuyTimes {
  int32 GoodID = 1; //商品id
  int32 BuyTimes = 7; //IOS充值次数
}

//数据库存储的玩家直购礼包数据
message DBDirectGift {
  int32 GoodID = 1; //商品id与充值商城表ID对应
  int32 State = 2; //商品状态，0正常，2已购买未领奖，11已购买过结束，12过期结束
  int32 Times = 3; //已轮循次数
  int64 OpenTime = 4; //本次开启时间
  int32 JustEnd = 5; //标记是否是本组中最近一次结束的礼包，准备切换至下一个
  int64 EndTime = 6; //上次结束时间
  int32 BuyTimes = 7; //IOS充值次数
}

//数据库存储的玩家直购礼包组数据
message DBDirectGiftGroup {
  int32 GroupID = 1; //礼包组ID
  int32 Times = 3; //已轮循次数
}

//上线推送、随时推送的直购礼包数据
message S2CDirectGift {
  repeated DirectGift List = 1; //所有需要显示的礼包数据
}

//领取礼包奖励
message C2SGetDirectGiftPrize {
  int32 GoodID = 1; //要领取奖励的礼包ID
}
message S2CGetDirectGiftPrize {
  int32 Tag = 1; //标志
  int32 GoodID = 2; //要领取奖励的礼包ID
}

/******************************************时光商店***********************************************/
message DBTimeShop {
  int32 GoodID = 1; //商品id与充值商城表ID对应
  int32 Amount = 2; //商品价格
  int32 State = 3; //礼包状态 0 未购买；2 已购买；3 已领取；
  int32 BuyTimes = 4; //IOS充值次数
}

//刷新时光商店
message C2SRefreshTimeShop {
}
message S2CRefreshTimeShop {
  int32 Tag = 1;
}

//上线推送、随时推送的时光礼包数据
message C2STimeShopGift {
}
message S2CTimeShopGift {
  repeated DirectGift List = 1; //所有需要显示的礼包数据
}

//领取时光礼包奖励
message C2SGetTimeShopGiftPrize {
  int32 GiftId = 1;
}
message S2CGetTimeShopGiftPrize {
  int32 Tag = 1;
}

/******************************************月光宝盒***********************************************/
message DBMoonlightBox {
  int32 GoodID = 1; //商品id与充值商城表ID对应
  int32 Amount = 2; //商品价格
  int32 State = 3; //礼包状态 0 未购买；2 已购买；3 已领取；
  int32 BuyTimes = 4; //IOS充值次数
}

//刷新月光商店
message C2SRefreshMoonlightBox {
}
message S2CRefreshMoonlightBox {
  int32 Tag = 1;
}

//上线推送、随时推送的月光礼包数据
message C2SMoonlightBoxGift {
}
message S2CMoonlightBoxGift {
  repeated DirectGift List = 1; //所有需要显示的礼包数据
}

//领取月光礼包奖励
message C2SGetMoonlightBoxGiftPrize {
  int32 GiftId = 1;
}
message S2CGetMoonlightBoxGiftPrize {
  int32 Tag = 1;
}

/******************************************神秘商店***********************************************/
// 神秘商店商品数据
message SecretMall {
  int32 Id = 1; //商品id
  int64 State = 2; //0可购买，1已购买
}

//上线推送、随时推送的商店数据
message S2CSecretMallList {
  repeated SecretMall List = 1; //神秘商店商品列表
  int64 NextTime = 2; //下次刷新时间戳
}

//购买
message C2SSecretMallBuy {
  int32 GoodID = 1; //商品id
}
message S2CSecretMallBuy {
  int32 Tag = 1; //标志
  int32 GoodID = 2; //商品id
  string TagP = 3; //错误参数
}

//手动刷新
message C2SSecretMallRefresh {
}
message S2CSecretMallRefresh {
  int32 Tag = 1; //标志
  string TagP = 2; //错误参数
}

//点开神秘商店时往服务端发包
message C2SSecretMallOpen {

}

//数据库存储的玩家活动积分数据
message DBActScore {
  int32 ActId = 1; //活动Id
  int64 ActScore = 2; //活动积分
}
message S2CActScore {
  int32 ActId = 1; //活动Id
  int64 ActScore = 2; //活动积分
}

/******************************************特殊登录提醒***********************************************/
message S2CSpecialLoginTips {
  int32 TipsId = 1; //提醒Id
  int32 Priority = 2; //提醒优先级
  repeated int32 TipsArr = 3; //达标的提醒Id
  int64 Head = 4;
  int64 HeadFrame = 5;
  string Nick = 6;
  int32 FamilySid = 7;
  string FamilyName = 8;
  int64 FightValue = 9;
  int32 Vip = 10;
  int32 AreaId = 11; // 玩家注册区服Id
  int64 UserId = 12;
  string World = 13;
  int32 HideVIP = 14; //Vip等级是否屏蔽  0正常显示  1屏蔽
}

/********************************奇遇活动********************************/
//通知活动开启
message S2CActLuckOpen {
  repeated int32 ActId = 1; //活动Id数组
}

//进入场景
message C2SActLuckEnter {
  int32 ActId = 1; //活动Id
}
message S2CActLuckEnter {
  int32 Tag = 1; //标志
  int32 ActId = 2; //活动Id
}

//进入战斗
message C2SActLuckFight {
  int32 ActId = 1; //活动Id
}
message S2CActLuckFight {
  int32 Tag = 1; //标志
  int32 ActId = 2; //活动Id
  int32 Win = 3; //
}

//离开场景
message C2SActLuckLeave {
  int32 ActId = 1; //活动Id
}
message S2CActLuckLeave {
  int32 Tag = 1; //标志
  int32 ActId = 2; //活动Id
}

/******************************************巅峰竞技***********************************************/

message DBNBAData {
  int32 Session = 1; //第几届
  int32 State = 2; //当前状态值
  int64 StartTime = 3; //这一届淘汰赛开始时间
  repeated int64 SignPlayers = 4; // 本界活动报名玩家
  repeated NBAFinalData FinalPlayers = 5; // 淘汰赛玩家对阵数据
  repeated int64 AutoPlayers = 6; // 本界活动托管玩家
  repeated NBAFightReport Reports = 7; // 巅峰竞技淘汰赛战报保存
}

//巅峰竞技战报
message NBAFightReport {
  int64 UserId1 = 1; //战斗用户
  int64 UserId2 = 2; //战斗用户
  S2CBattlefieldReport Report = 3; //战报
}

//获取巅峰竞技淘汰赛的战报
message C2SGetNBAFightReport {
  int64 UserId1 = 1; //战斗用户
  int64 UserId2 = 2; //战斗用户
}
message S2CGetNBAFightReport {
  int32 Tag = 1;
  ShowUserInfo user1 = 2;
  ShowUserInfo user2 = 3;
  S2CBattlefieldReport Report = 4; //战报
}

//拉取巅峰竞技活动状态
message C2SNBAState {
}
message S2CNBAState {
  //0	    报名未开始
  //1	    报名进行中
  //2	    报名已结束，准备预选赛
  //3	    预选赛进行中
  //4	    预选赛已结束，准备淘汰赛
  //11	淘汰赛第1轮进行中
  //12	淘汰赛第2轮进行中
  //13	淘汰赛第3轮进行中
  //14	淘汰赛第4轮进行中
  //20    淘汰赛已结束，准备下周开启新一轮报名
  int32 State = 1; //活动状态值
  int32 Auto = 2; //自己是否托管，0否1是
}

//报名预选赛
message C2SNBASign {
}
message S2CNBASign {
  int32 Tag = 1; //标志
}

//获取当前报名人数
message C2SNBASignCount {
}
message S2CNBASignCount {
  int32 Count = 1; //人数
  int32 Self = 2; //自己是否已报名，0否，1是
}

//获取上一届竞技之王数据
message C2SNBALastWin {
}
message S2CNBALastWin {
  int32 Tag = 1; //标志
  int64 UserId = 2; //用户编号
  repeated IntAttr A = 3;
  repeated StrAttr B = 4;
}

//获取竞技名人堂数据
message NBAFrame {
  int64 UserId = 1; //用户编号
  int32 Rank = 2; //排名
  int32 Head = 3; //头像
  int32 HeadFrame = 4; //头像框
  int32 Area = 5; //区Id
  string Nick = 6; //昵称
  int64 FV = 7; //战力
  int32 Times = 8; //竞技之神次数
  string World = 9; //世界
}
message C2SNBAFrame {
}
message S2CNBAFrame {
  int32 Tag = 1; //标志
  repeated NBAFrame List = 2; //排名数据
  int32 MyRank = 3; //我的排名
  int32 MyTimes = 4; //我的次数
}

//获取本届淘汰赛对阵数据
message NBAFinalData {
  int32 Pos = 1; //所属对阵位置
  int64 UserId = 2; //玩家Id
  int32 Head = 3; //头像
  int32 HeadFrame = 4; //头像框
  int32 Area = 5; //区Id
  string Nick = 6; //昵称
  int64 FV = 7; //战力
  int32 Times = 8; //竞技之神次数
  int32 Level = 9; //等级，由转生、重数、真是等级拼接后的长int
  int32 Realm = 10; //境界
  int32 VIP = 11; //VIP等级
  repeated int32 Guess = 12; //自己竞猜数据，为押注名次Int数组，如押注其可以进入决赛并获得冠军，则数据是[1,2]
  int32 State = 13; //（服务端用）位置状态，0未开始，1准备中，2进行中，3已结束
  int32 Win = 14; //（服务端用）战斗结果，0战斗中，1胜利，2失败
  int32 FightEnd = 15; //（服务端用）战斗状态，0战斗中，1已结束
  string World = 16; //世界
  int32 HideVIP = 17; //Vip等级是否屏蔽  0正常显示  1屏蔽
  int32 HaveSaveReport = 18; //0 没有保存战报，1已经保存战报
}

//客户端通知服务端本人的战报已经播放完毕
message C2SNBAFinalFightEnd {
}

message C2SNBAFinalData {
}

//主动拉、预选赛结束、淘汰赛开始、淘汰赛每一轮结束，会推这个包。
//前端：如果玩家在野外挂机，且自己是16强，则弹框提示
//前端：如果玩家在这个界面，则刷新对阵列表
message S2CNBAFinalData {
  repeated NBAFinalData List = 1; //对阵数据
}

//预选赛之后给所有玩家推送
message S2CNBAFinalDataOnPreEnd {
  int32 Result = 1; //自己预选赛的状态，0未参加，1被淘汰，2晋级16强
  repeated NBAFinalData List = 2; //淘汰赛对阵数据
}

//竞猜
message NBAGuess {
  int64 MyId = 1; //竞猜玩家Id
  int64 UserId = 2; //竞猜对象ID
  int32 Rank = 3; //竞猜对象能获得名次，1：冠军    2：决赛    3：4强    4：8强
}
message C2SNBAGuess {
  int64 UserId = 1; //竞猜对象ID
  int32 Rank = 2; //竞猜对象能获得名次，1：冠军    2：决赛    3：4强    4：8强
}
message S2CNBAGuess {
  int32 Tag = 1; //标志
  string TagP = 2; //错误信息
  int64 UserId = 3; //竞猜对象ID
  int32 Rank = 4; //竞猜对象能获得名次，1：冠军    2：决赛    3：4强    4：8强
}

//开始匹配
message C2SNBAMatch {
}
//当前的匹配数据。发生变化时会重发
message S2CNBAMatch {
  int32 SelfReady = 1; //自己是否已准备，0否1是
  int32 TargetReady = 2; //对方是否已准备，0否1是
  int64 EndTime = 3; //倒计时到期时间戳
  NBAFinalData Target = 4; //对方数据。若对方没点匹配，则此数据为空，显示匹配中
  int32 State = 5; //当前的倒计时状态。0表示准备阶段倒计时，1表示战斗倒计时，2匹配已结束，关闭弹窗
}

//淘汰赛单场战斗结果。自己晋级或淘汰后自动发这个包
message S2CNBAMatchResult {
  //结果类型：
  //0：自己被淘汰。Data为自己最终排名Id。（2：决赛  3：4强  4：8强  5：16强）
  //1：晋级下一轮。Data为自己最终排名Id。（1：冠军，2：决赛  3：4强  4：8强  5：16强）
  int32 Type = 1;
  int32 Data = 2;
}

//预选赛自己的积分和排名，进入场景和发生变化实时推送
message S2CNBAPreScore {
  int32 Score = 1; //积分
  int32 Rank = 2; //排名
}

//预选赛开始时给所有报名的玩家推送，提醒入场
message S2CNBAPreStart {
}

//巅峰竞技结束后推送竞技之神产生
message S2CNBAFinalEnd {
}

//购买一次托管
message C2SNBABuyAuto {
}
message S2CNBABuyAuto {
  int32 Tag = 1;
  string TagP = 2;
}

/***********************************************遗迹争夺*******************************************************/
//遗迹信息
message YiJiInfo {
  int32 Id = 1; //遗迹Id
  int32 OccupiedAreaId = 2; //占领区服Id
  string OccupiedSectName = 3; //占领区服仙宗名称
  int32 BossState = 4; //Boss状态  0,死亡  1,复活
  int64 ReliveTimestamp = 5; //复活时间戳
  int64 SceneCloseTime = 6; //场景关闭时间戳
  int64 bossLockBloodTime = 7; //Boss无敌状态时间戳
  int32 isOpen = 8; //遗迹是否开启 0未开启 1开启
  string World = 9; //世界简称
}
//向客户端发送遗迹信息
message C2SYiJiInfo {
}
message S2CYiJiInfo {
  repeated YiJiInfo Items = 1;
}

//遗迹中的玩家信息
message YiJiPlayerData {
  int64 UserId = 1; //玩家Id
  string Nick = 2; //昵称
  int64 AreaId = 3; //区服Id
  string FamilyId = 4; //家族
  int32 Head = 5; //头像资源ID
  int32 HeadFrame = 6; //头像框资源ID
  int64 FightValue = 7; //战力
  int64 ShowAreaId = 8; //展示区服Id
  int64 LoginAreaId = 9; //登录区服Id
  string World = 10; //世界简称
}

////遗迹中的委拖信息
//message YiJiEntrustData {
//    YiJiPlayerData player = 1; //相关玩家
//    int32 EntrustType = 2; //委托类型 1委托别人  2受别人委托
//    int32 EntrustState = 3; //委托状态 0没有关系  1请求中  2建立委托关系
//    int32 EntrustTimes = 4; //委托次数 (用于委托墙)
//    int32 LeftTimes = 5;    //剩余次数 (用于委托墙)
//}
//
//message DBYiJiEntrustData {
//    int64 PlayerId = 1; //相关玩家Id
//    int32 EntrustType = 2; //委托类型 1委托别人  2受别人委托
//    int32 EntrustState = 3; //委托状态 0没有关系  1请求中  2建立委托关系
//}
//message DBYiJiEntrustAll {
//    int64 MyId = 1; //玩家Id
//    repeated DBYiJiEntrustData Items = 2; //相关玩家列表
//}
//
////更新遗迹中的委拖信息
//message S2CChangeYiJiEntrustData {
//    YiJiEntrustData Data = 1;
//}
//
////请求可以委托的列表
//message C2SGetYiJiEntrustList {
//}
//message S2CGetYiJiEntrustList {
//    repeated YiJiEntrustData List = 1; //可以委托的列表
//    //    repeated YiJiEntrustData HaveList = 2; //有关系的列表
//}
//
////委托
//message C2SYiJiEntrust {
//    int64 UserId = 1;
//}
//message S2CYiJiEntrust {
//    int32 Tag = 1;
//    int64 UserId = 2;
//}
//
////回应委托
//message C2SResponseYiJiEntrust {
//    int64 UserId = 1;
//    int32 Result = 2; //回应结果  1同意  2拒绝
//}
//message S2CResponseYiJiEntrust {
//    int32 Tag = 1;
//    int64 UserId = 2;
//}
//
////取消委托
//message C2SCancelYiJiEntrust {
//    int64 UserId = 1;
//}
//message S2CCancelYiJiEntrust {
//    int32 Tag = 1;
//    int64 UserId = 2;
//}

message YiJiAreaScoreData {
  int32 AreaId = 1; //展示区服Id
  string SectName = 2; //仙宗名称
  int32 Score = 3; //积分
  int32 LoginAreaId = 4; //登录区服Id
  string World = 5; //世界简称
}
//获取具体遗迹的积分排行信息
message C2SYiJiScoreRank {
  int32 Id = 1; //遗迹Id
}
message S2CYiJiScoreRank {
  int32 Id = 1;
  repeated YiJiAreaScoreData Items = 2;
}

//遗迹争夺进入场景
message C2SYiJiJoinScene {
  int32 Id = 1; //遗迹Id
}
message S2CYiJiJoinScene {
  int32 Id = 1; //遗迹Id
  int32 Tag = 2;
}

//遗迹争夺离开场景
message C2SYiJiLeaveScene {
  int32 Id = 1; //遗迹Id
}
message S2CYiJiLeaveScene {
  int32 Id = 1; //遗迹Id
  int32 Tag = 2;
}

//附近敌对玩家
message C2SYiJiNearbyEnemyPlayer {
  int32 Id = 1; //遗迹Id
}
message S2CYiJiNearbyEnemyPlayer {
  int32 Id = 1; //遗迹Id
  repeated YiJiPlayerData Players = 2;
}

message YiJiDamageData {
  YiJiPlayerData Player = 1; //玩家信息
  int32 Order = 2; //排名
  int64 Damage = 3; //伤害值
}
//伤害排行
message C2SYiJiDamageRank {
  int32 Id = 1; //遗迹Id
}
message S2CYiJiDamageRank {
  int32 Id = 1; //遗迹Id
  repeated YiJiDamageData Items = 2;
}

//归属玩家
message S2CYiJiOwnerPlayer {
  YiJiPlayerData Player = 1;
  int32 HpPercent = 2;
}

//放弃归属
message C2SYiJiGiveUpOwner {
  int32 Id = 1; //遗迹Id
}
message S2CYiJiGiveUpOwner {
  int32 Tag = 1;
}

//召唤帮手
message C2SYiJiCallHelp {
  int32 Id = 1; //遗迹Id
}
message S2CYiJiCallHelp {
  int32 Tag = 1;
}
//获得归属奖励或者，委托奖励
message S2CYiJiFlyPrize {
  repeated ItemNum Items = 1;
}

//遗迹争夺活动结束
message S2CYiJiActEnd {
}

//遗迹争夺离线玩家发邮件
message DBYiJiMailData {
  int64 ClearTime = 1; //过期时间戳
  int64 UserId = 2; //玩家Id
  string Param = 3; //邮件参数
  repeated ItemData Items = 4; //邮件奖励
  int32 MailTpl = 5; //邮件Id
  int32 ItemChangeType = 6; //邮件奖励类型
}

/***********************************************仙宗悬赏*******************************************************/
message DBPlayerXZXS {
  int32 Level = 1; //悬赏等级
  int32 CurExp = 2; //当前悬赏经验
  int64 ResetTimestamp = 3; //重置任务时间戳
  int32 HaveReset = 4; //是否已经重置过 (0没有重置   1已经重置)
  repeated XZXSTask Tasks = 5; //悬赏任务
  repeated XZXSHelpPartner XZXSHelpPartner = 6; //共享给别人的协助伙伴
}
//仙宗悬赏信息
message C2SPlayerXZXS {
}
message S2CPlayerXZXS {
  int32 Level = 1; //悬赏等级
  int32 MaxLevel = 2; //最高悬赏等级
  int32 CurExp = 3; //当前悬赏经验
  int64 ResetTimestamp = 4; //重置任务时间戳
  repeated XZXSTask Tasks = 5; //悬赏任务
}

//仙宗悬赏任务
message XZXSTask {
  int64 TaskId = 1; //任务Id
  int32 TaskNameId = 2; //任务名称(配置表Id)
  int32 Star = 3; //任务星级
  int64 TaskDuration = 4; //任务时长
  int32 TaskExp = 5; //任务悬赏经验
  repeated ItemInfo TaskPrize = 6; //任务奖励
  int32 PartnerNum = 7; //接取任务所需的伙伴数量(任务条件：必有条件)
  repeated int32 TaskConditionId = 8; //任务条件Id：(伙伴特性条件)
  int32 TaskFateId = 9; //缘分Id：(缘分条件)
  int32 TaskState = 10; //任务状态(0未接取未进行 1已接取进行中 2已完成待领取)
  int32 TaskFateOk = 11; //缘分条件是否达成
  int64 TaskTimestamp = 12; //任务完成时间戳
  repeated XZXSPartner partners = 13; //上阵伙伴
}

//仙宗悬赏伙伴
message XZXSPartner {
  int32 PType = 1; //伙伴类型(1宠物 2天仙 3战神)
  int32 Id = 2; //可读表的Id
  string IdStr = 3; //全局唯一Id(宠物使用)
  int32 Quality = 4; //品质
  int32 Rarity = 5; //稀有度
  int64 TaskId = 6; //如果该伙伴在某个任务中上阵,记录该任务。伙伴没有上阵,值为0
  int64 UserId = 7; //玩家Id 如果该伙伴是协助伙伴 该字段标记伙伴所有人的Id
  string Nick = 8; //昵称
  int64 AreaId = 9; //区服Id
  string FamilyId = 10; //家族
  int32 PetType = 11; //用于宠物伙伴
}

//仙宗悬赏刷新任务
message C2SXZXSRefreshTask {
}
message S2CXZXSRefreshTask {
  int32 Tag = 1;
}

message XZXSStartTaskData {
  int64 TaskId = 1; //任务Id
  repeated XZXSPartner partners = 2; //上阵伙伴
}
//仙宗悬赏开始任务(派遣、接取任务)
message C2SXZXSStartTask {
  XZXSStartTaskData Data = 1;
}
message S2CXZXSStartTask {
  int32 Tag = 1;
  XZXSTask Task = 2;
}

//仙宗悬赏获取可以派遣的所有任务
message C2SXZXSGetAllCanStartTask {
}
message S2CXZXSGetAllCanStartTask {
  int32 Tag = 1;
  repeated XZXSStartTaskData Data = 2;
}

//仙宗悬赏一键开始一组任务(派遣、接取任务)
message C2SXZXSOneKeyStartTask {
  repeated XZXSStartTaskData Datas = 1;
}
message S2CXZXSOneKeyStartTask {
  repeated XZXSTask Tasks = 1;
}

//仙宗悬赏任务领取奖励
message C2SXZXSGetTaskPrize {
  int64 TaskId = 1; //任务Id 0一键领取
}
message S2CXZXSGetTaskPrize {
  int32 Tag = 1;
  repeated int64 TaskIds = 2; //成功领取的Id列表
}

message XZXSHelpPartner {
  XZXSPartner Partner = 1; //伙伴
  int32 Id = 2; //数组Id
  int64 LockedTimestamp = 3; //锁定到期时间戳
}

//仙宗悬赏协助伙伴列表
message C2SXZXSGetHelpPartnerList {
}
message S2CXZXSGetHelpPartnerList {
  repeated XZXSHelpPartner Items = 1;
}

//仙宗悬赏协助伙伴保存设置
message C2SXZXSHelpPartnerSave {
  repeated XZXSHelpPartner Items = 1;
}
message S2CXZXSHelpPartnerSave {
  repeated XZXSHelpPartner Items = 1;
}

//仙宗悬赏我可以使用的别人的协助伙伴列表
message C2SXZXSGetOthHelpPartnerList {
}
message S2CXZXSGetOthHelpPartnerList {
  repeated XZXSPartner Items = 1;
}
message DBXZXSHelpPartner {
  int64 UserId = 1; //玩家Id
  repeated XZXSPartner Partner = 2; //玩家的助战伙伴
}

/***********************************************家族领地战*******************************************************/
/***************家族领地数据结构***************/
//领地战整体活动信息
message CityWarData {
  //当前活动状态，0未开启，1第一轮宣战，2第一轮战斗且第二轮可宣战，3第二轮战斗且第三轮宣战，4第三轮战斗，5结束
  int32 ActState = 1;
  repeated CityData CityData = 2; //每个城的数据
  int32 Session = 3; //当前第几届
}

//领地战每个城池信息
message CityData {
  int32 CityId = 1; //城池ID
  //当前城市状态，0未开启，1宣战中，2战斗中，3已结束
  int32 CityState = 2;
  repeated CityFamily Familys = 3; //已经宣战的家族数组
  string WinnerFamily = 4; //获胜家族
}

//领地战每个城池的参战家族信息
message CityFamily {
  string FamilyId = 1; //家族ID
  string FamilyName = 2; //家族名称
  int32 FamilyArea = 3; //家族区ID
  repeated CityPlayer Player = 4; //本家族参战人员数据
  int32 FamilyScore = 5; //家族总积分
  int32 FamilyState = 6; //家族状态，0战斗中或失败，1胜利
  string World = 7; //家族所在世界
}

//领地战每个玩家信息
message CityPlayer {
  int64 Id = 1; //玩家ID
  string FamilyId = 2; //所属家族ID
  int32 AreaId = 3; //玩家区服ID
  string Nick = 4; //玩家昵称
  int32 Kill = 5; //击杀玩家数量
  int32 Score = 6; //当前积分
  int32 Rank = 7; //排名
  int32 Head = 8; //头像
  int32 HeadFrame = 9; //头像框
  int64 PVPCD = 10; //PVP冷却倒计时，到期时间戳
  string World = 11; //世界
}

/***************家族领地战详细接口***************/
//获取领地战基础数据，包括活动状态、城池状态、家族状态
message C2SGetCityWarData {
}
//领地战基础数据，包括活动状态、城池状态、家族状态。发生变化会主动推
message S2CCityWarData {
  CityWarData Data = 1; //数据
}

//获取自己家族可宣战的城池ID
message C2SGetCityWarChooseItem {
}
message S2CGetCityWarChooseItem {
  repeated int32 Id = 1; //可宣战的城池Id
}

//领地战获得个人击杀榜数据
message C2SCityWarKillRank {
}
message S2CCityWarKillRank {
  repeated CityPlayer List = 1; //排行榜数据，已排序
  CityPlayer MyData = 2; //我的排名数据
}

//领地战宣战
message C2SCityWarChoose {
  int32 Id = 1; //要宣战的城池Id
}
message S2CCityWarChoose {
  int32 Tag = 1; //操作标记
  int32 Id = 2; //宣战的城池Id
}

//获取领地战地图中显示的归属、家族积分。进入地图、数据变化会主动推
message S2CCityWarMapData {
  repeated CityFamily Familys = 1; //地图中各家族数据，主要获取积分
}
//我当前的积分、击杀数、PVP冷却倒计时，进入地图、数据变化主动推
message S2CCityWarMyScore {
  int32 Kill = 1; //击杀玩家数量
  int32 Score = 2; //当前积分
  int64 PVPCD = 3; //PVP冷却倒计时，到期时间戳
}
//所有水晶的情况，进入地图、数据变化主动推
message S2CCityWarCrystal {
  repeated CityWarCrystal Data = 1; //所有水晶数组
}
message CityWarCrystal {
  int64 Id = 1; //水晶ID，Id从底层的Monster身上获取
  int32 State = 2; //状态，0中立没有归属，1自己归属，2敌方归属
  string FamilyId = 3; //归属家族Id
  string FamilyName = 4; //归属家族名称
  int32 FamilyArea = 5; //归属家族区ID
  repeated CityWarCrystalDamage Damange = 6; //此水晶的伤害排行榜，已排序
  string FamilyWorld = 7;
}
//水晶伤害记录
message CityWarCrystalDamage {
  string FamilyId = 1; //家族Id
  string FamilyName = 2; //家族名称
  int32 FamilyArea = 3; //家族区ID
  int64 Damange = 4; //伤害值
  string FamilyWorld = 5;
}
//水晶被攻击后，推这个包
message S2CCityWarCrystalDamange {
  int64 Id = 1; //水晶ID，Id从底层的Monster身上获取
  repeated CityWarCrystalDamage Data = 2;
}

//开宝箱、采集倒计时前，前端向后端发此包
message C2SCityWarPrepareOpenBox {
  int32 Type = 1; //1开始保护 2取消保护
}
message S2CCityWarPrepareOpenBox {
  int32 Tag = 1;
  int32 Type = 2; //1开始保护 2取消保护
}

//开宝箱、采集倒计时结束后，前端向后端发此包
message C2SCityWarOpenBox {
  int64 Id = 1; //宝箱、草药ID，Id从底层的Monster身上获取
}
message S2CCityWarOpenBox {
  int32 Tag = 1;
  int64 Id = 2; //宝箱、草药ID
}

//一键捐献
message C2SCityWarGive {
}
message S2CCityWarGive {
  int32 Tag = 1;
}

//清空PVP冷却倒计时
message C2SCityWarCleanPVPCd {
}
message S2CCityWarCleanPVPCd {
  int32 Tag = 1;
  string TagP = 2;
}

//当城池产生胜者时，推送给地图内所有玩家，显示结算弹窗
message S2CCityWarWinner {
  string FamilyId = 1; //归属家族Id
  string FamilyName = 2; //归属家族名称
  int32 FamilyArea = 3; //归属家族区ID
  int32 IsMyFamily = 4; //获胜方是否是自己的家族
  string CityName = 5; //城池名字
  string FamilyWorld = 6;
}
//当宣战数据发生变化时，推送此包，通知客户端重新拉数据
message S2CCityWarChooseChange {
}
//当被其他玩家击杀时推这个包
message S2CCityWarDead {
  string PlayerName = 1; //攻击方名称
  string FamilyName = 2; //攻击方家族名称
  int32 FamilyArea = 3; //攻击方家族区ID
  string World = 4; //世界
}

/***********************************************仙宗城战*******************************************************/
/***************仙宗城战数据结构***************/
//仙宗城战整体活动信息
message SectWarData {
  //当前活动状态，0未开启，1第一轮宣战，2第一轮战斗且第二轮可宣战，3第二轮战斗且第三轮宣战，4第三轮战斗，5结束
  int32 ActState = 1;
  repeated SectCityData CityData = 2; //每个城的数据
  int32 Session = 3; //当前第几届
  repeated CityPrize CityPrize = 4; //城池领奖记录
  repeated SectCityPlayer Rank1 = 5;
  repeated SectCityPlayer Rank2 = 6;
  repeated SectCityPlayer Rank3 = 7;
  int32 CrystalDie = 8; //是否击败了水晶
}
//城池领奖记录
message CityPrize {
  int64 PlayerId = 1; //玩家ID
  repeated int32 Prize = 2; //城池领奖记录
}

//宗主榜信息
message SectLeaderInfo {
  int64 Id = 1; //宗主ID
  int32 AreaId = 2; //区Id
  string Nick = 3; //宗主昵称
  int64 FV = 4; //宗主战力
  int64 Head = 5; //宗主头像
  int64 HeadFrame = 6; //宗主头像框
  int64 VIP = 7; //VIP
  string SectNick = 8; //仙宗名称
  string FamilyNick = 9; //家族名称
  int32 ShowAreaId = 10; //显示区ID
  string World = 11; //世界
  int32 HideVIP = 12; //Vip等级是否屏蔽  0正常显示  1屏蔽
}

//仙宗城战每个城池信息
message SectCityData {
  int32 CityId = 1; //城池ID
  //当前城市状态，0未开启，1宣战中，2战斗中，3已结束
  int32 CityState = 2;
  repeated CitySect Sects = 3; //已经宣战的仙宗数组
  int32 WinnerSect = 4; //获胜仙宗id
  int32 PrizeState = 5; //自己的占领奖励领取状态。0已领取。1可领取占领奖励，2可领取参予奖励
  int32 WinnerSectShowId = 6; //获胜仙宗显示区id
  int32 DieCount = 7; //最多死亡次数
  int64 DiePlayerId = 8; //死亡最多玩家ID
  repeated SectWarWarriorScore SectWarWarriorScore = 9; //战神雕像积分
  repeated SectWarWarriorPlayerScore SectWarWarriorPlayerScore = 10; //战神雕像每个玩家积分
  repeated SectWarWarriorScore SectWarAnimalScore = 11; //神兽积分
  repeated SectWarWarriorPlayerScore SectWarAnimalPlayerScore = 12; //神兽每个玩家积分
  repeated SectWarWarriorScore SectWarLeaderScore = 13; //宗主雕像积分
  repeated SectWarWarriorPlayerScore SectWarLeaderPlayerScore = 14; //宗主雕像每个玩家积分
  repeated SectWarWarriorScore SectWarCrystalScore = 15; //水晶积分
  repeated SectWarWarriorPlayerScore SectWarCrystalPlayerScore = 16; //水晶每个玩家积分
  repeated SectCurMonster SectCurMonsterData = 17; //仙宗城战当前攻击怪物类型
}

//仙宗城战当前攻击怪物类型
message SectCurMonster {
  int32 SectArea = 1; //仙宗区ID
  int32 CurMonster = 2; //己方仙踪当前应该攻击雕像类型 5战神雕像 6神兽 7宗主雕像 8水晶
}

//仙宗城战每个城池的参战仙宗信息
message CitySect {
  string SectName = 2; //仙宗名称
  int32 SectArea = 3; //仙宗区ID
  repeated SectCityPlayer Player = 4; //本仙宗参战人员数据
  int32 SectScore = 5; //仙宗总积分
  int32 SectState = 6; //仙宗状态，0战斗中或失败，1胜利
  int32 ShowAreaId = 7; //显示区ID
  repeated int32 IncreaseBuff = 8; //增益buff
  string World = 9; //世界
}

//仙宗城战每个玩家信息
message SectCityPlayer {
  int64 Id = 1; //玩家ID
  string SectId = 2; //所属仙宗ID
  int32 AreaId = 3; //玩家区服ID
  string Nick = 4; //玩家昵称
  int32 Kill = 5; //击杀玩家数量
  int32 Score = 6; //当前积分
  int32 Rank = 7; //排名
  int32 Head = 8; //头像
  int32 HeadFrame = 9; //头像框
  int64 PVPCD = 10; //PVP冷却倒计时，到期时间戳
  int64 PrizeSecond = 11; //当前已累计的奖励时间秒数（后端用）
  int64 NextPrize = 12; //下次获得定时奖励时间戳
  repeated int32 GetScorePrize = 13; //已领取的场景内积分奖励数组，按积分挡位存储
  repeated int32 GetRankPrize = 14; //已领取的积分榜奖励数组，1外城，2内城，3圣城
  repeated int32 GetCityPrize = 15; //已领取的城池占领奖励数组，1外城，2内城，3圣城
  int32 Team = 16; //所属阵营方向，1左2右
  int32 ShowAreaId = 17; //显示区ID
  int32 DieCount = 18; //死亡次数
  repeated int32 EachScore = 19; //每一轮的积分
  repeated int32 EachRank = 20; //每一轮的排名
  int32 MultiKill = 21; //连杀次数
  string World = 22; //世界
}

/***************仙宗城战详细接口***************/
//获取仙宗城战基础数据，包括活动状态、城池状态、仙宗状态
message C2SGetSectWarData {
}
//仙宗城战基础数据，包括活动状态、城池状态、仙宗状态。发生变化会主动推
message S2CSectWarData {
  SectWarData Data = 1; //数据
  repeated int32 GetCityPrize = 2; //已领取的城池占领奖励数组，1外城，2内城，3圣城
}

//获取仙宗城战宗主榜数据
message C2SGetSectWarLeaderInfo {
}
message S2CSectWarLeaderInfo {
  repeated SectLeaderInfo Data = 1; //数据
}

//仙宗城战获得个人积分榜数据
message C2SSectWarScoreRank {
  int32 Type = 1; //榜单类型，1人皇城，2地仙城，3天圣城
}
message S2CSectWarScoreRank {
  int32 Type = 1; //榜单类型，1人皇城，2地仙城，3天圣城
  repeated SectCityPlayer List = 2; //排行榜数据，已排序
  SectCityPlayer MyData = 3; //我的排名数据
}

//获取仙宗城战地图中显示的归属、仙宗积分。进入地图、数据变化会主动推
message S2CSectWarMapData {
  repeated CitySect Sects = 1; //地图中各仙宗数据，主要获取积分
  repeated Skill Increase = 2; //本方增益BUFF效果数组
  int32 WarriorBelong = 3; //战神雕像归属宗门ID
  int32 ShowAreaId = 4; //战神雕像归显示区ID
}

//我当前的积分、击杀数、PVP冷却倒计时，进入地图、数据变化主动推
message S2CSectWarMyScore {
  int32 Kill = 1; //击杀玩家数量
  int32 Score = 2; //当前积分
  int64 PVPCD = 3; //PVP冷却倒计时，到期时间戳
  int64 NextPrize = 4; //下次获得定时奖励时间戳
  repeated int32 GetScorePrize = 5; //已领取的场景内积分奖励数组，按积分挡位存储
  int32 Team = 6; //所属阵营方向，1左2右
}

//开宝箱、采集倒计时结束后，前端向后端发此包
message C2SSectWarOpenBox {
  int64 Id = 1; //宝箱、草药ID，Id从底层的Monster身上获取
}
message S2CSectWarOpenBox {
  int32 Tag = 1;
  int64 Id = 2; //宝箱、草药ID
}

//清空PVP冷却倒计时
message C2SSectWarCleanPVPCd {
}
message S2CSectWarCleanPVPCd {
  int32 Tag = 1;
  string TagP = 2;
}

//当城池产生胜者时，推送给地图内所有玩家，显示结算弹窗
message S2CSectWarWinner {
  int32 ShowAreaId = 1; //归属显示区ID
  string SectName = 2; //归属仙宗名称
  int32 SectArea = 3; //归属仙宗区ID
  int32 IsMySect = 4; //获胜方是否是自己的仙宗
  string CityName = 5; //城池名字
  string World = 6; //世界
  int32 EndWay = 7; //结束方式 1：时间结束 2：积分到达 3：推水晶
}
//当宣战数据发生变化时，推送此包，通知客户端重新拉数据
message S2CSectWarChooseChange {
}
//当被其他玩家击杀时推这个包
message S2CSectWarDead {
  string PlayerName = 1; //攻击方名称
  string SectName = 2; //攻击方仙宗名称
  int32 SectArea = 3; //攻击方仙宗区ID
  int32 Score = 4; //被杀后获得积分数量
  int32 ShowAreaId = 5; //攻击方显示区ID
  string World = 6; //世界
}

//领取场景内积分奖励
message C2SSectWarGetScorePrize {
}
message S2CSectWarGetScorePrize {
  int32 Tag = 1;
  repeated ItemInfo Prize = 2; //奖励内容
}

//领取积分榜奖励
message C2SSectWarGetRankPrize {
  int32 Type = 1; //积分榜类型
}
message S2CSectWarGetRankPrize {
  int32 Tag = 1;
}

//领取城池参与、战领奖励
message C2SSectWarGetCityPrize {
  int32 Layer = 1; //领取第几轮的奖励，1外城2内城3圣城
}
message S2CSectWarGetCityPrize {
  int32 Tag = 1;
  repeated int32 GetCityPrize = 2; //领取后，已领取的城池占领奖励数组，1外城，2内城，3圣城
}

//战神雕像的情况，进入地图、数据变化主动推
message S2CSectWarWarrior {
  int32 State = 1; //状态，0中立没有归属，1自己归属，2敌方归属
  string SectName = 2; //归属仙宗名称
  int32 SectArea = 3; //归属仙宗区ID
  int32 ShowAreaId = 5; //归属显示区ID
  repeated SectWarWarriorScore Score = 4; //战神雕像的积分排行榜，已排序
  int64 MyDamage = 6; //我的战神雕像伤害
  int64 AnimalDamage = 7; //仙踪神兽伤害
  int64 MyAnimalDamage = 8; //我的神兽伤害
  int64 LeaderDamage = 9; //宗主雕像伤害
  int64 MyLeaderDamage = 10; //我的宗主雕像伤害
  int64 CrystalDamage = 11; //水晶伤害
  int64 MyCrystalDamage = 12; //我的水晶伤害
  int32 CurMonster = 13; //己方仙踪当前应该攻击雕像类型 5战神雕像 6神兽 7宗主雕像 8水晶
  string World = 14; //世界
}
//战神雕像的积分记录
message SectWarWarriorScore {
  string SectName = 1; //仙宗名称
  int32 SectArea = 2; //仙宗区ID
  int32 Score = 3; //积分值
  int32 ShowAreaId = 4; //显示区ID
  string World = 5; //世界
}
//战神雕像玩家积分记录
message SectWarWarriorPlayerScore {
  int64 PlayerId = 1; //玩家id
  int64 Damage = 2; //伤害
}

//当前场景死亡最多的玩家Id。进入场景或数据变更时推送
message S2CSectWarDieMostPlayer {
  int32 Id = 1; //玩家ID
  int32 LastId = 2; //上一个获得此称号的玩家ID
}

//获取上一届仙宗城战获胜宗主信息（用于王权荣誉)
message C2SGetSectWarLastWinLeader {
}
message S2CGetSectWarLastWinLeader {
  int32 PlayerId = 1; //玩家ID。若为0表示虚位以待
  int32 AreaId = 2; //所属区ID
  string Nick = 3; //昵称
  string SectNick = 4; //宗门名称
  int32 RoleId = 5; //玩家角色ID
  string FamilyNick = 6; //家族名称
  int32 Praise = 7; //赞美次数
  int32 Realm = 8; //境界等级
  int64 FV = 9; //战力
  string World = 10; //世界
  string SWorld = 11; //仙宗世界
}
//点赞上一届仙宗城战获胜宗主
message C2SPraiseSectWarLastWinLeader {
}
message S2CPraiseSectWarLastWinLeader {
  int32 Tag = 1;
  int32 Praise = 2; //赞美次数
}
//自动获得奖励时发包
message S2CSectWarAutoPrize {
  repeated ItemInfo Prize = 1; //获得的奖励
}
//************************************************主题活动模板2******************************************//
message ThemeAct2Rank {
  int64 UserId = 1; //玩家ID
  int32 Integral = 2; //积分
}

//************************************************幻境副本******************************************//
// 玩家展示信息
message ShowUserInfo {
  int64 UserId = 1;
  string Nick = 2; //昵称
  int64 ShowAreaId = 3; //显示区服Id
  string FamilyId = 4; //家族
  int32 ShowHead = 5; //头像资源ID
  int32 ShowHeadFrame = 6; //头像框资源ID
  int64 Fv = 7; //战力
  int32 Param = 8; //额外字段，根据功能定义
  string World = 9; //世界简称
  int64 LogoutTime = 10; //玩家离线时间
  VipInfo VipInfo = 11;  //玩家的VIP数据
}
// 幻境队伍成员信息
message IllusionTeamUserInfo {
  ShowUserInfo User = 1;
  int32 TeamRole = 2; //队伍中的角色  0成员 1队长
}
//幻境队伍信息
message IllusionTeamInfo {
  int64 TeamId = 1;
  repeated IllusionTeamUserInfo Users = 2;
  int64 MinFv = 3; //加入队伍所需的最小战力
  string PassTime = 4; //首通时间
}

//连服存储的幻境关卡数据
message UnionServerIllusionCheckPointData {
  int32 IllusionType = 1; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 2; //章节Id
  int32 CheckPointId = 3; //关卡Id
  IllusionTeamInfo FirstTeam = 4; //首通队伍
}
//连服存储的幻境副本的旧式的首通邮件发放的最大值(chapter*1000+checkPoint)
message UnionServerIllusionOldMailMax {
  int32 IllusionType = 1; //幻境类型 1天仙幻境 2仙童幻境
  int32 OldChapterId = 2; //章节Id
  int32 OldCheckPointId = 3; //关卡Id
}

//幻境章数据
message IllusionChapterData {
  int32 IllusionType = 1; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 2; //章节Id
  int32 ChapterState = 3; //章节状态   0上章未通关 1未达成挑战条件 2未通关 3已通关 4今日已通关
}
//幻境关卡数据
message IllusionCheckPointData {
  int32 IllusionType = 1; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 2; //章节Id
  int32 CheckPointId = 3; //关卡Id
  int32 CheckPointState = 4; //关卡状态  1未达成挑战条件 2未通关 3已通关 4今日已通关
  IllusionTeamInfo FirstTeam = 5; //首通队伍
}

//存数据库幻境关卡数据
message DBIllusionCheckPointData {
  int32 IllusionType = 1; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 2; //章节Id
  int32 CheckPointId = 3; //关卡Id
  int32 CheckPointState = 4; //关卡状态   2未通关 3已通关 4今日已通关
}
//存数据库幻境章节数据
message DBIllusionChapterData {
  int32 IllusionType = 1; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 2; //章节Id
  repeated DBIllusionCheckPointData DBIsCpData = 3;
  int32 ChapterState = 4; //章节状态   0上章未通关 1未达成挑战条件 2未通关 3已通关 4今日已通关
}
//存数据库幻境副本数据
message DBIllusionTypeData {
  int32 IllusionType = 1; //幻境类型 1天仙幻境 2仙童幻境
  repeated DBIllusionChapterData DBIsCtrData = 2;
  int32 CurrentChapter = 3; //玩家正在通关的章节
  int32 CurrentCheckPoint = 4; //玩家已通关的关卡
  //    int32 TodayHelpTimes = 5; //玩家今日协助次数 该字段迁移到DBIllusionTabData
  int32 MailChapter = 6; //玩家领取首通邮件的最大章节
  int32 MailCheckPoint = 7; //玩家领取首通邮件的最大关卡
}
//存数据库幻境页签数据
message DBIllusionTabData {
  int32 TabId = 1; //幻境页签 1天仙幻境 2仙童幻境
  int32 TodayHelpTimes = 2; //玩家今日协助次数
}
//存数据库玩家幻境所有副本数据
message DBPlayerIllusion {
  repeated DBIllusionTypeData DBIsTypeData = 1;
  repeated DBIllusionTabData DBIsTabData = 2;
}

//请求幻境数据
message C2SIllusionData {
  int32 IllusionType = 1; //幻境类型 1天仙幻境 2仙童幻境
}
message S2CIllusionData {
  int32 Tag = 1;
  int32 IllusionType = 2; //幻境类型 1天仙幻境 2仙童幻境
  repeated IllusionChapterData Chapters = 3; //所有章节
  int32 TodayHelpTimes = 4; //玩家今日协助次数
  string TagStr = 5;
}

//请求幻境对应章节数据
message C2SIllusionChapterData {
  int32 IllusionType = 1; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 2; //章节Id
}
message S2CIllusionChapterData {
  int32 Tag = 1;
  int32 IllusionType = 2; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 3; //章节Id
  int32 ChapterState = 4; //章节状态   0上章未通关 1未达成挑战条件 2未通关 3已通关 4今日已通关
  repeated IllusionCheckPointData CheckPoints = 5; //所有关卡
}

//请求幻境对应关卡的所有队伍
message C2SIllusionTeamList {
  int32 IllusionType = 1; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 2; //章节Id
  int32 CheckPointId = 3; //关卡Id
}
message S2CIllusionTeamList {
  int32 Tag = 1;
  int32 IllusionType = 2; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 3; //章节Id
  int32 CheckPointId = 4; //关卡Id
  repeated IllusionTeamInfo Teams = 5; //所有队伍
}

// 玩家详细展示信息
message IllusionTeamUserDetailInfo {
  int64 UserId = 1;
  int32 TeamRole = 2; //队伍中的角色  0成员 1队长
  repeated IntAttr A = 3; //所需的int型数据
  repeated StrAttr B = 4; //所需的string型数据
}
//幻境队伍详细信息
message IllusionTeamDetailInfo {
  int64 TeamId = 1;
  repeated IllusionTeamUserDetailInfo Users = 2;
  int64 MinFv = 3; //加入队伍所需的最小战力
}

//请求幻境副本我的队伍
message C2SIllusionMyTeam {
}
message S2CIllusionMyTeam {
  int32 Tag = 1;
  int32 IllusionType = 2; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 3; //章节Id
  int32 CheckPointId = 4; //关卡Id
  IllusionTeamDetailInfo Team = 5; //队伍成员
}

//幻境副本队伍设置战力
message C2SIllusionTeamSetFV {
  int64 MinFV = 1;
}
message S2CIllusionTeamSetFV {
  int32 Tag = 1;
}

// 创建队伍
message C2SIllusionCreateTeam {
  int32 IllusionType = 1; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 2; //章节Id
  int32 CheckPointId = 3; //关卡Id
}
message S2CIllusionCreateTeam {
  int32 Tag = 1;
  S2CIllusionMyTeam Team = 2; // 队伍信息
}

// 加入队伍
message C2SIllusionJoinTeam {
  int32 IllusionType = 1; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 2; //章节Id
  int32 CheckPointId = 3; //关卡Id
  int64 TeamId = 4; //队伍Id
}
message S2CIllusionJoinTeam {
  int32 Tag = 1;
  int32 IllusionType = 2; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 3; //章节Id
  int32 CheckPointId = 4; //关卡Id
  int64 TeamId = 5; //队伍Id
  string TagStr = 6;
}

//获取可以邀请的列表
message C2SGetIllusionCanInviteList {
  int32 InviteRange = 1; //邀请范围     1宗门 2伴侣 3家族 5战队
  int32 IllusionType = 2; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 3; //章节Id
  int32 CheckPointId = 4; //关卡Id
}
message S2CGetIllusionCanInviteList {
  int32 Tag = 1;
  int32 InviteRange = 2; //邀请范围    
  repeated ShowUserInfo Users = 3;
  int32 IllusionType = 4; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 5; //章节Id
  int32 CheckPointId = 6; //关卡Id
}

// 队长邀请
message C2SIllusionTeamInvite {
  int64 InviteUserId = 1; //邀请玩家Id   0为一键邀请
  int32 InviteRange = 2; //邀请范围     1宗门 2伴侣 3家族 5战队
}
message S2CIllusionTeamInvite {
  int32 Tag = 1;
  int64 Timestamp = 2; //X秒后可以邀请 只用于邀请单个玩家的回包
  int32 Index = 3;     //离线时间错误编号
}

//玩家收到到邀请
message S2CIllusionTeamBeInvited {
  int32 IllusionType = 1; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 2; //章节Id
  int32 CheckPointId = 3; //关卡Id
  int64 TeamId = 4; //队伍Id
  string InviteUserNick = 5; //邀请人昵称
  int32 InviteAreaId = 6; //邀请人的区服
  string World = 7; //世界简称
}
message C2SIllusionTeamBeInvited {
  int32 IllusionType = 1; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 2; //章节Id
  int32 CheckPointId = 3; //关卡Id
  int64 TeamId = 4; //队伍Id
  int32 Reply = 5; //0拒绝 1加入队伍
  int32 Param = 6; //0正常 1处理偃甲副本情况
}

// 退出队伍(和踢人)
message C2SIllusionExitTeam {
  int64 UserId = 1; //0自己退出 其他表示踢人
}
message S2CIllusionExitTeam {
  int32 Tag = 1;
  S2CIllusionMyTeam Team = 2; // 队伍信息
}

// 解散队伍
message C2SIllusionDelTeam {
}
message S2CIllusionDelTeam {
  int32 Tag = 1;
}

// 幻境副本战斗
message C2SIllusionFight {
}
message S2CIllusionFight {
  int32 Tag = 1;
  string RetStr = 2; //后端额外飘字
  int32 IllusionType = 3; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 4; //章节Id
  int32 CheckPointId = 5; //关卡Id
  int64 TeamId = 6; //队伍Id
}

// 幻境副本一键扫荡
message C2SIllusionSweep {
  int32 IllusionType = 1; //幻境类型 1天仙幻境 2仙童幻境
}
message S2CIllusionSweep {
  int32 Tag = 1;
  int32 IllusionType = 2; //幻境类型 1天仙幻境 2仙童幻境
}

// 幻境副本一键扫荡By TabId
message C2SIllusionSweepByTabId {
  int32 TabId = 1; //标签Id 1仙童幻境 2天仙幻境 3神兽幻境
}
message S2CIllusionSweepByTabId {
  int32 Tag = 1;
  int32 TabId = 2; //标签Id 1仙童幻境 2天仙幻境 3神兽幻境
}

// 幻境副本喊话
message C2SIllusionShout {
  int32 IllusionType = 1; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 2; //章节Id
  int32 CheckPointId = 3; //关卡Id
  int64 TeamId = 4; //队伍Id
  int32 ChannelId = 5; //频道Id
}
message S2CIllusionShout {
  int32 Tag = 1;
}
// 幻境副本喊话广播展示
message S2CReportIllusionShout {
  int32 IllusionType = 1; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 2; //章节Id
  int32 CheckPointId = 3; //关卡Id
  int64 TeamId = 4; //队伍Id
  int32 ChannelType = 5; //频道展示       10002 世界频道   10003 跨服频道
  int64 SendId = 6; //喊话者的UserId
  int64 SenderGodLevel = 7; //境界等级
  int64 AreaId = 8; //区编号
  int32 SenderHead = 9; //发送人头像资源ID
  int32 SenderHeadFrame = 10; //发送人头像框资源ID
  int32 SenderChatFrame = 11; //发送人聊天框资源ID
  int32 SenderTitle = 12; //发送人称号皮肤ID
  int32 SenderVIP = 13; //发送人VIP
  string SenderNick = 14; //发送者的昵称
  string World = 15; //世界简称
}

// 通用喊话
message C2SCommonShout {
  int32 NoticeId = 1; //公告表Id
  int32 ChannelId = 2; //频道Id
  string Param1 = 3;
  string Param2 = 4;
}
message S2CCommonShout {
  int32 Tag = 1;
  int32 NoticeId = 2; //公告表Id
  int32 ChannelId = 3; //频道Id
  string Param1 = 4;
  string Param2 = 5;
}
// 通用喊话广播展示
message S2CReportCommonShout {
  int32 NoticeId = 1;
  int32 ChannelType = 2; //频道展示       10002 世界频道   10003 跨服频道
  string Param1 = 3;
  string Param2 = 4;
  int64 SenderId = 6; //喊话者的UserId
  int64 SenderGodLevel = 7; //境界等级
  int64 SenderAreaId = 8; //区编号
  int32 SenderHead = 9; //发送人头像资源ID
  int32 SenderHeadFrame = 10; //发送人头像框资源ID
  int32 SenderChatFrame = 11; //发送人聊天框资源ID
  int32 SenderTitle = 12; //发送人称号皮肤ID
  int32 SenderVIP = 13; //发送人VIP
  string SenderNick = 14; //发送者的昵称
  string World = 15; //世界简称
  int32 HideVIP = 16; //Vip等级是否屏蔽  0正常显示  1屏蔽
}
// 幻境副本切换到下一关
message C2SIllusionTeamNextCheckPoint {
  int32 IllusionType = 1; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 2; //章节Id
  int32 CheckPointId = 3; //关卡Id
  int64 TeamId = 4; //队伍Id
}
message S2CIllusionTeamNextCheckPoint {
  int32 Tag = 1;
}

// 幻境副本 重新挑战 (战斗失败时发包)
message C2SIllusionTeamReFight {
  int32 IllusionType = 1; //幻境类型 1天仙幻境 2仙童幻境
  int32 ChapterId = 2; //章节Id
  int32 CheckPointId = 3; //关卡Id
  int64 TeamId = 4; //队伍Id
}
message S2CIllusionTeamReFight {
  int32 Tag = 1;
}

//请求页签下一组幻境副本的状态
message C2SGetIllusionsByTabId {
  int32 TabId = 1; //标签Id
}
message S2CGetIllusionsByTabId {
  int32 Tag = 1;
  int32 TabId = 2; //标签Id
  repeated IllusionState States = 3; //所有章节
}
message IllusionState {
  int32 IllusionType = 1; //幻境类型 1天仙幻境 2仙童幻境
  int32 State = 2; //状态 0未解锁   1解锁
}
//======================================八荒凶兽==========================================//

message SavageBeast {
  int32 BeastId = 1; //凶兽Id
  int32 IsWear = 2; //是否幻化
  int32 IsAwaken = 3; //是否觉醒
  int32 IsUnlock = 4; //是否解锁
  repeated Skill Skills = 5; //技能
  repeated BeastEquip BeastEquips = 6; //凶兽装备
  int64 Fv = 7; //战力
  int32 BeastStar = 8; //凶兽星级
}

message BeastEquip {
  int32 Pos = 1; //凶兽装备位置
  int32 ItemId = 2; //道具Id
  int32 Level = 3; //装备强化等级
  int32 Star = 4; //装备星级
}

message C2SBeasts {
}
message S2CBeasts {
  int32 Tag = 1;
  repeated SavageBeast Beasts = 2;
}

//解锁
message C2SUnlockBeast {
  int32 BeastId = 1; //凶兽Id
}

//幻化
message C2SWearBeast {
  int32 BeastId = 1; //凶兽Id
}
message S2CWearBeast {
  int32 Tag = 1;
  int32 BeastId = 2;
}

//一件穿戴
message C2SOneKeyWearBeastEquip {
  int32 BeastId = 1; //凶兽Id
}
//单个穿戴
message C2SWearBeastEquip {
  int32 BeastId = 1; //凶兽Id
  int32 Pos = 2; //装备位置
}

message S2CBeastAwaken {
  int32 Tag = 1;
  int32 BeastId = 2;
}

//一件强化
message C2SOneKeyStrengthenBeastEquip {
  int32 BeastId = 1; //凶兽Id
}
//升星
message C2SStarUpBeastEquip {
  int32 BeastId = 1; //凶兽Id
  int32 Pos = 2; //装备位置
  int32 quality = 3; //装备品质
  int32 reborn = 4; //装备转生
  int32 star = 5; //装备星级
  string id1 = 6; //装备唯一id1
  string id2 = 7; //装备唯一id2
  string id3 = 8; //装备唯一id3
}
message S2CStarUpBeast {
  int32 Tag = 1;
  string EquipId = 2;
}
//技能升级/解锁
message C2SSkillLevelUp {
  int32 BeastId = 1; //凶兽Id
  int32 SkillId = 2; //技能Id
}
//解锁/幻化/一件穿戴/单个穿戴/一件强化/升星/技能回包
message S2CSavageBeast {
  int32 Tag = 1;
  SavageBeast SavageBeast = 2;
}

//凶兽升星
message C2SBeastStar {
  int32 BeastId = 1; //凶兽Id
}
message S2CBeastStar {
  int32 Tag = 1;
  int32 BeastId = 2;
}
/****************************************财神送礼-充值转盘****************************************/
//抽奖记录
message RechargeGearLog {
  string Nick = 1; //玩家昵称
  int32 AreaId = 2; //玩家区服
  int32 ItemId = 3; //道具Id
  int64 ItemNum = 4; //道具数量
  int64 Timestamp = 5; //时间戳
  int32 ActId = 6; //活动Id
  string World = 7;
}

//拿到财神送礼活动所有数据
message C2SGetRechargeGearData {
  int32 ActId = 1;
}
message S2CGetRechargeGearData {
  int32 Tag = 1;
  int32 ActId = 2;
  repeated ReturnDetail ReturnDetail = 3; //充值挡位是否已领奖的记录数组
  repeated RechargeGearLog RechargeGearLog = 4; //全服抽奖记录
  repeated RechargeGearLog MyLog = 5; //我的记录
}

//财神送礼-抽奖
message C2SRechargeGearDraw {
  int32 ActId = 1;
}
message S2CRechargeGearDraw {
  int32 Tag = 1;
  int32 ActId = 2;
  int32 Multi = 3; //抽到的返利挡位，即配置表中的Multiple字段
  ItemInfo ItemNum = 4; //最终获得的奖励道具
}

//庆典活动累充转盘-抽奖
message C2STRGearDraw {
  int32 ActId = 1;
}
message S2CTRGearDraw {
  int32 Tag = 1;
  int32 ActId = 2;
  ItemInfo ItemNum = 3; //最终获得的奖励道具
}

// 庆典累充玩家选择道具
message C2STRGearSelectItem {
  int32 ActId = 1;
  int32 Pos = 2; // 配置表中该格子对应的位置
  int64 ItemId = 3; // 玩家选择的道具ID，道具数量通过后端读表获取
}
message S2CTRGearSelectItem {
  int32 Tag = 1;
}

// 庆典活动累充转盘玩家活动数据
message C2SGetTRGearInfo {
  int32 ActId = 1;
}
message S2CGetTRGearInfo {
  int32 Tag = 1;
  int32 ActId = 2;
  repeated ReturnDetail ReturnDetail = 3; //充值挡位是否已领奖的记录数组
  repeated XunBaoLog MyLog = 5; //我的记录
  repeated int32 HadDraw = 6; //已抽取奖项
  int64 Amount = 7; //玩家活动累充金额
  repeated TRGearItems Items = 8; //转盘奖项
  repeated int32 HadDrawPos = 9; //已抽取奖项的格子
}

message TRGearItems {
  int64 Id = 1; // 唯一ID
  int32 Gear = 2; // 挡位
  int64 ItemId = 3; // 道具ID
  int64 ItemNum = 4; // 道具数量
  int32 ShowPos = 5; // 格子位置
  int32 Quality = 6; // 道具品质
  int32 GroupId = 7; // 组ID
}

/****************************************通行证接口****************************************/
//通行证数据
message PassCheckData {
  int32 ActId = 1; //活动Id
  int32 Session = 2; //当前赛季
  repeated PassCheckSessionData SessionData = 3; //赛季数据
  int32 LevelGroup = 4; //当前等级奖励轮循组ID
  int32 TaskGroup = 5; //当前任务轮循组ID
  int32 MergeChange = 6; //合服后是否需要切换赛季
}
message PassCheckSessionData {
  int32 ActId = 1; //活动Id
  int32 BuyCount = 2; //全服购买总次数
  int32 FakeBuyCount = 3; //伪造的全服购买次数
  int32 Session = 4; //当前赛季
  int64 SessionStartTime = 5; //本赛季开始时间
}
//拿到通行证活动所有数据
message C2SGetPassCheckData {
  int32 ActId = 1;
}
//个人数据发生变化时重发，全服数据（如购买人数）变化时不推
message S2CGetPassCheckData {
  int32 Tag = 1;
  int32 ActId = 2;
  int32 Session = 3; //当前赛季
  int32 LevelGroup = 4; //当前等级奖励轮循组ID
  int32 TaskGroup = 5; //当前任务轮循组ID
  int32 BuyCount = 6; //全服购买总次数
  int64 SessionStartTime = 7; //本赛季开始时间
  int32 Level = 8; //通行证等级
  int32 Exp = 9; //通行证经验
  int32 Prize1 = 10; //普通奖励当前已领取到第几级。比如值为10，表示第1-10级奖励已领取
  int32 Prize2 = 11; //金令奖励当前已领取到第几级。比如值为10，表示第1-10级奖励已领取
  int32 Unlock = 12; //是否已激活金令
  int32 TodayExpBox = 13; //今日是否已领取经验包
}

//购买等级
message C2SPassCheckBuyLevel {
  int32 ActId = 1; //活动Id
  int32 BuyLevel = 2; //购买多少级
}
message S2CPassCheckBuyLevel {
  int32 Tag = 1;
  string TagP = 2; //错误提示
  int32 ActId = 3; //活动Id
}

//一键领取奖励
message C2SPassCheckGetPrize {
  int32 ActId = 1;
}
message S2CPassCheckGetPrize {
  int32 Tag = 1;
  repeated ItemInfo Prize = 2; //本次领取的奖励
  repeated int32 PrizeLevel = 3; //本次领奖普通奖励等级数组
}

//领取每日经验包
message C2SPassCheckGetExpBox {
  int32 ActId = 1;
}
message S2CPassCheckGetExpBox {
  int32 Tag = 1;
}
//宗门荣耀(王权荣誉)
//王权荣耀玩家
message SectHonorPlayer {
  int64 UserId = 1;
  int32 Pos = 2; //0-5
  repeated IntAttr A = 3;
  repeated StrAttr B = 4;
  int32 Praise = 5; //赞美次数
}
//获取荣耀玩家
message C2SGetSectHonorPlayer {

}
message S2CGetSectHonorPlayer {
  string FamilyId = 1;
  repeated SectHonorPlayer Players = 2;
}
//点赞
message C2SSectHonorPraise {
  int32 Pos = 1;
}
message S2CSectHonorPraise {
  int32 Tag = 1;
  int32 Pos = 2;
  int32 Praise = 3; //赞美次数
}
//授命
message C2SSectHonorMandate {
  int32 Pos = 1;
  int64 UserId = 2; //0 ，为取消该位置的授命
}
message S2CSectHonorMandate {
  int32 Tag = 1; //如果成功，则主动推送一下列表？

  int32 Pos = 2;
  int64 UserId = 3; //0 ，为取消该位置的授命
}

//授命用户列表
message C2SSectHonorMandatePlayerList {
}
message MandatePlayer {
  int64 UserId = 1;
  string Nick = 2;
  int64 FightValue = 3;
  int64 Territory = 4; //领地积分
  int32 Head = 5; //头像资源ID
  int32 HeadFrame = 6; //头像框资源ID
  int32 Pos = 7; //职位
  int32 ShowAreaId = 8;
  int32 State = 9; //0 可以授命，1已经授命
  string World = 10; //世界简称
}
message S2CSectHonorMandatePlayerList {
  int32 Tag = 1; //如果成功，则主动推送一下列表？
  repeated MandatePlayer Players = 2;
}
//领取俸禄
message C2SSectHonorGetPrize {

}
message S2CSectHonorGetPrize {
  int32 Tag = 1; //
}

message S2CNewAtMsg {
}

/***********************************************通用委托数据结构*******************************************************/
message EntrustData {
  ShowUserInfo user = 1; //前端展示玩家信息
  int32 EntrustType = 2; //委托类型 1委托别人  2受别人委托 3:相互委托
  int32 EntrustState = 3; //委托状态 0没有关系  1请求中  2建立委托关系 3建立委托关系并锁定
  int32 EntrustTimes = 4; //委托次数 (用于委托墙)
  int32 LeftTimes = 5; //剩余次数 (用于委托墙)
  int64 UniqueId = 6; //上委托墙时产生的Id
}
message DBEntrustData {
  int64 userId = 1; //相关玩家Id
  int32 EntrustType = 2; //委托类型 1委托别人  2受别人委托 3:相互委托
  int32 EntrustState = 3; //委托状态 0没有关系  1请求中  2建立委托关系 3建立委托关系并锁定
  int32 EntrustTimes = 4; //委托次数 (用于委托墙)
  int32 LeftTimes = 5; //剩余次数 (用于委托墙)
  int64 UniqueId = 6; //上委托墙时产生的Id
  int64 ReceiveId = 7; //玩家接取委托时产生Id
}
//具体类型委托
message DBEntrustDetail {
  int32 Id = 1; //委托表Param1
  int32 Param = 2; //委托表Param2
  int64 userId = 3; //玩家Id
  repeated DBEntrustData Items = 4; //相关玩家列表
}
//玩家委托数据
message DBPlayerEntrust {
  int64 userId = 1; //玩家Id
  repeated DBEntrustDetail DBEntrustDetail = 2; //具体类型委托列表
}
//委托墙上数据
message DBEntrustWall {
  int32 AreaId = 1; //区服Id
  int32 EntrustId = 2; //委托表Id
  repeated DBEntrustData Items = 4; //相关玩家列表
}

//请求委托墙列表
message C2SGetEntrustWallList {
  int32 EntrustId = 1; //委托表委托Id
}
message S2CGetEntrustWallList {
  int32 EntrustId = 1; //委托表委托Id
  repeated EntrustData List = 2; //委托墙列表
}

//请求我的委托关系列表
message C2SGetMyEntrustList {
  int32 EntrustId = 1; //委托表委托Id
}
message S2CGetMyEntrustList {
  int32 EntrustId = 1; //委托表委托Id
  repeated EntrustData List = 2; //我的委托关系列表
}

//委托请求上墙
message C2SEntrustToWall {
  int32 EntrustId = 1; //委托表委托Id
  int32 EntrustTimes = 2; //上墙委托次数
}
message S2CEntrustToWall {
  int32 Tag = 1;
  int32 EntrustId = 2; //委托表委托Id
  int32 EntrustTimes = 3; //上墙委托次数
}

//接取委托
message C2SReceiveEntrust {
  int32 EntrustId = 1; //委托表委托Id
  int64 UserId = 2;
}
message S2CReceiveEntrust {
  int32 Tag = 1;
  int32 EntrustId = 2; //委托表委托Id
  int64 UserId = 3;
}

//取消委托
message C2SCancelEntrust {
  int32 EntrustId = 1; //委托表委托Id
  int64 UserId = 2;
}
message S2CCancelEntrust {
  int32 Tag = 1;
  int32 EntrustId = 2; //委托表委托Id
  int64 UserId = 3;
  string TagP = 4; //格式化Tag填充字符串
}

//获取委托信息
message C2SEntrustInfo {
  int32 EntrustId = 1; //委托表委托Id
}
message S2CEntrustInfo {
  int32 EntrustId = 1; //委托表委托Id
  int32 Push = 2; //是否推送红点
  int32 leftTimes = 3; //剩余委托次数
}

//设置红点推送
message C2SEntrustRed {
  int32 EntrustId = 1; //委托表委托Id
  int32 Push = 2; //是否推送红点
}
message S2CEntrustRed {
  int32 Tag = 1;
  int32 EntrustId = 2; //委托表委托Id
  int32 Push = 3; //是否推送红点
}

//////////////////////////////凶兽岛/////////////////////////////////////////////////////////////////////////////////////////
//更新凶灵岛委拖信息
message S2CChangeXldEntrustData {
  int32 BossId = 1;
  EntrustData Data = 2;
}

//请求凶灵岛可以委托的列表
message C2SGetXldEntrustList {
  int32 BossId = 1;
}
message S2CGetXldEntrustList {
  int32 Tag = 1;
  int32 BossId = 2;
  repeated EntrustData List = 3; //委托信息列表
}

//凶灵岛委托
message C2SXldEntrust {
  int32 BossId = 1;
  int64 UserId = 2;
}
message S2CXldEntrust {
  int32 Tag = 1;
  int32 BossId = 2;
  int64 UserId = 3;
}

//凶灵岛回应委托
message C2SResponseXldEntrust {
  int32 BossId = 1;
  int64 UserId = 2;
  int32 Result = 3; //回应结果  1同意  2拒绝
}
message S2CResponseXldEntrust {
  int32 Tag = 1;
  int32 BossId = 2;
  int64 UserId = 3;
}

//玩家凶灵岛Boss数据
message PlayerXLDBossData {
  int32 Id = 1; //BossId
  int64 NextTimestamp = 2; //下一次可以挑战的时间戳
  int32 BossIsKilled = 3; //Boss是否被击杀过
}
//凶灵岛Boss信息
message XLDBossInfo {
  int32 Id = 1; //Boss编号
  int32 K = 2; //是否击杀，0，没有击杀，1已经击杀
  int32 L = 3; //剩余挑战次数
  int32 V = 4; //可以购买的vip等级
  int32 C = 5; //vip购买价格.
  int32 T = 6; //vip购买货币类型
  int32 S = 7; //副本星级
  int32 E = 8; //当前星级经验
  int32 LB = 9; //剩余购买次数
  int64 NT = 10; //下一次可以挑战的时间戳
  int32 BossState = 11; //Boss状态  0,死亡  1,复活 -1未解锁
  int32 EntrustRedOk = 12; //委托红点   0灭 1亮
}
//凶灵岛Boss信息
message C2SXLDBossInfo {
}
//凶灵岛Boss信息
message S2CXLDBossInfo {
  repeated XLDBossInfo Items = 1;
}

//凶灵岛Boss挑战
message C2SXLDBossFight {
  int32 Id = 1;
}
message S2CXLDBossFight {
  int32 Tag = 1;
  XLDBossInfo info = 2;
}
//凶灵岛Boss，一键扫荡
message C2SXLDBossSweep {
  int32 Id = 1; //不指定ID为一键扫荡
}
message S2CXLDBossSweep {
  int32 Tag = 1;
}
//凶灵岛Boss一键购买次数
message C2SXLDBossPurchase {
  int32 Id = 1; //不指定ID为一键购买
}
message S2CXLDBossPurchase {
  int32 Tag = 1;
}

/***********************************************凶兽岛boss*******************************************************/
//凶兽岛Boss信息
message XsdBossInfo {
  int32 XsdId = 1; //凶兽岛Id
  int32 BossId = 2; //BossId
  int32 State = 3; //Boss状态  0,死亡  1,复活
  int64 ReliveTimestamp = 4; //复活时间戳
  XsdBossOwnerData BossOwner = 5; //Boss归属玩家
}

//向客户端发送凶兽岛Boss信息
message S2CXsdBossInfo {
  repeated XsdBossInfo Items = 1;
}

//进入凶兽岛Boss场景
message C2SXsdBossJoinScene {
  int32 XsdId = 1;
  int32 BossId = 2;
}
message S2CXsdBossJoinScene {
  int32 Tag = 1;
  int32 XsdId = 2;
  int32 BossId = 3;
}

//离开凶兽岛Boss场景
message C2SXsdBossLeaveScene {
  int32 XsdId = 1;
  int32 BossId = 2;
}
message S2CXsdBossLeaveScene {
  int32 Tag = 1;
  int32 XsdId = 2;
  int32 BossId = 3;
}

//凶兽岛归属玩家数据
message XsdBossOwnerData {
  ShowUserInfo User = 1;
  int64 Hp = 6; //血量
}
//凶兽岛玩家伤害数据
message XsdBossDamage {
  ShowUserInfo User = 1;
  int64 DamageTime = 2;
  int64 Damage = 4;
}
//凶兽岛伤害排行
message S2CXsdBossDamageRank {
  int32 XsdId = 1;
  int32 BossId = 2;
  repeated XsdBossDamage Items = 3;
}
//凶兽岛我的伤害
message S2CXsdBossDamageMy {
  int32 XsdId = 1;
  int32 BossId = 2;
  int64 MyDamage = 3;
  int32 MyRank = 4;
}
//凶兽岛Boss设置复活提醒
message C2SXsdBossCfg {
  string Cfg = 1;
}
//凶兽岛Boss购买次数
message C2SXsdBossPurchase {
  int32 XsdId = 1; //凶兽岛Id
}
message S2CXsdBossPurchase {
  int32 Tag = 1;
  int32 XsdId = 2; //凶兽岛Id
  int32 LeftTimes = 3; //剩余购买次数
}

//凶兽岛Boss采集
message C2SXsdCollect {
  int32 XsdId = 1; //凶兽岛Id
  int32 CollId = 2; //采集物BossId
  int32 CollAct = 3; //采集动作   0采集 1检测采集状态
}
message S2CXsdCollect {
  int32 Tag = 1;
  int32 XsdId = 2; //凶兽岛Id
  int32 CollId = 3; //采集物BossId
  int64 StartTimestamp = 4; //采集开始时间戳
  int64 FinishTimestamp = 5; //采集结束时间戳
  int64 CollUserId = 6; //采集者userId
  int32 CollState = 7; //采集状态 0没有采集或者采集失败  1采集中  2采集成功
}

/**********************************************装备***********************************************/
//获取所有装备数据
message C2SGetAllEquipData {
}
message S2CGetAllEquipData {
  repeated EquipAllData EquipAllData = 1; //所有数据
}

//获取功能下装备数据
message C2SGetFuncEquipData {
  int32 FuncId = 1; //功能Id
}
message S2CGetFuncEquipData {
  repeated EquipAllData EquipAllData = 1; //数据
}

//获取功能下某个objId的装备数据
message C2SGetEquipData {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
}
message S2CGetEquipData {
  int32 Tag = 1; //
  EquipAllData EquipAllData = 2; //数据
}

//一键穿戴装备
message C2SOneKeyEquipWear {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
}
message S2COneKeyEquipWear {
  int32 Tag = 1;
  int32 FuncId = 2; //功能Id
  int32 ObjId = 3; //objId
}

//单个穿戴
message C2SEquipWear {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
  int32 Pos = 3; //位置
  string Id = 4; //装备唯一值
}
message S2CEquipWear {
  int32 Tag = 1;
  int32 FuncId = 2; //功能Id
  int32 ObjId = 3; //objId
  int32 Pos = 4; //位置
}

//一键强化
message C2SOneKeyEquipStrengthS {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
}
message S2COneKeyEquipStrengthS {
  int32 Tag = 1;
  int32 FuncId = 2; //功能Id
  int32 ObjId = 3; //objId
}

//单个强化
message C2SEquipStrengthS {
  int32 FuncId = 1; //功能Id
  int32 Pos = 2; //位置
  int32 ObjId = 3; //objId
}
message S2CEquipStrengthS {
  int32 Tag = 1;
  int32 FuncId = 2; //功能Id
  int32 ObjId = 3; //objId
  int32 Pos = 4; //位置
}

//强化大师
message C2SStrengthMaster {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
}
message S2CStrengthMaster {
  int32 Tag = 1;
  int32 FuncId = 2; //功能Id
  int32 ObjId = 3; //objId
}

//一键镶嵌穿戴
message C2SOneKeyMosaicWear {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
}
message S2COneKeyMosaicWear {
  int32 Tag = 1;
  int32 FuncId = 2; //功能Id
  int32 ObjId = 3; //objId
}

//一键镶嵌替换
message C2SOneKeyMosaicChange {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
}
message S2COneKeyMosaicChange {
  int32 Tag = 1;
  int32 FuncId = 2; //功能Id
  int32 ObjId = 3; //objId
}

//一键镶嵌升级
message C2SOneKeyMosaicUpLev {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
}
message S2COneKeyMosaicUpLev {
  int32 Tag = 1;
  int32 FuncId = 2; //功能Id
  int32 ObjId = 3; //objId
}

//装备升星
message C2SEquipStars {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
  int32 Quality = 3; //目标品质
  int32 Star = 4; //目标星星
  int32 EquipPart = 5; //部位
  string Id1 = 6; //升星装备1
  string Id2 = 7; //升星装备2
  string Id3 = 8; //升星装备3
}
message S2CEquipStars {
  int32 Tag = 1;
  int32 FuncId = 2; //功能Id
  int32 ObjId = 3; //objId
  string Id = 4; //升星后装备
}

//装备合成
message C2SEquipCompose {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
  int32 ItemId = 3; //道具Id
}
message S2CEquipCompose {
  int32 Tag = 1;
  int32 FuncId = 2; //功能Id
  int32 ObjId = 3; //objId
  int32 ItemId = 4; //道具Id
}

//装备升级
message C2SEquipUpLev {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
  string Id = 3; //道具唯一Id
}
message S2CEquipUpLev {
  int32 Tag = 1;
  int32 FuncId = 2; //功能Id
  int32 ObjId = 3; //objId
  string Id = 4; //道具唯一Id
}

//装备一键升级
message C2SEquipOneKeyUpLev {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
  int32 Id = 3; //
}
message S2CEquipOneKeyUpLev {
  int32 Tag = 1;
  int32 FuncId = 2; //功能Id
  int32 ObjId = 3; //objId
  int32 Id = 4; //
}

//偃甲激活
message C2SYanJiaActive {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
}
message S2CYanJiaActive {
  int32 Tag = 1;
  int32 FuncId = 2; //功能Id
  int32 ObjId = 3; //objId
}

//偃甲核心激活
message C2SYanJiaCoreActive {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
  int32 Id = 3; //偃甲Id
}
message S2CYanJiaCoreActive {
  int32 Tag = 1;
  int32 FuncId = 2; //功能Id
  int32 ObjId = 3; //objId
  int32 Id = 4; //偃甲Id
}

//偃甲核心升级
message C2SYanJiaCoreLev {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
  int32 Id = 3; //偃甲Id
}
message S2CYanJiaCoreLev {
  int32 Tag = 1;
  int32 FuncId = 2; //功能Id
  int32 ObjId = 3; //objId
  int32 Id = 4; //偃甲Id
}

//偃甲核心星级
message C2SYanJiaCoreStar {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
  int32 Id = 3; //偃甲Id
}
message S2CYanJiaCoreStar {
  int32 Tag = 1;
  int32 FuncId = 2; //功能Id
  int32 ObjId = 3; //objId
  int32 Id = 4; //偃甲Id
}

//偃甲核心穿戴
message C2SYanJiaCoreWear {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
  int32 Id = 3; //偃甲Id
}
message S2CYanJiaCoreWear {
  int32 Tag = 1;
  int32 FuncId = 2; //功能Id
  int32 ObjId = 3; //objId
  int32 Id = 4; //偃甲Id
}

//偃甲数据--兵魂
message C2SGetYanJiaSoldierSoulData {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
}
message S2CGetYanJiaSoldierSoulData {
  repeated SoldierSoulDrug SoldierSoulDrug = 1; //偃甲兵魂丹药
  int32 SoldierSoulSkillLev = 2; //偃甲技能等级
}

//偃甲兵魂吃丹
message C2SYanJiaSoldierSoulDrug {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
  int32 Id = 3; //丹药位置（1--4）
}
message S2CYanJiaSoldierSoulDrug {
  int32 Tag = 1;
  int32 FuncId = 2; //功能Id
  int32 ObjId = 3; //objId
  int32 Id = 4; //
}

//偃甲兵魂技能升级
message C2SYanJiaSoldierSoulSkillUpLev {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
}
message S2CYanJiaSoldierSoulSkillUpLev {
  int32 Tag = 1;
  int32 FuncId = 2; //功能Id
  int32 ObjId = 3; //objId
}

//装备升品
message C2SEquipQuality {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
  string Id = 3; //消耗装备唯一Id
}
message S2CEquipQuality {
  int32 Tag = 1;
  int32 FuncId = 2; //功能Id
  int32 ObjId = 3; //objId
  int32 Id = 4; //
}

//装备精炼
message C2SEquipRefine {
  int32 FuncId = 1; //功能Id
  int32 ObjId = 2; //objId
  int32 Type = 3; //1:单体 2:一键精炼
  int32 Pos = 4; //位置（1--4）

}
message S2CEquipRefine {
  int32 Tag = 1;
  int32 FuncId = 2; //功能Id
  int32 ObjId = 3; //objId
  int32 Type = 4; //1:单体 2:一键精炼
  int32 Pos = 5; //位置（1--4）
}

//分解类型
message C2SBreakType {
  int32 Type = 1; //1:合体天仙装备 2:合体天仙符文
  repeated int32 BreakType = 2; //

}
message S2CBreakType {
  int32 Tag = 1;
  int32 Type = 2;
  repeated int32 BreakType = 3;
}

/***************通用养成系统****************/
message DevelopKey {
  string Name = 1;
  string StrValue = 2;
  int32 IntValue = 3;
}
//通用养成数据结构
message Develop {
  /*****key相关字段*****/
  int32 FuncId = 1; //系统Id

  int32 ObjId = 2; //对象Id
  int32 Part = 3;
  string Key = 4; //自定义key，看情况使用

  string Type = 5; //子系统类型

  /*****养成数据*****/
  int32 Level = 11; //等级
  int32 Star = 12; //星级
  int32 Exp = 13; //经验值
  int32 State = 14; //状态值，具体含义自定义
  int32 FightPos = 15; //出战位置，默认0
  int32 Unlock = 16; //是否解锁，0未解锁，1解锁
  int32 DrugLevel = 17; //吃丹等级

  /*****追加字段*****/
  int32 HLSkillId = 25; //幻灵当前皮肤对应的技能Id
}

// 自动推送礼包
message S2CAutoPushGift {
  int32 Id = 1;
  int32 GiftType = 2; //礼包类型 1：充值 2：仙玉
  int64 EndTime = 3; //礼包结束时间
  int32 GoodsPrice = 4; //价格
  int32 SalePrice = 5; //打折价格
  string ItemString = 6; //商品内容
  string ChatTips = 7; //展示提示
  int32 LimitVip = 8; //限制vip
  int32 GoldType = 9; //结算货币类型
  int32 GiftId = 10; //推送礼包的ID
  string IconSrc = 11; //图标资源名称
  string Ratio = 12; //超值比例
  int32 status = 13; //0 表示消失 1表示显示
  int32 TotalTimes = 14; //ios总购买次数
  int32 BuyTimes = 15; //ios已购买次数
}

//虚拟商城购买
message C2SPushGiftShopBuy {
  int32 GoodsId = 1;
  int32 Num = 2;
}
message S2CPushGiftShopBuy {
  int32 Tag = 1;
  int32 Gid = 2;
  int32 MsgParam = 3;
  string ItemString = 4;
}

//=========================================== 新组队 ===========================================//
message Team {
  int64 TeamId = 1; //队伍Id
  int64 Key1 = 2; //副本类型
  int64 Key2 = 3; //副本章节
  repeated TeamPlayer Players = 4; //队伍成员
  int64 FightValue = 5; //队伍战力
  int64 FightLimit = 6; //队伍战力限制
  int32 FuncId = 7;
  int64 Key3 = 8; //额外参数
  int64 Key4 = 9; //额外参数
}

message TeamPlayerShow {
  int64 UserId = 1;
  repeated IntAttr A = 2;
  repeated StrAttr B = 3;
}

//获取队伍列表
message C2STeams {
  int64 Key1 = 1; //副本类型
  int64 Key2 = 2; //副本章节
  int32 IsCross = 3; //是否连服 0 否；1 是；
  int64 FuncId = 4;
  int64 Key4 = 6;
}
message S2CTeams {
  int32 Tag = 1;
  repeated Team Teams = 2;
  int32 FuncId = 3;
}
//我的队伍信息
message S2CTeamInfo {
  int32 Tag = 1;
  Team Team = 2;
  repeated TeamPlayerShow Players = 3;
}
message C2STeamInfo {
}

//创建队伍
message C2SCreateTeam {
  int64 Key1 = 1; //副本类型
  int64 Key2 = 2; //副本章节
  int32 IsCross = 3; //是否连服 0 否；1 是；
  int64 FightLimit = 4; //队伍战力限制
  int64 FuncId = 5;
  int64 Key3 = 6; //额外参数3
  int64 Key4 = 7; //额外参数4
}
message S2CCreateTeam {
  int32 Tag = 1;
  Team Team = 2;
  repeated TeamPlayerShow Players = 3;
}

//编辑队伍
message C2SEditTeam {
  int64 TeamId = 1; //队伍Id
  int64 fvLimit = 2; //战力限制
}
message S2CEditTeam {
  int32 Tag = 1;
  Team Team = 2;
  repeated TeamPlayerShow Players = 3;
}

//编辑队伍额外参数
message C2SEditTeamKey {
  int64 TeamId = 1; //队伍Id
  int64 Key1 = 2; //额外参数1
  int64 Key2 = 3; //额外参数2
  int64 Key3 = 4; //额外参数3
  int64 Key4 = 5; //额外参数4
}
message S2CEditTeamKey {
  int32 Tag = 1;
  Team Team = 2;
  //repeated TeamPlayerShow Players = 3;
}

//加入队伍
message C2SJoinTeam {
  int64 TeamId = 1; //队伍Id
  int32 JoinType = 2; //加入队伍类型 1主动加入  2受队长邀请加入
}
message S2CJoinTeam {
  int32 Tag = 1;
  Team Team = 2;
  repeated TeamPlayerShow Players = 3;
}

// 邀请加入队伍
message C2SInviteTeam {
  int64 TeamId = 1; //队伍Id
  int64 UserId = 2; //被邀请人Id，为0时，代表一键邀请
  int32 InviteType = 3; //邀请范围 1、宗门 2、家族 3、仙侣 5、战队
}
message S2CInviteTeam {
  int32 Tag = 1;
  int64 Timestamp = 2; //可以邀请的时间戳
  int32 Index = 3;     //离线时间错误编号
}

// 拒绝某个队伍的队长的邀请
message C2SRefuseInvite {
  int64 TeamId = 1; //队伍Id
  int64 FuncId = 2; //功能Id
  int32 Param = 3; //0正常, 1处理偃甲副本情况
}
//发给被拒绝的队伍的队长
message S2CRefuseInvite {
  string TagStr = 1;
  int32 Param = 2; //0正常, 1处理偃甲副本情况
}

// 邀请通知
message S2CInviteTeamInfo {
  int32 Tag = 1;
  int64 Key1 = 2; //副本类型
  int64 Key2 = 3; //副本章节
  int64 TeamId = 4; //队伍Id
  TeamPlayer Player = 5; //邀请人
  int64 FuncId = 6; //功能Id
  int64 Key4 = 7; //额外参数
}

// 离开队伍
message C2SLeaveTeam {
  int64 TeamId = 1; //队伍Id
}
message S2CLeaveTeam {
  int32 Tag = 1;
  int32 FuncId = 2;
}
// 解散队伍
message S2CDisbandTeam {
  int32 Tag = 1;
  int32 FuncId = 2;
}

// 踢出队伍
message C2SKickTeam {
  int64 TeamId = 1; //队伍Id
  int64 UserId = 2; //队员Id
}
message S2CKickTeam {
  int32 Tag = 1;
  int32 FuncId = 2;
}

message C2SGetCanInvite {
  int32 Type = 1; //邀请类型 1 仙宗 2 家族 3 伴侣 5 战队
}
message S2CGetCanInvite {
  int32 Tag = 1;
  repeated TeamPlayer Players = 2;
  int32 Type = 3;
}

//===========================================幻灵秘境===========================================//
message HLBoss {
  int32 Id = 1; // 幻灵BOSS表中的Id
  int32 InsId = 2; // 副本Id
  int32 State = 3; // BOSS状态 0 死亡；1 正常
  int64 Revive = 4; // 复活CD
  int32 BossId = 5; // 幻灵BOSS表中的BOSSId
  ShowUserInfo Owner = 6; // 归属玩家（队伍队长）信息
}

message HLRank {
  int64 UserId = 1;
  string Nick = 2;
  int64 AreaId = 3; //区ID
  int32 ShowHead = 4; //头像
  int32 ShowHeadFrame = 5; //头像框
  int64 Hurt = 6; // 伤害
  string World = 7;
}

//获取秘境BOSS状态
message C2SGetHLBossList {
  int32 InsId = 1; //幻灵秘境Id
}
message S2CGetHLBossList {
  int32 Tag = 1;
  repeated HLBoss HLBossList = 2;
}

message C2SGetHLRankList {
  int32 InsId = 1; //幻灵秘境Id
  int32 BossId = 2; //幻灵BOSS表中的Id
}
message S2CGetHLRankList {
  int32 Tag = 1;
  repeated HLRank HLRankList = 2;
  int32 BossId = 3; // 幻灵BOSS表中的Id
  int32 MyRank = 4; // 我的伤害
  int64 MyHurt = 5; // 我的排名
}

//回复体力
message C2SReplyPower {
  int32 InsId = 1; //幻灵秘境Id
}
message S2CReplyPower {
  int32 Tag = 1;
}

//自动使用体力丹
message C2SAutoReply {
  int32 Auto = 3; //是否自动使用体力丹 1 是
}
message S2CAutoReply {
  int32 Tag = 1;
}

//进入秘境副本
message C2SEnterHLFB {
  int32 Type = 1; //副本类型
  int32 InsId = 2; //幻灵秘境Id
}
message S2CEnterHLFB {
  int32 Tag = 1;
}

//离开秘境副本
message C2SLeaveHLFB {
  int32 InsId = 1; //幻灵秘境Id
}
message S2CLeaveHLFB {
  int32 Tag = 1;
}

//挑战BOSS
message C2SStartFightHLPVE {
  int32 InsId = 1; //幻灵秘境Id
  int64 BossId = 2; //boss唯一Id
}
message S2CStartFightHLPVE {
  int32 Tag = 1;
  int32 BossId = 2;
  string TagP = 3;
}

//挑战玩家
message C2SStartFightHLPVP {
  int32 InsId = 1; //幻灵秘境Id
  int64 UseId = 2; //被挑战玩家Id
}
message S2CStartFightHLPVP {
  int32 Tag = 1;
}
//玩家体力过低提醒
message S2CNoPowerTip {
  int32 Tag = 1;
  int64 Timestamp = 2; // 踢出场景倒计时时间戳
}

//============================================幻灵养成=====================================//
message HuanLingDev {
  Develop HuanLing = 1; //幻灵养成
  repeated Develop Skills = 2; //幻灵技能
  Develop LingDan = 3; //灵丹养成
  Develop LingWu = 4; //灵武养成
  repeated Develop LWSkill = 5; //灵武技能
  EquipAllData Equips = 6; //幻灵装备
}

// 幻灵列表
message C2SHuanLingList {

}
message S2CHuanLingList {
  int32 Tag = 1;
  repeated HuanLingDev HuanLingList = 2;
}

// 幻灵等级信息
message S2CHLLevelList {
  int32 Tag = 1;
  repeated HLLevelInfo HLLevelInfo = 2;
}

message HLLevelInfo {
  int32 HlId = 1;
  int32 Level = 2;
}

// 幻灵解锁
message C2SHLUnlock {
  int32 HLId = 1;
}
message S2CHLUnlock {
  int32 Tag = 1;
  Develop HuanLing = 2; //幻灵养成
  string TagP = 3;
}

// 幻灵升级
message C2SHLLevelUp {
  int32 HLId = 1;
  int32 Auto = 2; //是否自动购买
  int32 OneFull = 3; //一级升满 0 1
}
message S2CHLLevelUp {
  int32 Tag = 1;
  Develop HuanLing = 2; //幻灵养成
  string TagP = 3;
}

// 幻灵出战
message C2SHLBattlePos {
  int32 HLId = 1;
}
message S2CHLBattlePos {
  int32 Tag = 1;
  Develop HuanLing = 2; //幻灵养成
  string TagP = 3;
}

// 幻灵灵丹
message C2SHLDan {
  int32 HLId = 1;
}
message S2CHLDan {
  int32 Tag = 1;
  Develop LingDan = 2; //灵丹
  string TagP = 3;
}

// 幻灵技能激活/升级
message C2SHLSkillLevelUp {
  int32 HLId = 1;
  int32 SkillId = 2;
}
message S2CHLSkillLevelUp {
  int32 Tag = 1;
  Develop Skill = 2; //幻灵技能升级
  string TagP = 3;
}

// 幻灵灵武激活/升阶
message C2SHLLWLevelUp {
  int32 HLId = 1;
  int32 LWId = 2;
}
message S2CHLLWLevelUp {
  int32 Tag = 1;
  Develop LingWu = 2; //幻灵灵武
  string TagP = 3;
}

// 幻灵灵武技能激活/升级
message C2SHLLWSkillLevelUp {
  int32 HLId = 1;
  int32 LWId = 2;
  int32 SkillId = 3;
}
message S2CHLLWSkillLevelUp {
  int32 Tag = 1;
  Develop Skill = 2; //幻灵灵武技能
  string TagP = 3;
}

//掉落表掉落
message C2SGetDropItems {
  int32 DropId = 1;
}
message S2CGetDropItems {
  int32 DropId = 1;
  repeated ItemData ItemData = 2;
}

//=====================================运营活动数据-新===============================================//
// 活动中的玩家基础数据类
message ActBasePlayerData {
  int64 PlayerId = 1;
  int64 ActId = 2;
  int64 ActType = 3;
  int64 StartTime = 4;
  int64 Score = 5;
}

// 积分寻宝数据类
message ActScoreXunBaoData {
  ActBasePlayerData ActBasePlayerData = 1; //积分寻宝活动数据
}

// 获取积分寻宝活动中的玩家数据
message C2SGetScoreXunBaoData {
  int64 ActId = 1;
}
message S2CGetScoreXunBaoData {
  int32 Tag = 1;
  int64 Score = 2; //玩家积分寻宝活动获得的积分
  repeated int32 Reward = 3; // 玩家已领取的积分对应的达标奖励
  int32 DoublePrize = 4; // 是否双倍奖励
  int32 FreeTimes = 5; // 免费次数
  int64 Amount = 6; // 奖池金额
  int32 ActId = 7; // 活动ID
  repeated TRGearItems Items = 8; // 转盘选项
}

// 转盘活动选择道具
message C2SXunBaoSelectItem {
  int32 ActId = 1;
  int32 Pos = 2; // 配置表中该格子对应的位置，不传，则默认为一键自选
  int64 ItemId = 3; // 玩家选择的道具ID，道具数量通过后端读表获取
}
message S2CXunBaoSelectItem {
  int32 Tag = 1;
}

// 获取心愿寻宝活动中的玩家数据
message C2SGetWishXunBaoData {
  int64 ActId = 1;
}
message S2CGetWishXunBaoData {
  int32 Tag = 1;
  int32 ActId = 2;
  int32 FreeTimes = 3; // 心愿寻宝免费次数
  int32 WishProgress = 4; // 心愿抽奖进度
  int32 CostTimes = 5; // 货币寻宝剩余次数
  int32 WishId = 6; // 心愿Id
  repeated WishXBCheckData WishXBCheckData = 7; // 心愿库抽奖次数
  int64 RecoverTime = 8; // 免费次数恢复倒计时
}

message WishXBCheckData {
  int32 WishId = 1;
  int32 Times = 2;
}

// 获取心愿库
message C2SGetWishList {
  int64 ActId = 1;
}
message S2CGetWishList {
  int32 Tag = 1;
  repeated WishReward WishList = 2;
  int32 ActId = 3;
}
message WishReward {
  int32 Id = 1;
  int64 ItemId = 2; // 道具Id
  int32 ItemNum = 3; // 道具数量
  int32 FuncId = 4; // 功能Id
  int32 Multiple = 5; // 是否可重复选择
  int32 Times = 6; // 保底次数
}

// 选择心愿道具
message C2SSelectWishReward {
  int64 ActId = 1;
  int32 WishId = 2;
}
message S2CSelectWishReward {
  int32 Tag = 1;
}

// 获取心愿礼包活动中的玩家数据
message C2SGetWishGiftData {
  int64 ActId = 1;
}
message S2CGetWishGiftData {
  int32 Tag = 1;
  int32 ActId = 2;
  repeated int32 Gifts = 3; // 玩家待领取的礼包ID
  repeated GiftReceiveDays HadReceiveDays = 4; // 庆典投资礼包-玩家投资礼包已领取的天数
  string MailPrize = 5; // 邮件奖励展示
  int32 BuyTimes = 6; // 流年仙阁购买次数
}

message GiftReceiveDays {
  int32 GiftId = 1; // 礼包Id
  repeated int32 Days = 2; // 已领取天数
}

// 领取心愿礼包
message C2SReceiveWishGift {
  int64 ActId = 1;
  int32 GiftId = 2;
  int32 Day = 3; // 领取天数
}
message S2CReceiveWishGift {
  int32 Tag = 1;
}

// 获取神龙寻宝活动中的玩家数据
message C2SGetDragonXunBaoData {
  int64 ActId = 1;
}
message S2CGetDragonXunBaoData {
  int32 Tag = 1;
  int32 ActId = 2;
  int32 FreeTimes = 3;
  int32 Coin1BuyTimes = 4;
  int32 Coin1BuyTotalTimes = 5;
  int32 Coin2BuyTimes = 6;
  int32 Coin2BuyTotalTimes = 7;
  int32 HotState = 8;
}

message C2SDragonXBBuyTimes {
  int64 ActId = 1;
  int32 Type = 2; // 货币类型 1 仙玉 2 元宝
  uint32 Times = 3; // 购买次数
}
message S2CDragonXBBuyTimes {
  int32 Tag = 1;
}

// 玩家修改自己的热点状态
message C2SDragonChangeHotState {
  int64 ActId = 1;
  int32 State = 2; // 热点状态 0 关闭 1 开启
}
message S2CDragonChangeHotState {
  int32 Tag = 1;
  int32 State = 2; // 热点状态 0 关闭 1 开启
}

message S2CUpdateAmount {
  int32 Tag = 1;
  int32 ActId = 2;
  int64 Amount = 3; //奖池金额
}

// 获取榜单活动中的玩家数据
message C2SGetRankPlayerData {
  int64 ActId = 1;
}
message S2CGetRankPlayerData {
  int32 Tag = 1;
  repeated int32 Reward = 2; //玩家已领取的积分对应的达标奖励
}

// 获取祭拜活动中的玩家数据
message C2SGetWorshipPlayerData {
  int64 ActId = 1;
}
message S2CGetWorshipPlayerData {
  int32 Tag = 1;
  int64 Score = 2; // 祭拜进度
  int64 DevoutScore = 3; // 虔诚之心进度
  repeated ShowUserInfo DevoutPlayer = 4; // 各个阶段虔诚者
  int64 PlayerScore = 5; // 个人祭拜积分
  repeated int32 Reward = 6; //玩家已领取的祭拜阶段达标奖励 对应奖励类型 9 此类型不是达标奖励配置中的类型，为活动特殊处理
  int32 ActId = 9;
  ShowUserInfo CurrDevoutPlayer = 10; //当前阶的虔诚者
  int64 StepScore = 11; // 当前阶进度
  int32 Step = 12; // 当前阶
}

// 获取祭拜之礼活动中的玩家数据
message C2SGetWorshipGiftPlayerData {
  int64 ActId = 1;
}
message S2CGetWorshipGiftPlayerData {
  int32 Tag = 1;
  int64 PlayerScore = 2; // 个人祭拜积分
  repeated int32 Reward2 = 3; //玩家已领取的祭拜个人积分达标奖励 对应奖励类型 1
  repeated int32 Reward3 = 4; //玩家已领取的祭拜全服积分达标奖励 对应奖励类型 2
  int32 ActId = 5;
  int64 Score = 6;
}

// 获取活动达标奖励
message C2SReceiveActReachReward {
  int32 ActId = 1; // 活动Id
  int32 Id = 2; // 奖励Id
  int32 Type = 3; //奖励类型
}
message S2CReceiveActReachReward {
  int32 Tag = 1;
  repeated int32 RewardId = 2; //已领取的达标奖励
  int32 ActId = 3;
  int32 Type = 4; // 1 个人达标； 2 全服达标；
}

// 祭拜
message C2SActWorship {
  int32 ActId = 1; //活动Id
  int32 ItemId = 2; //道具Id
  int32 Auto = 3; //是否自动购买
}
message S2CActWorship {
  int32 Tag = 1;
  int32 ActId = 2; //活动Id
  int32 ItemId = 3; //道具Id
  ItemInfo Reward = 4; //抽奖结果
}

// 领取祭拜阶段达成奖励
message C2SRecvStepReward {
  int32 ActId = 1; // 活动id
  int32 RewardId = 2; // 阶段Id
}
message S2CRecvStepReward {
  int32 Tag = 1;
  repeated int32 RewardId = 2; //已领取的达标奖励
  int32 ActId = 3;
}

message WorshipRecord {
  int64 UserId = 1;
  string Nick = 2;
  int64 ShowAreaId = 3;
  int32 ItemId = 4; // 使用道具
  int32 WorshipId = 5; // 祭拜对象
  string World = 6;
}

message C2SGetWorshipRecord {
  int32 ActId = 1;
}
message S2CGetWorshipRecord {
  int32 Tag = 1;
  repeated WorshipRecord Records = 2;
}

// 获取上古归藏活动中的玩家数据
message C2SPlayDice {
  int32 ActId = 1;
}
message S2CPlayDice {
  int32 Tag = 1;
  int32 ActId = 2;
  repeated int32 Imprint = 3; //玩家上古归藏活动获得的印记
  int32 Pos = 4; //当前位置
  int32 Floor = 5; //当前层
}

// 掷色子
message C2SDoPlayDice {
  int32 ActId = 1;
  int32 ItemId = 2;
  int32 Pos = 3; //自选步数
  int32 Auto = 4; //是否自动购买
}
message S2CDoPlayDice {
  int32 Tag = 1;
  int32 ActId = 2;
  int32 Pos = 3;
  repeated int32 Imprint = 4; //玩家上古归藏活动获得的印记
  int32 ItemId = 5;
}

// 领取掷色子层级大奖
message C2SReceiveFloorReward {
  int32 ActId = 1;
}
message S2CReceiveFloorReward {
  int32 Tag = 1;
}

// 掷色子全民奖励玩家数据
message C2SPlayDiceGift {
  int32 ActId = 1;
}
message S2CPlayDiceGift {
  int32 Tag = 1;
  int32 ActId = 2;
  int64 Score = 3; // 全民积分
  repeated int32 RewardId = 4; //已领取的达标奖励
}

// 遗迹探秘格子特效 双倍，三倍，大奖
message RuinsGrid {
  int32 Id = 1; //格子Id
  int32 Effect = 2; //1 大奖；2 双倍；3 三倍；
  int32 ItemId = 3; //大奖道具Id
}

// 层级大奖数据
message RuinsFloorReward {
  int32 Id = 1; //道具id
  int32 Num = 2; //大奖已选数量
  int32 MaxNum = 3; //大奖最大选择数量'
  int64 ItemNum = 4; //道具数量
}
message RuinsFloorRewards {
  repeated RuinsFloorReward RuinsFloorReward = 1;
  int32 Min = 2; //层数
  int32 Max = 3; //层数
}

// 获取遗迹探秘活动中的玩家数据
message C2SRuinsPlayerData {
  int32 ActId = 1;
}
message S2CRuinsPlayerData {
  int32 Tag = 1;
  int32 ActId = 2;
  int32 Floor = 3;
  repeated RuinsGrid RuinsGrid = 4; //已翻格子特效
  repeated int32 DefaultGrids = 6; //默认格子顺序
  int32 SelectItem = 7; //玩家选择大奖 废弃
  repeated RuinsFloorReward RuinsFloorReward = 8; //层级大奖数据
  ItemInfo SelectItemInfo = 9; //玩家选择大奖 new
}
// 玩家选择当前层大奖
message C2SSelectReward {
  int32 ActId = 1;
  int32 Floor = 2; //层级
  int32 ItemId = 3; //大奖Id
}
message S2CSelectReward {
  int32 Tag = 1;
}
// 玩家翻格子
message C2SSelectGrid {
  int32 ActId = 1;
  int32 Floor = 2; //层级
  int32 GridId = 3; //格子id
}
message S2CSelectGrid {
  int32 Tag = 1;
  int32 ActId = 2;
  RuinsGrid RuinsGrid = 3;
}
// 触发大奖后，翻开剩余的格子
message C2SGetLeftGird {
  int32 ActId = 1;
  int32 Floor = 2; //层级
}
message S2CGetLeftGird {
  int32 Tag = 1;
  int32 ActId = 2;
  repeated RuinsGrid RuinsGrid = 3;
}
// 过滤当前层大奖
message C2SFilterRewards {
  int32 ActId = 1;
  int32 Floor = 2;
}
message S2CFilterRewards {
  int32 Tag = 1;
  repeated RuinsFloorReward RuinsFloorReward = 3; //层级大奖数据
}

// 获取签到活动中的玩家数据
message C2SGetSignActPlayerData {
  int64 ActId = 1;
}
message S2CGetSignActPlayerData {
  int32 Tag = 1;
  repeated int32 Reward = 2; //玩家已领取的达标奖励
  int32 PlayerScore = 3; //玩家活动积分
  int32 ActId = 4;
}

/************************************************剑魂系统************************************************/
//剑魂镶嵌
message C2SSwordSoulEquip {
  string ItemId = 1; //剑魂道具唯一id
  int32 CellId = 2; //剑魂孔位
}
message S2CSwordSoulEquip {
  int32 Tag = 1;
  string ItemId = 2; //剑魂道具唯一id
  int32 CellId = 3; //剑魂孔位
}
//剑魂升级
message C2SSwordSoulLvUp {
  string ItemId = 1; //剑魂道具唯一id
}
message S2CSwordSoulLvUp {
  int32 Tag = 1;
  string ItemId = 2; //剑魂道具唯一id
}
//剑魂分解
message C2SSwordSoulResolve {
  repeated string ItemIds = 1; //剑魂道具唯一id的数组
}
message S2CSwordSoulResolve {
  int32 Tag = 1;
  repeated string ItemIds = 2; //剑魂道具唯一id的数组
}
//剑魂合成
message C2SSwordSoulHeCheng {
  int32 ItemIId = 1; //目标圣魂道具id
  repeated string ItemIds = 2; //选择消耗的剑魂
}
message S2CSwordSoulHeCheng {
  int32 Tag = 1;
  int32 ItemIId = 2; //目标圣魂道具id
  repeated string ItemIds = 3; //选择消耗的剑魂
}
//剑魂图录升星
message C2SSwordSoulStarUp {
  int32 ItemIId = 1; //图录剑魂道具id
}
message S2CSwordSoulStarUp {
  int32 Tag = 1;
  int32 ItemIId = 2; //图录剑魂道具id
}
//剑魂图录降星
message C2SSwordSoulStarDown {
  int32 ItemIId = 1; //图录剑魂道具id
}
message S2CSwordSoulStarDown {
  int32 Tag = 1;
  int32 ItemIId = 2; //图录剑魂道具id
}
//剑魂图录大师激活
message C2SSwordSoulStrength {
}
message S2CSwordSoulStrength {
  int32 Tag = 1;
  int32 Level = 2; //激活等级
}

//保存的剑魂所有信息
message SwordSoul {
  repeated SwordSoulCell SwordSoulCells = 1;
  repeated SwordSoulTulu SwordSoulTulus = 2;
  int32 TuluStrengthLevel = 3; //图录大师等级
  repeated int32 ResolveQuality = 4; //保存的分解品质
  int32 AutoResolve = 5; //是否自动分解
}

//保存的剑魂孔位和镶嵌数据
message SwordSoulCell {
  int32 CellId = 1; //剑魂孔位id
  string ItemId = 2; //镶嵌的剑魂道具唯一id
}

//保存的图录星级数据
message SwordSoulTulu {
  int32 ItemIId = 1; //图录剑魂道具id
  int32 LevelId = 2; //目前激活的图录等级
}

//保存分解品质
message C2SSwordSoulResolveQuality {
  repeated int32 Quality = 1; //品质数组
  int32 AutoResolve = 2; //背包满是否自动分解，1-是
}
message S2CSwordSoulResolveQuality {
  int32 Tag = 1;
  repeated int32 Quality = 2; //品质数组
  int32 AutoResolve = 3; //背包满是否自动分解，1-是
}

//剑魂拆解
message C2SSwordSoulDisassemble {
  repeated string ItemIds = 1; //剑魂道具唯一id的数组
}
message S2CSwordSoulDisassemble  {
  int32 Tag = 1;
  repeated string ItemIds = 2; //剑魂道具唯一id的数组
}

/***********************************************偃甲材料副本*******************************************************/
message DBPlayerYJFB {
  repeated DBYJFBGuanQiaData DbGuanQiaData = 1;
}

message DBYJFBGuanQiaData {
  int32 FuBenId = 1; //副本Id
  int32 GuanQiaId = 2; //关卡Id
  int32 GuanQiaState = 3; //关卡状态 0未探索 1已探索 2可扫荡(针对通道关卡) 3已扫荡(针对通道关卡)
  int32 TriEventNum = 4; //当前已触发事件数量
  int32 AllEventNum = 5; //事件总数
  int32 FirstPass = 6; //关卡是否首通 0未首通 1首通
  repeated YJFBGrid Grids = 7; //关卡内地图的所有格子
  YJFBGrid PlayerGrid = 8; //玩家在地图中的位置
}

//请求所有偃甲副本数据
message C2SGetYJFBData {
}
message S2CGetYJFBData {
  int32 Tag = 1;
  repeated SimYJFB Fb = 2;
}
message SimYJFB {
  int32 FuBenId = 1;
  repeated SimGuanQia Gq = 2;
}
message SimGuanQia {
  int32 FuBenId = 1; //副本Id
  int32 GuanQiaId = 2; //关卡Id
  int32 GuanQiaState = 3; //关卡状态 0未探索 1已探索 2可扫荡(针对通道关卡) 3已扫荡(针对通道关卡)
  int32 TriEventNum = 4; //当前已触发事件数量
  int32 AllEventNum = 5; //事件总数
  int32 FirstPass = 6; //关卡是否首通 0未首通 1首通
}

//请求偃甲副本关卡数据
message C2SGetYJFBGuanQiaData {
  int32 FuBenId = 1; //副本Id
  int32 GuanQiaId = 2; //关卡Id
}
message S2CGetYJFBGuanQiaData {
  int32 Tag = 1;
  int32 FuBenId = 2; //副本Id
  int32 GuanQiaId = 3; //关卡Id
  int32 GuanQiaState = 4; //关卡状态 0未探索 1已探索 2可扫荡(针对通道关卡)
  repeated YJFBGrid Grids = 5; //关卡内地图的所有格子
  YJFBGrid PlayerGrid = 6; //玩家在地图中的位置
  repeated YJFBHelper YJFBHelper = 7;
}
//偃甲副本地图格子
message YJFBGrid {
  int32 X = 1;
  int32 Y = 2;
  int32 State = 3; // 状态： -1不可见 0没有地上物 1有地上物
  int32 Kind = 4; // 地上物类型： 0无    1战斗怪    2采集物    3宝箱     4随机事件物  5树(边界)  6石头(边界)
  int32 EventId = 5; //事件Id
  int32 FaceRes = 6; //地表图片资源
  int32 Param = 7; //额外参数，用于处理特殊情况
  int32 EventType = 8; //
}

//偃甲副本在关卡中移动
message C2SYJFBGuanQiaMove {
  int32 FuBenId = 1; //副本Id
  int32 GuanQiaId = 2; //关卡Id
  YJFBGrid TargetGrid = 3; //玩家移动目标位置
}
message S2CYJFBGuanQiaMove {
  int32 Tag = 1;
  int32 FuBenId = 2; //副本Id
  int32 GuanQiaId = 3; //关卡Id
  repeated MoveYJFBGrid MovePath = 4; //玩家移动路径
}
message MoveYJFBGrid {
  YJFBGrid MoveGrid = 1; //玩家移动格子
  repeated YJFBGrid NewVisibleGrid = 2; //玩家移动过程中新产生的可见格子
}

//偃甲副本在关卡中触发事件
message C2SYJFBGuanQiaTriggerEvent {
  int32 FuBenId = 1; //副本Id
  int32 GuanQiaId = 2; //关卡Id
  YJFBGrid TriggerGrid = 3; //玩家触发事件位置
}
message S2CYJFBGuanQiaTriggerEvent {
  int32 Tag = 1;
  int32 FuBenId = 2; //副本Id
  int32 GuanQiaId = 3; //关卡Id
  YJFBGrid TriggerGrid = 4; //玩家触发事件成功后，导致格子状态变化
  int32 TriEventNum = 5; //当前已触发事件数量
  repeated YJFBHelper YJFBHelper = 6;
}

message YJFBHelper {
  int32 X = 1;
  int32 Y = 2;
}

//偃甲副本扫荡
message C2SYJFBSweep {
  int32 FuBenId = 1; //副本Id
  int32 GuanQiaId = 2; //关卡Id
}
message S2CYJFBSweep {
  int32 Tag = 1;
}

//偃甲副本道具兑换体力
message C2SYJFBExchangeTiLi {
}
message S2CYJFBExchangeTiLi {
  int32 Tag = 1;
}

//偃甲副本踢出关卡
message S2CYJFBOutQuanQia {
  int32 Tag = 1;
}

//偃甲副本自动使用聚神丹
message C2SYJFBAutoUseJuShenDan {
  int32 Use = 1; //0不使用  1使用
}
message S2CYJFBAutoUseJuShenDan {
  int32 Tag = 1;
}

//偃甲副本首通
message S2CYJFBFirstPass {
  int32 Tag = 1;
  int32 FuBenId = 2; //副本Id
  int32 GuanQiaId = 3; //关卡Id
  int32 IsFirstPass = 4; //0非首通  1首通
}

////收益仓库 仓库变化
//message S2CYJFBWareHouseAdd {
//    repeated ItemData Items = 1;
//}
////收益仓库 仓库信息
//message C2SYJFBWareHouseGetInfo {
//}
//message S2CYJFBWareHouseGetInfo {
//    repeated ItemData Items = 1;
//}
////收益仓库 仓库道具领取
//message C2SYJFBWareHouseReceive {
//}
//message S2CYJFBWareHouseReceive {
//    int32 Tag = 1;
//}

/***********************************************收益仓库(通用)*******************************************************/
//收益仓库(通用)
message DBWareHouse {
  int32 WhId = 1; //仓库Id
  repeated ItemData Items = 2; //仓库库存
}
//收益仓库添加道具
message S2CWareHouseAdd {
  int32 WhId = 1; //仓库Id
  repeated ItemData Items = 2;
}
//收益仓库查看道具
message C2SWareHouseGetInfo {
  int32 WhId = 1; //仓库Id
}
message S2CWareHouseGetInfo {
  int32 Tag = 1;
  int32 WhId = 2; //仓库Id
  repeated ItemData Items = 3;
}
//收益仓库领取道具
message C2SWareHouseReceiveItem {
  int32 WhId = 1; //仓库Id
}
message S2CWareHouseReceiveItem {
  int32 Tag = 1;
  int32 WhId = 2; //仓库Id
}
//收益仓库部分领取道具
message C2SWareHousePartReceive {
  int32 WhId = 1; //仓库Id
  repeated int32 ItemIds = 2; //要领取的道具Id数组
}
message S2CWareHousePartReceive {
  int32 Tag = 1;
  int32 WhId = 2; //仓库Id
}

// 飞升系统
message C2SFeiShengStageUp {
  int32 Type = 1; // 0: 战斗，1: 使用飞升丹
}

message S2CFeiShengStageUp {
  int32 Type = 1; // 0: 战斗，1: 使用飞升丹
  int32 Tag = 2;
}

/***********************************************王者装备*******************************************************/
//装备数据
message PlayerKingEquip {
  int32 Id = 1; //套装Id
  repeated KingEquipData KingEquipData = 2; //装备数据
  int32 SuitLev = 3; //套装阶级
  int32 CollectId = 4; //套装收集编号
  int32 LifePos = 5; //王者之命--吃过的位置
  int32 LifeLev = 6; //王者之命--阶级(0---)
  repeated KingWingData KingWingData = 7; //王者之翼数据
  int32 WingStar = 8; //王者之翼--星级(0---)
}

//装备位置数据
message KingEquipData {
  int32 Pos = 1; //位置
  string SItemId = 2; //唯一Id
}

//王者之翼宝石位置数据
message KingWingData {
  int32 Pos = 1; //位置
  string SItemId = 2; //唯一Id
}

//获取王者套装数据
message C2SGetKingEquipData {

}
message S2CGetKingEquipData {
  repeated PlayerKingEquip PlayerKingEquip = 1; //数据
}

//一键穿戴王者套装装备
message C2SOneKeyKingEquipWear {
  int32 Id = 1; //套装Id
}
message S2COneKeyKingEquipWear {
  int32 Tag = 1;
  int32 Id = 2; //套装Id
}

//单个穿戴王者套装
message C2SKingEquipWear {
  int32 Id = 1; //套装Id
  int32 Pos = 2; //位置
}
message S2CKingEquipWear {
  int32 Tag = 1;
  int32 Id = 2; //套装Id
  int32 Pos = 3; //位置
}

//王者套装幻化
message C2SKingSuitHuanHua {
  int32 Id = 1; //套装Id
}
message S2CKingSuitHuanHua {
  int32 Tag = 1;
  int32 Id = 2; //套装Id
}

//王者之命升级
message C2SKingLifeLev {
  int32 Id = 1; //套装Id
}
message S2CKingLifeLev {
  int32 Tag = 1;
  int32 Id = 2; //套装Id
}

//王者之翼一键镶嵌玉石
message C2SOneKeyJadeWear {
  int32 Id = 1; //套装Id
}
message S2COneKeyJadeWear {
  int32 Tag = 1;
  int32 Id = 2; //套装Id
}

//王者之翼幻化
message C2SKingWingHuanHua {
  int32 Id = 1; //套装Id
}
message S2CKingWingHuanHua {
  int32 Tag = 1;
  int32 Id = 2; //套装Id
}

//王者之翼升星
message C2SKingWingStar {
  int32 Id = 1; //套装Id
}
message S2CKingWingStar {
  int32 Tag = 1;
  int32 Id = 2; //套装Id
}

//王者装备合成
message C2SKingEquipCompose {
  int32 ItemId = 1; //道具Id
  string ItemIds1 = 2; //装备Id
  string ItemIds2 = 3; //装备Id
  string ItemIds3 = 4; //装备Id
}
message S2CKingEquipCompose {
  int32 Tag = 1;
  int32 ItemId = 2; //道具Id
  string SItemId = 3; //道具唯一Id
}

/***********************************************boss秘境*******************************************************/
//秘境Boss信息
message MiJingBossInfo {
  int32 LayerId = 1;
  int32 BossId = 2;
  int64 CurrHp = 3;
  int64 MaxHP = 4;
  MiJingBossOwnerData BossOwner = 5; //Boss归属玩家
  int32 State = 6; //Boss状态  0,死亡  1,复活
  int64 ReliveTimestamp = 7; //复活时间戳
  int64 BossLockBloodTime = 8; //Boss无敌状态时间戳
  int64 BoxUniqueId = 9; //宝箱全局唯一的怪物Id
  int64 BoxExpireTimestamp = 10; //宝箱消失时间戳
  int64 BoxUserId = 11; //可以开宝箱的玩家Id(获得归属玩家)
}

//客户端请求所有秘境Boss的信息
message C2SMiJingBossInfo {
}
//向客户端发送秘境Boss信息
message S2CMiJingBossInfo {
  repeated MiJingBossInfo Items = 1;
}

//进入Boss秘境场景
message C2SBossMiJingJoinScene {
  int32 LayerId = 1;
}
message S2CBossMiJingJoinScene {
  int32 Tag = 1;
  int32 LayerId = 2;
}

//离开Boss秘境场景
message C2SBossMiJingLeaveScene {
  int32 LayerId = 1;
}
message S2CBossMiJingLeaveScene {
  int32 Tag = 1;
  int32 LayerId = 2;
}

//Boss秘境玩家伤害数据
message MiJingBossDamage {
  ShowUserInfo User = 1;
  int64 DamageTime = 2;
  int64 Damage = 3;
}
//Boss秘境伤害排行
message C2SMiJingBossDamageRank {
  int32 LayerId = 1;
  int32 BossId = 2;
}
message S2CMiJingBossDamageRank {
  int32 LayerId = 1;
  int32 BossId = 2;
  repeated MiJingBossDamage Items = 3;
}
//Boss秘境我的伤害
message S2CMiJingBossDamageMy {
  int32 LayerId = 1;
  int32 BossId = 2;
  int64 MyDamage = 3;
}
//秘境Boss归属玩家数据
message MiJingBossOwnerData {
  ShowUserInfo User = 1;
  int64 Hp = 6; //血量
}
//Boss秘境通知客户端归属发生变化
message S2CMiJingBossOwner {
  int32 LayerId = 1;
  int32 BossId = 2;
  MiJingBossOwnerData Data = 3;
}
//Boss秘境设置自动战斗
message C2SBossMiJingAutoFight {
  int32 Auto = 1; //0不自动战斗  1自动战斗
}

//秘境Boss归属玩家开宝箱
message C2SMiJingBossOpenBox {
  int32 LayerId = 1;
  int32 BossId = 2;
  int32 OpenType = 3; //开启方式 1普通开启 2至尊开启
}
message S2CMiJingBossOpenBox {
  int32 Tag = 1;
  int32 OpenType = 2;
  S2CMiJingBossBoxInfo BoxInfo = 3;
}
//秘境Boss归属玩家宝箱信息
message C2SMiJingBossBoxInfo {
  int32 LayerId = 1;
  int32 BossId = 2;
}
message S2CMiJingBossBoxInfo {
  int32 LayerId = 1;
  int32 BossId = 2;
  int64 ExpireTimestamp = 3; //宝箱消失时间戳
  int32 OpenTimes = 4; //剩余开启次数
  int32 TotalOpenTimes = 5; //总开启次数
  int64 UniqueId = 6; //全局唯一的怪物Id
  int64 BoxUserId = 7; //可以开宝箱的玩家Id(获得归属玩家)
}

//秘境Boss关注Boss
message C2SMiJingFocusBoss {
  int32 LayerId = 1;
  int32 BossId = 2;
  int32 State = 3; //1关注， 0取消关注
}
message S2CMiJingFocusBoss {
  int32 Tag = 1;
  int32 LayerId = 2;
  int32 BossId = 3;
  int32 State = 4; //1关注， 0取消关注
}

message MiJingBossFocusInfo {
  int32 LayerId = 1;
  int32 BossId = 2;
  int32 State = 3; //1关注， 0取消关注
}
//秘境Boss关注信息
message C2SMiJingBossFocusInfo {
  int32 LayerId = 1;
}
message S2CMiJingBossFocusInfo {
  int32 LayerId = 1;
  repeated MiJingBossFocusInfo Items = 2;
}

// 法阵系统
message FaZhengData {
  int32 Id = 1;
  int32 Level = 2; // 法阵升级
  int32 Stage = 3; // 法阵认主
}

message DBPlayerFaZheng {
  repeated FaZhengData List = 1; // 法阵列表
}


message S2CFaZhengData {
  repeated FaZhengData List = 1; // 法阵列表
}

// 法阵升级
message C2SFaZhengLevelUp {
  int32 Id = 1; // 法阵Id
}

message S2CFaZhengLevelUp {
  int32 Tag = 1;
  int32 Id = 2;
  int32 Level = 3;
}

// 法阵认主
message C2SFaZhengStageUp {
  int32 Id = 1;
}

message S2CFaZhengStageUp {
  int32 Tag = 1;
  int32 Id = 2;
  int32 Stage = 3;
}

/***********************************************游戏助手（托管）*******************************************************/
//托管配置
message HelperCfg {
  int32 Id = 1; //托管Id
  int32 FuncId = 2; //功能Id
  repeated int32 CfgParam = 3; //功能参数集合
  repeated int32 ServeryCfgParam = 4; //服务器参数集合（托管下临时数据）
}

//托管log
message HelperLog {
  int32 Id = 1; //托管Id
  int32 FuncId = 2; //功能Id
  int64 Time = 3; //记录时间
  int32 State = 5; //1:成功 2：失败 3：消耗
  int64 CostMode = 6; //消耗方式
  int32 CostItemId = 7; //消耗道具id
  int32 CostItemNum = 8; //消耗道具num
  string SubName = 9; //
  int32 Val1 = 10; //
  int32 Val2 = 11; //
  string World = 12;
}

//获取托管配置
message C2SGetHelperCfg {
}
message S2CGetHelperCfg {
  repeated HelperCfg Cfg = 1; //开启托管的功能集合
}
//开始托管
message C2SStartHelper {
  repeated HelperCfg Cfg = 1; //开启托管的功能集合
}
message S2CStartHelper {
  int32 Tag = 1;
}

//停止托管
message C2SStopHelper {
}
//因其他原因中断托管时会发这个包
message S2CStopHelper {
  int32 Tag = 1; //错误代码
  string TagP = 2; //错误参数
}

//上一个托管任务完成，拉取下一个
message C2SGetHelperNext {
}
message S2CGetHelperNext {
  int32 Tag = 1; //
  HelperCfg Cfg = 2; //下一个任务
}

//获取托管log
message C2SGetHelperLog {
}
message S2CGetHelperLog {
  int32 Tag = 1; //
  repeated HelperLog HelperLog = 2; //log
}

/***********************************************公众号*******************************************************/
//公众号领奖
message C2SMpFocusReward {
  int32 ActId = 1; //活动Id
}
message S2CMpFocusReward {
  int32 Tag = 1; //
}

//手机绑定领奖
message C2SBindPhoneReward {
  int32 ActId = 1; //活动Id
}
message S2CBindPhoneReward {
  int32 Tag = 1; //
}

//获取公众号信息配置
message C2SGetMpFocusInfo {
  int32 AppId = 1; //游戏Id
  int32 ChannelId = 2; //渠道Id
}
message S2CGetMpFocusInfo {
  int32 Tag = 1;
  int32 ActId = 2;                    //活动Id
  int32 AppId = 3;                    //游戏Id
  int32 ChannelId = 4;                //渠道Id
  int32 Type = 5;                     //界面类型 1：显示公众号二维码 2：显示关注公众号的奖励并能够领取
  string ImgName = 6;                 //公众号二维码
  string MpName = 7;                  //公众号名称
  repeated ItemInfo ImgReward = 8;    //关注公众号奖励
  string Desc = 9;                    //描述
}

//获取绑定手机信息配置
message C2SGetBindPhoneInfo {
  int32 AppId = 1; //游戏Id
  int32 ChannelId = 2; //渠道Id
}
message S2CGetBindPhoneInfo {
  int32 Tag = 1;
  int32 ActId = 2;                //活动Id
  int32 AppId = 3;                //游戏Id
  int32 ChannelId = 4;            //渠道Id
  repeated ItemInfo ImgReward = 5; //绑定手机号奖励
  string ImgName = 6;              //界面底图
}

//授权有礼领奖
message C2SAuthPoliteGetPrize {
  int32 ActId = 1; //活动Id
}
message S2CAuthPoliteGetPrize {
  int32 Tag = 1;
}

/************************世界等级 ***************************/
// 获得世界等级
message C2SWorldLevelInfo {

}
message S2CWorldLevelInfo {
  int64 WorldLevelOfToday = 1; //本服按天
  int64 WorldLevelOfWeek = 2; //本服按周
  int64 SWorldLevelOfToday = 3; //连服按天
  int64 SWorldLevelOfWeek = 4; //连服按周
}

/************************************************家族竞技*********************************************************/
// 上阵队员
message C2SFamilyJJCAdd {
  int64 UserId = 1; // 队员id
  int32 Pos = 2; // 位置
}

// 上阵队员回包
message S2CFamilyJJCAdd {
  int32 Tag = 1;
}

message FamilyTeamMember {
  int64 UserId = 1; // 玩家ID
  repeated IntAttr A = 2;
  repeated StrAttr B = 3;
}

message FamillyJJCRankItem {
  string Name = 1; // 名称
  int32 Score = 2; // 积分
  string World = 3;
}

message DBFamilyJJCData {
  repeated int32 JoinAward = 1; // 参与奖励
}

// 请求家族数据
message C2SGetFamilyJJCData {

}

// 请求家族数据回包
message S2CGetFamilyJJCData {
  int32 Tag = 1;
}

// 请求家族竞技排行榜
message C2SFamilyJJCRank {

}

message S2CFamilyJJCRank {
  repeated FamillyJJCRankItem Player = 1; // 玩家排行榜
  repeated FamillyJJCRankItem Family = 2; // 家族排行榜
  int32 PlayerScore = 3; // 我的积分
  int32 PlayerRank = 4; // 我的排名
  int32 FamilyScore = 5; // 家族当前积分
  int32 FamilyRank = 6; // 家族的排名
}

// 家族竞技状态
message S2CFamilyJJCState {
  int32 state = 1; // 系统开启状态： 0: 关闭， 1： 开启
}

// 家族竞技数据
message S2CFamilyJJCData {
  repeated FamilyTeamMember Member = 1; // 成员列表
  repeated int32 State = 2; // 领取状态
}

// 家族竞技购买次数
message C2SFamilyJJCBuyTimes {

}

// 家族竞技购买次数回包
message S2CFamilyJJCBuyTimes {
  int32 Tag = 1;
}

// 家族竞技领取参与奖励
message C2SFamilyJJCRecieveAward {
  int32 Id = 1; // 奖励id
}

// 家族竞技领取参与奖励回包
message S2CFamilyJJCRecieveAward {
  int32 Tag = 1;
}

// 家族竞技匹配战斗
message C2SFamilyJJCJoin {

}

// 家族竞技匹配战斗回包
message S2CFamilyJJCJoin {
  int32 Tag = 1;
  repeated FamilyTeamMember Self = 2; // 已方成员列表
  repeated FamilyTeamMember Enemy = 3; // 敌方成员列表
  int32 SelfSymbolId = 4; // 我方家族图标
  int32 TargetSymbolId = 5; // 敌方家族图标
}

// 家族竞技开始战斗
message C2SFamilyJJCFight {
  repeated int64 UserId = 1; // 已方阵型顺序
}

// 家族竞技开始战斗回包
message S2CFamilyJJCFight {
  int32 Tag = 1;
}

//获取购买信息
message C2SFamilyJJCGetBuyInfo {

}
//获取购买信息回包
message S2CFamilyJJCGetBuyInfo {
  int32 Coin = 1; //货币数量
  int32 CoinType = 2; //货币类型
  int32 LeftTimes = 3; //剩余次数
}

/***********************************************意见反馈*******************************************************/
//反馈数据结构
message FeedBack {
  string MsgId = 1; //反馈记录的唯一Id
  int32 Type = 2; //反馈类型：1BUG，2充值，3其他
  string Msg = 3; //反馈信息
  string ReplyMsg = 4; //客服回复信息
  int32 State = 5; //状态，0待处理，1已答复，2玩家已阅，3已删除
}

//拉取数据
message C2SGetFeedBack {
}
message S2CGetFeedBack {
  int32 Tag = 1;
  repeated FeedBack Data = 2;
}

//提交意见
message C2SNewFeedBack {
  int32 Type = 1; //反馈类型：1BUG，2充值，3其他
  string Msg = 2; //反馈信息
}
message S2CNewFeedBack {
  int32 Tag = 1;
}

//已读所有答复
message C2SReadFeedBack {
}

//应用评分状态(是否开启)
message C2SAppRatingState {}
message S2CAppRatingState {
  int32 OpenState = 1;    //0未开启 1开启
  string Title = 2;       //后台配置文本内容
}

//应用评分操作
message C2SAppRatingOp {
  int32 Op = 1;   // 1给个好评 2反馈意见 3下次再说
  string Msg = 2; //反馈信息
}
message S2CAppRatingOp {
  int32 Tag = 1;
}

//应用评分领奖
message C2SAppRatingGetPrize {}
message S2CAppRatingGetPrize {
  int32 Tag = 1;
}

/***********************************************英雄*******************************************************/
//英雄养成数据
message PlayerHeroDevelop {
  int32 Id = 1; //英雄id
  int32 Quality = 2; //品质
  int32 Star = 3; //星级
  int32 Lev = 4; //等级
  int32 GradeLev = 5; //进阶等级
  int32 LevExp = 6; //等级经验
  repeated Skill ActiveSkills = 7; //主动技能
  repeated Skill PassiveSkills = 8; //被动技能
}

//获取英雄信息
message C2SGetHeroList {

}
message S2CGetHeroList {
  repeated PlayerHeroDevelop HeroDevelopData = 1;
}

//英雄激活
message C2SHeroActive {
  int32 Id = 1; //英雄id
}
message S2CHeroActive {
  int32 Tag = 1;
  int32 Id = 2; //英雄id
}

//英雄出站
message C2SHeroIntoBattle {
  int32 Id = 1; //英雄id
}
message S2CHeroIntoBattle {
  int32 Tag = 1;
  int32 Id = 2; //英雄id
}

//获取单个英雄信息
message C2SGetHeroInfo {
  int32 Id = 1; //ID
}
message S2CGetHeroInfo {
  int32 Tag = 1;
  PlayerHeroDevelop Data = 2;
}

//升级
message C2SHeroLevelUp {
  int32 Id = 1; //ID
  int32 Level = 2; //1或5
}
message S2CHeroLevelUp {
  int32 Tag = 1;
}

//升星
message C2SHeroStarUp {
  int32 Id = 1; //ID
}
message S2CHeroStarUp {
  int32 Tag = 1;
  int32 HeroId = 2;
  int32 QualityUp = 3; //0 不升品 1 升品
}

//进阶
message C2SHeroGradeLevUp {
  int32 Id = 1; //ID
}
message S2CHeroGradeLevUp {
  int32 Tag = 1;
}

//英雄技能
message C2SHeroSkillLevelUp {
  int32 HeroId = 1;
  int32 SkillId = 2;
}
message S2CHeroSkillLevelUp {
  int32 Tag = 1;
}

//英雄成就数据
message PlayerHeroAchi {
  int32 AchiId = 1; //成就id
  int32 Count = 2; //当前完成度
  int32 Receive = 3; //是否领取 0没有 1完成
}

//英雄羁绊数据数据
message PlayerHeroBond {
  int32 BondId = 1; //羁绊id
  int32 Lev = 2; //等级
  int32 LevExp = 3; //等级经验
  Skill SpeSkill = 4; //特殊技能
  int32 GroupSkillLev = 5; //组合技能等级
}

//获取战阵信息
message C2SGetHeroBondInfo {
  int32 BondId = 1;
}
message S2CGetHeroBondInfo {
  int32 Tag = 1;
  int32 BondId = 2;
  repeated PlayerHeroDevelop HeroDevelopData = 3;
  int32 Lev = 4;
  int32 LevExp = 5;
  Skill SpeSkill = 6;
  int32 GroupSkillLev = 7;
}

//获取组合技信息
message C2SGetHeroGroupSkill {
  int32 BondId = 1;
}
message S2CGetHeroGroupSkill {
  int32 BondId = 1;
  int32 SkillLevel = 2;
}

//获取羁绊成就列表
message C2SGetHeroAchiList {
  int32 BondId = 1;
}
message S2CGetHeroAchiList {
  int32 BondId = 1;
  repeated PlayerHeroAchi HeroAchiList = 2;
}

//组合技升级
message C2SHeroGroupSkillLevelUp {
  int32 BondId = 1;
}
message S2CHeroGroupSkillLevelUp {
  int32 Tag = 1;
}

//战阵升级
message C2SHeroBondLevelUp {
  int32 BondId = 1;
  int32 Level = 2; // 1 or 5
}
message S2CHeroBondLevelUp {
  int32 Tag = 1;
}

//战阵特性升级
message C2SHeroBondSpeLevelUp {
  int32 BondId = 1;
}
message S2CHeroBondSpeLevelUp {
  int32 Tag = 1;
}

//羁绊成就领奖
message C2SGetHeroAchiPrize {
  int32 AchiId = 1;
}
message S2CGetHeroAchiPrize {
  int32 Tag = 1;
}

//单个羁绊成就信息
message S2CSendHeroAchi {
  PlayerHeroAchi HeroBond = 1;
}

//英雄技能
message C2SHeroSkillInfo {
  int32 HeroId = 1;
}
message S2CHeroSkillInfo {
  int32 Tag = 1;
  int32 HeroId = 2;
  repeated Skill Skills = 3;
}

/************************************************跨服消息协议******************************************************/
// 跨服消息通用协议，具体消息内容放到body中
message C2SCrossMessage {
  int64 SendId = 1; //发送放服务器Id
  int64 UserId = 2; //发送方角色Id
  int64 MapId = 3; //玩家所在地图Id
  int32 Order = 4; //序列号，确保消息的对应关系
  repeated int64 Receiver = 5; // 广播消息时的目标userId
  bytes Body = 6; //消息主体，Socket协议包
}

//S Go语言游戏服务器
//J java语言跨服服务器
//P	java语言中心服务器
//F Go语言战斗服务器

// 游戏服务器向JAVA服务器发送消息
message S2JFightInit {
  int64 TargetId = 1; //目标id
  //int32 TargetType = 2; //目标类型 1 玩家；2 怪物
}

// JAVA服务器向跨服战斗服务器转发消息
message J2FFightStart {
  repeated J2FFightUnit MyUnits = 1; //挑战方单位
  repeated J2FFightUnit TargetUnits = 2; //被挑战方单位
  int32 FightType = 4; //战斗类型，详见《战斗场景表》，需要同步在consts.InstanceType中声明
  int32 WorldLevel = 5; //世界等级
  string Param = 6; //自带参数，原样返回
  repeated int32 ShieldTrigger = 7; //BOSS护盾触发血量百分比
  int32 TotalShieldMath = 8; //总护盾值
  int32 OnceShieldMath = 9; //护盾单次衰减值
  int32 InvincibleShield = 10; //BOSS是否携带无敌盾，0否，1是。当战斗服返回无敌盾已触发，且业务层判断未过期，则传1
  int32 InvincibleShieldTrigger = 11; //BOSS无敌盾触发血量百分比。如果已经触发过无敌盾，则这个值传0
  int32 ImagePlayerBossWudi = 12; // 镜像BOSS无敌标记，1表示处于无敌状态
  int32 LmEliteFirstFight = 13; // 龙脉镜像BOSS第一次战斗， 1表示第一次战斗
  int32 LmEliteCamp = 14; // 龙脉镜像BOSS所属阵营
  int32 LmEliteSheildStep = 15; // 龙脉镜像BOSS无敌盾阶段 0未触发过 1已触发70盾 2已触发30盾
}

//跨服专用：战斗单位携带的信息
message J2FFightUnit {
  int64 Id = 1; //玩家Id，或怪物Id 龙脉精英怪，助战单位的id表示位置
  int64 RefreshId = 2; //如果是怪物，传刷新Id
  int32 Type = 3; //单位类型，1玩家，2怪物，3助战单位
  repeated Skill Skills = 4; //单位携带的业务附加技能
  int64 Hp = 5;//剩余血量
  int64 BossShield = 6; //BOSS护盾值
  int32 UseShieldTimes = 7; //已触发护盾次数
  int32 BossShieldState = 8; //boss护盾状态，0停用，1启用
  int64 MaxHp = 9; //BOSS最大血量，战斗服回传
  int32 LmHpMultiple = 10; // 龙脉精英怪血量加成倍数，万分比加成
  int32 LmMonsterID = 11; // 龙脉精英怪对应属性配置id
  int64 Atk = 12; //攻击
  int64 Def = 13; //防御
}

// 跨服战斗服务器返回战斗结果给JAVA服务器
message F2JFightStart {
  int32 Tag = 1;
  S2CBattlefieldReport Report = 2; //战报
  repeated J2FFightUnit Unit = 3; //战斗后各单位信息
  int64 MyDamage = 4; //本方伤害总值
  int64 EnemyDamage = 5; //敌方伤害总值
  repeated F2JPlayerHit PlayerHit = 6; //所有玩家的总攻击次数
  string Param = 8; //自带参数，原样返回
  int32 InvincibleShield = 10; //本次战斗BOSS是否有无敌盾，0否，1是
  int32 ImagePlayerBossWudi = 11; // 镜像BOSS无敌标记，1表示处于无敌状态
  int32 LmEliteSheildStep = 12; // 龙脉镜像BOSS无敌盾阶段 0未触发过 1已触发70盾 2已触发30盾
}

//每个玩家的攻击次数
message F2JPlayerHit {
  int64 UserId = 1; //玩家ID
  int64 Times = 2; //攻击次数
}

// JAVA服务器返回战斗结果给游戏服务器
message J2CFightInit {
  int32 Tag = 1;
  S2CBattlefieldReport Report = 2; //战报
  repeated ItemInfo Prize = 3; //奖励数组
  int64 MyDamage = 4; //本方伤害总值
}

// 异界妖门JAVA服务器返回战斗结果给游戏服务器
message J2CYJFightInit {
  int32 Tag = 1;
  S2CBattlefieldReport Report = 2; //战报
  repeated ItemInfo Prize = 3; //奖励数组
  int64 MyDamage = 4; //本方伤害总值
}

/***********************************************通天Boss*******************************************************/
//通天Boss活动信息
message C2STtBossActInfo {
}
message S2CTtBossActInfo {
  int32 StageId = 1; //通天Boss阶段 1争夺阶段 2特殊Boss阶段 3最终Boss阶段
  int64 EndTimestamp = 2; //结束时间戳
}

//玩家的组队打了某个Boss
message S2CTtBossFightBoss {
  int32 StageId = 1; //通天Boss阶段
  int32 BossId = 2; //数值表配置BossId
}

//通天Boss信息
message TtBossInfo {
  int32 StageId = 1; //通天Boss阶段
  int32 BossId = 2; //数值表配置BossId
  int32 State = 3; //Boss状态  0,死亡  1,复活
  int64 CurrHp = 4;
  int64 MaxHP = 5;

  TtBossOwnerData BossOwner = 6; //Boss归属队伍
  int64 BossLockBloodTime = 7; //Boss无敌状态时间戳
}
//向客户端发送通天Boss信息
message S2CTtBossInfo {
  repeated TtBossInfo Items = 1;
}

//通天Boss归属玩家数据(第一阶段使用)
message TtBossOwnerData {
  ShowUserInfo OwnerLeader = 1; //归属队伍队长的展示信息
  int64 OwnerDamage = 2; //归属队伍总伤害
  int64 MyDamage = 3; //我的队伍总伤害
}

////通天Boss伤害次数排行数据(第二阶段使用)
//message TtBossDamageTimesData {
//    ShowUserInfo FirstLeader = 1; //排名第一队伍队长的展示信息
//    int64 FirstDamageTimes = 2; //排名第一队伍总伤害次数
//    int64 MyDamageTimes = 3; //我的队伍总伤害次数
//}
//
////通天Boss最大伤害排行数据(第三阶段使用)
//message TtBossMaxDamageData {
//    ShowUserInfo FirstLeader = 1; //排名第一队伍队长的展示信息
//    int64 FirstMaxDamage = 2; //排名第一队伍最大伤害
//    int64 MyMaxDamage = 3; //我的队伍最大伤害
//}

//战斗结束弹窗
message S2CTtBossFightEndReport {
  int32 Stage = 1; //阶段
  int64 MyNum = 2; //您的队伍数据
  int64 FirstTotalNum = 3; //排名第一队伍数据
  int64 MyTotalNum = 4; //您的队伍总数据
  int32 MyRank = 5; //您的队伍排名
}

//通天Boss组队数据排行
message TtBossTeamData {
  ShowUserInfo Leader = 1; //队长的展示信息
  int32 TeamOrder = 2; //队伍排名
  int64 TeamData = 3; //队伍的数据
}
message C2STtBossTeamDataRank {
  int32 StageId = 1;
  int32 BossId = 2;
}
message S2CTtBossTeamDataRank {
  int32 StageId = 1; //阶段Id
  int32 BossId = 2; //BossId
  repeated TtBossTeamData Items = 3; //排行榜上所有队伍数据
  int32 MyTeamOrder = 4; //我的队伍名次
  int64 MyTeamData = 5; //我的队伍数据
}

//组队鼓舞
message C2STtBossInspire {
}
message S2CTtBossInspire {
  int32 Tag = 1;
  int64 TeamId = 2; //队伍Id
  int32 TeamInspireId = 3; //组队鼓舞表Id
}

//通天Boss活动结束，关闭场景
message S2CTtBossCloseScene {
}

//通天Boss活动结束包
message S2CTtBossActEnd {
  int32 AuctionOpen = 1; //通天拍卖行是否开启 0不开启 1开启
}

/***********************************************拍卖行*******************************************************/
message DBAuctionData {
  int32 AucId = 1; //拍卖行Id
  int32 State = 2; //拍卖行状态
  int64 StartTimestamp = 3; //拍卖开始时间戳
  int64 NoticeTimestamp = 4; //轮播公告时间戳
  int64 EndTimestamp = 5; //拍卖结束时间戳
  int64 ClearDataTimestamp = 6; //拍卖结束时间戳
  repeated AucGoodsData GoodsList = 7; //拍品列表
  repeated BiddingLogItem LogItems = 8; //玩家竞拍日志
}

//拍卖行所有拍卖场次简单数据
message C2SAllAucSimData {
}
message S2CAllAucSimData {
  repeated AucSimData List = 4; //所有拍卖行的简略信息
}
message AucSimData {
  int32 AucId = 1; //拍卖行Id
  int32 State = 2; //拍卖行状态 0关闭状态 1拍卖行预开启状态 2拍卖行开启状态 3拍卖行拍品售罄状态 4拍卖行结束状态(拍卖情况仍可展示)
}

//拍卖行信息
message C2SAuctionInfo {
  int32 AucId = 1; //拍卖行Id
}
message S2CAuctionInfo {
  int32 Tag = 1;
  int32 AucId = 2; //拍卖行Id
  int64 EndTimestamp = 3; //拍卖结束时间戳
  repeated AucGoodsData GoodsList = 4; //拍品列表
}

//拍品数据
message AucGoodsData {
  int32 GoodsId = 1; //拍卖行拍卖道具表Id
  int32 State = 2; //拍品状态 0无人竞拍 1竞拍中 2已售出 3流拍
  int32 Bid = 3; //当前出价
  int64 BidUserId = 4; //竞买人userID
}

//推送拍品状态变化
message S2CAucGoodsList {
  int32 AucId = 1; //拍卖行Id
  repeated AucGoodsData GoodsList = 2; //拍品列表
}

//竞拍
message C2SBidding {
  int32 AucId = 1; //拍卖行Id
  int32 GoodsId = 2; //拍卖行拍卖道具表Id
  int32 BidType = 3; //竞拍类型 1加价竞拍 2一口价购买
}
message S2CBidding {
  int32 Tag = 1;
  int32 AucId = 2; //拍卖行Id
  int32 GoodsId = 3; //拍卖行拍卖道具表Id
  int32 BidType = 4; //竞拍类型 1加价竞拍 2一口价购买
  string TagStr = 5; //返回给前端的提示消息字符串
}

//竞拍日志
message C2SGetBiddingLog {
  int32 AucId = 1; //拍卖行Id
}
message BiddingLogItem {
  int64 Time = 1;
  int32 GoodsId = 2; //拍卖行拍卖道具表Id
  int32 BidPrice = 3; //竞拍价格
  int64 UserId = 4; //玩家Id
  int32 LogType = 5; //日志类型 0竞拍被抢  1竞拍 2一口价购买
}
message S2CGetBiddingLog {
  int32 AucId = 1; //拍卖行Id
  repeated BiddingLogItem Logs = 2;
}

message C2SAuctionBeOvertaken {
  int32 AucId = 1; //拍卖行Id
  int32 BeOvertaken = 2; //0没有被超  1被超
}

//合服首战活动完成标记
message FristMergeInfo {
  int32 Id = 1; //活动id
  int32 Num = 2; //0未参与 1未领奖 2获胜已领奖 3参与已领奖
}
message C2SMergeFirstPrize {
}
message S2CMergeFirstPrize {
  repeated FristMergeInfo Items = 1;
}
message C2SMergeFirstGetPrize {
  int32 FuncId = 1; //功能id
}
message S2CMergeFirstGetPrize {
  int32 Tag = 1;
  FristMergeInfo info = 2; //0未参与 1未领奖 2获胜已领奖 3参与已领奖
}

/************************ 神域 ***************************/

message S2PSZCrossServer {
  string version = 1;
}

message P2SSZCrossServer {
  int32 Error = 1;
  int32 ServerId = 2; //跨服服务器ID
  int64 MapId = 3; //跨服地图ID
  int32 Camp = 4; //跨服阵营
  int32 Term = 5; //第几期
  int32 Level = 6; //世界等级
  int32 Group = 7; // 组
  int32 MaxOpenNum = 8; //最大开启次数
}

message C2SSZInfo {
}

message S2CSZInfo {
  int32 Tag = 1;
  int32 Term = 2; //第几期
  int32 PrepareStartTime = 3; //神战准备开启时间
  int32 PrepareEndTime = 4; //神战准备结束时间
  int32 StartTime = 5; //神战开启时间
  int32 EndTime = 6; //神战结束时间
  int32 OutlandFinishTime = 7;
  int32 InnerlandFinishTime = 8;
  int32 OutlandZoneStartTime = 9;
  int32 OutlandZoneFinishTime = 10;
  int32 InnerlandZoneStartTime = 11;
  int32 InnerlandZoneFinishTime = 12;
  int32 OutlandZonePrepareFinishTime = 13;
  int32 InnerlandZonePrepareFinishTime = 14;
  int32 Group = 15;
  int64 MaxOpenNum = 16; // 最大开启次数
}

message C2SShenYuData {

}

message S2CShenYuData {
  int32 Season = 1; // 当前赛季id
  int32 FirstReward = 2; // 上次领取首次进入奖励的赛季id
  int32 Tag = 3;
}

message S2JSZPrepare {
  int32 Term = 1; //第几期
  int32 Level = 2; //世界等级
  string platform = 3; //所属渠道
  int32 Group = 4; // 组数
  int32 AppId = 5; //游戏ID
  int32 MaxOpenNum = 6;//最大开启次数
}

message J2SSZPrepare {
  int32 Tag = 1;
}

message S2CSZPrepare {
  int32 Tag = 1;
}

message S2JSZJoin {
  int32 Camp = 1; //跨服阵营
  PlayerShow Show = 2; // 玩家显示信息
  bytes ShowOther = 3; // 玩家显示的其它信息
  int32 TaskId = 4; //完成主线任务ID
  int32 HideVIP = 5; //隐藏VIP
  repeated IntAttr buffs = 6; // 初始增加buff  buff id，buff level
}

message C2JSZOtherInfo {
  int32 UserId = 1; // 获取某个玩家的外显信息
}

message J2SSZShowOther {
  bytes ShowOther = 1; // 玩家显示的其它信息
}

message J2CSZShenShou {
  int32 ShenShou = 1; //神兽
  int32 Camp = 2; //阵营
}

// 请求开始放弃自己祭坛信息
message C2JSZStartDropBuilding {
  int32 SzState = 1; //神域战阶段
  int32 Block = 2; //地块ID
}

message J2CSZStartDropBuilding {
  int32 Tag = 1;
  int32 SzState = 2; //神域战阶段
  int32 Block = 3; //地块ID
  int32 DropTime = 4; //放弃结束时间
}

// 请求停止放弃自己祭坛信息
message C2JSZStopDropBuilding {
  int32 SzState = 1; //神域战阶段
  int32 Block = 2; //地块ID
}

message J2CSZStopDropBuilding {
  int32 Tag = 1;
  int32 SzState = 2; //神域战阶段
  int32 Block = 3; //地块ID
}

// 请求立即放弃自己祭坛信息
message C2JSZDropBuilding {
  int32 SzState = 1; //神域战阶段
  int32 Block = 2; //地块ID
}

message J2CSZDropBuilding {
  int32 Tag = 1;
  int32 SzState = 2; //神域战阶段
  int32 Block = 3; //地块ID
}
// 打开界面信息
message C2JSZOpenView {
  int32 View = 1;  //界面ID
}

// 神域内查看其它玩家的信息
message S2JShenYuShowOther {
  S2COtherInfo Player = 1; // 基础属性
  S2COtherInfoEquip Equip = 2; // 装备数据
  S2COtherInfoPet Pet = 3; // 宠物数据
  S2COtherInfoFV FightValue = 4; // 战力对比
  S2COtherInfoSkin Skin = 5; // 皮肤
}

message J2SSZJoin {
  int32 Tag = 1;
  int32 SzState = 2; //神域战阶段
  int32 Center = 3; //中心点
  int32 Block = 4; //最后占领地块
  int32 Camp = 5; // 玩家所属阵营
  int32 Time = 6; // 最后结算时间
  int32 ZoneState = 7; //副本状态
  int32 BuildingNumber = 8; //占领祭坛数量
  int32 Timestamp = 9; //当前时间戳
}

message DBShenyuData {
  int32 AwardId = 1; // 奖励id
  repeated SZReward ItemList = 2; // 转发到神域的奖励队列
  int32 AddItemIndex = 3; // 发到神域的奖励index
  int32 Season = 4; // 第几期神域活动
  int32 FirstAward = 5; // 上次领取首次进入奖励的赛季
  int32 GuideState = 6; // 新手引导，0：未完成，1：已完成
  int32 HelpReward = 7; // 帮助奖励状态
  int32 MainTaskId = 8; //主线任务ID
  int32 IsExistSZ = 9;//是否进入过神域
}

message C2SEnterShenYu {

}

message S2CEnterShenYu {
  int32 Tag = 1;
  int32 State = 2; //神域战阶段
  int32 Center = 3; //中心点
  int32 Block = 4; //最后占领地块
  int32 Camp = 5; // 玩家所属阵营
  int32 Time = 6; // 最后结算时间
  int32 ZoneState = 7; //副本状态
  int32 Term = 8; //第几期
  int32 WorldLevel = 9; // 神域世界等级
  int32 GuideState = 10; // 新手引导,按位运算，0：未完成，1：已完成
  int32 BuildingNumber = 11; //占领祭坛数量
  int32 Timestamp = 12; //当前时间戳
}

message C2SLeaveShenYu {

}

message S2CLeaveShenYu {
  int32 Tag = 1;
}

// 领取首次进入奖励
message C2SShenYuFirstJoinAward {

}

message S2CShenYuFirstJoinAward {
  int32 Tag = 1;
}

// 更新引导状态
message C2SGuideState {
  int32 Index = 1; // 设置引导完成，序号，第几位。从0开始
}
// 更新引导状态回包
message S2CGuideState {
  int32 Tag = 1;
  int32 GuideState = 2; // 引导完成状态
}

// 发起新手引导战斗
message C2SGuideBattle {

}

// 触发进入副本的事件
message C2SShenYuTriggerEnterMapEvent {

}

// 请求地块占领阵营信息
message C2JSZBlocks {
  int32 State = 1; //神域战阶段
  int32 Center = 2; //中心点
}
// 返回地块占领阵营信息
message J2CSZBlocks {
  int32 Tag = 1;
  int32 State = 2; //神域战阶段
  int32 Center = 3; //中心点
  bytes Blocks = 4; //地块占领阵营信息
  repeated SZOccupy Occupys = 5; //地块保护信息
  repeated SZPlayerMap Players = 6; //显示玩家
}
// 请求自己占领祭坛信息
message C2JSZOwnBuildings {
  int32 SzState = 1; //神域战阶段
}
// 返回自己占领祭坛信息
message J2CSZOwnBuildings {
  int32 Tag = 1;
  int32 SzState = 2; //神域战阶段
  repeated SZOccupy Buildings = 3; //建筑ID
}
// 返回自己占领地块信息
message J2CSZOwnBlocks {
  int32 Tag = 1;
  int32 SzState = 2; //神域战阶段
  repeated int32 Blocks = 3; //地块ID
}
// 请求占领地块
message C2JSZOccupyBlock {
  int32 SzState = 1; //神域战阶段
  int32 Block = 2; //地块ID
  int64 Owner = 3; //当前占领者或开采者ID
}
// 返回占领地块
message J2CSZOccupyBlock {
  int32 Tag = 1;
  int32 SzState = 2; //神域战阶段
  int32 Block = 3; //地块ID
  int32 Building = 4; //建筑ID
}
// 返回失去地块
message J2CSZLoseBlock {
  int32 Tag = 1;
  int32 SzState = 2; //神域战阶段
  int32 Block = 3; //地块ID
  int32 Building = 4; //建筑ID
}
// 占领信息
message SZOccupy {
  int32 Block = 1; //地块ID
  int32 Protect = 2; //保护到期时间
  int64 UserId = 3; //拥有者ID
  int32 MineTime = 4; //开采结束时间
  int32 Head = 5; //占领人或开采者外显
  int32 DropTime = 6; //放弃结束时间
  int32 BlockType = 7; //地块类型
  int64 MinerId = 8; //开采者ID
  int32 HeadFrame = 9; //占领人或开采者外显框
  string Nick = 10; //占领人或开采者昵称
  int64 AreaId = 11; //占领人或开采者区编号
  string Xianzong = 12; //占领人或开采者仙宗名字
  int32 Camp = 13; //占领人或开采者阵营
  string WorldName = 14; //占领人或开采者世界名称
  int64 LoginMergeAreaId = 15; //占领人或开采者合服后区编号
  string MergeWorldName = 16; //占领人或开采者合服后世界名称
}
// 玩家外显信息
message PlayerShow {
  repeated IntAttr A = 2;
  repeated StrAttr B = 3;
}
// 获得区域内建筑占领信息
message C2JSZBuildings {
  int32 SzState = 1; //神域战阶段
  repeated int32 Blocks = 2; //地块ID
}
// 返回建筑占领信息
message J2CSZBuildings {
  int32 Tag = 1;
  int32 SzState = 2; //神域战阶段
  repeated SZOccupy Blocks = 3; //地块占领信息
  repeated int32 Drops = 4; //放弃地块信息
}

// 获得建筑占领信息
message C2JSZBuilding {
  int32 SzState = 1; //神域战阶段
  int32 Block = 2; //地块ID
}

// 返回建筑占领信息
message J2CSZBuilding {
  int32 Tag = 1;
  int32 SzState = 2;  //神域战阶段
  SZOccupy Block = 3;    //地块占领信息
  PlayerShow show = 4; // 玩家显示信息
  int64 Hp = 5; //剩余血量
  int32 RecoverTime = 6; // 恢复时间
  int64 MaxHp = 7; //最大血量
  int32 Attacked = 8; //攻击次数
  int32 Garrison = 9; //开采守护类型
  int32 Monster = 10; //怪物ID
  int32 Rewarded = 11; //奖励次数
}

// 奖励信息
message SZReward {
  int32 RewardId = 1; //奖励ID
  repeated ItemInfo Items = 2; //奖励物品
  int32 ItemChangeType = 3; //变化原因
  int64 ActionId = 4; //编号
}

// 获得奖励
message J2SSZReward {
  repeated SZReward Rewards = 1; //奖励信息
}

// 返回获得奖励成功
message S2JSZReward {
  int32 RewardId = 1; //领取成功奖励ID
}

// 开采祭坛信息
message C2SSZMine {
  int32 SzState = 1; //神域战阶段
  int32 Block = 2; //地块ID
  string Pet = 3; //宠物
  int32 FuncId = 4; // 功能id
}

message S2JSZMine {
  int32 SzState = 1; //神域战阶段
  int32 Block = 2; //地块ID
  string Pet = 3; //宠物
  int32 PetQuality = 5; //宠物品质
  int32 FuncId = 6; // 功能id
}

// 返回开采信息
message J2CSZMine {
  int32 Tag = 1;
  int32 SzState = 2; //神域战阶段
  SZOccupy Block = 3; //地块占领信息
  string Pet = 4; //宠物
}

// 结算奖励信息
message C2JSZSettlement {
  int32 SzState = 1; //神域战阶段
}

// 返回结算奖励信息
message J2CSZSettlement {
  int32 Tag = 1;
  int32 SzState = 2; //神域战阶段
  repeated ItemInfo Prize = 3; //奖励数组
}

// 宠物使用信息
message C2JSZPet {
  int32 SzState = 1; //神域战阶段
}

// 返回宠物使用信息
message J2CSZPet {
  int32 Tag = 1;
  int32 SzState = 2; //神域战阶段
  repeated string Pets = 3; //使用中的宠物
}

message C2JSZMap {
  int32 SzState = 1; //神域战阶段
}

message J2CSZMap {
  int32 Tag = 1; //错误
  bytes Blocks = 2; //地块占领阵营信息
  int64 BlockNumber = 3; //地块数量
  int64 OccupyBlockNumber = 4; //占领地块数量
  repeated IntAttr BuildingNumber = 5; //建筑数量
  repeated IntAttr OccupyBuildingNumber = 6; //占领建筑数量
}

message J2CSZState {
  int32 SzState = 1; //神域战阶段
  int32 ZoneState = 2; //副本状态
}

message S2JSZGM {
  string Command = 1; //GM命令
}

message C2JSZOther {
  int64 UserId = 1;
}

message J2CSZOther {
  int32 Tag = 1;
  PlayerShow show = 2; // 玩家显示信息
}

// 背包相关
//玩家进入神战时推送整个背包
message J2CSZUserBag {
  RoleBag Bag = 1;
}

message J2CSZBagChange {
  repeated BagChange Change = 1;
}

//获得新道具，前端飘字
message J2CSZNewItem {
  repeated BagChange Change = 1;
}

//移除道具“新”标记
message C2JSZRemItemNew {
  string ItemId = 1; //唯一ID
}

message J2CSZRemItemNew {
  int32 Tag = 1;
  string ItemId = 2; //唯一ID
}

//使用物品
message C2JSZExchange {
  string ItemID = 2; //要使用的物品ID
  int64 Count = 1; //使用多少个兑换物
  int32 Param1 = 3; //兑换结果物品ID
}

message J2CSZExchange {
  int32 Tag = 1;
}

message S2JSZAddItem {
  repeated SZReward Rewards = 1; //奖励信息
}

message J2SSZAddItem {
  int32 Tag = 1;
  int32 ItemId = 2; // 物品最后领取ID信息
}

//任务系统相关
// 升级神位
message C2JSZShenWei {
  int32 ShenWei = 1; //神位
}

//神位信息
message J2CSZShenWei {
  int32 Tag = 1; //操作结果
  int32 ShenWei = 2; //神位
  repeated ItemInfo Prize = 3; //奖励数组
}

//神战任务信息
message J2CSZTask {
  repeated SZTask T = 1; //任务
}

message J2CSZTaskChange {
  repeated SZTask T = 1; //任务
}
//神战阶段任务信息
message J2CSZStateTask {
  repeated SZTask T = 1; //任务
}

message J2CSZStateTaskChange {
  repeated SZTask T = 1; //任务
}

//神战主线任务信息
message J2CSZMainTask {
  repeated SZTask T = 1;//任务
}

message J2CSZMainTaskChange {
  repeated SZTask T = 1;//任务
}

//任务信息
message SZTask {
  int32 TaskId = 1; //任务ID
  int32 T = 2; //任务类型
  int32 S = 3; //任务状态 0-接取，1-可完成
  int64 I = 4; //任务计数
}

//领取任务奖励
message C2JSZGetTaskPrize {
  int32 TaskId = 1; //任务ID
}

//领取任务奖励
message J2CSZGetTaskPrize {
  int32 Tag = 1; //操作结果
  int32 TaskId = 2; //任务ID
  repeated ItemInfo Prize = 3; //奖励数组
}

//领取阶段奖励
message C2JSZGetStatePrize {
  int32 SzState = 1; //神域阶段
}

//领取阶段奖励
message J2CSZGetStatePrize {
  int32 Tag = 1; //操作结果
  int32 SzState = 2; //神域阶段
  repeated ItemInfo Prize = 3; //奖励数组
}

//领取主线奖励
message C2JSZGetMainPrize {
  int32 TaskId = 1; //任务ID
}

//领取主线奖励
message J2CSZGetMainPrize {
  int32 Tag = 1; //操作结果
  int32 TaskId = 2; //任务ID
  repeated ItemInfo Prize = 3; //奖励数组
}

// 主线任务完成情况
message J2SSZMainTask {
  int32 TaskId = 2; //任务ID
}

//触发任务条件
// 神域商店购买：任务参数：商品id, 增加计算：商品数量
message S2JSZTriggerTask {
  int32 TaskType = 1; //任务类型
  int32 TaskParam = 2; //任务参数
  int64 TaskCount = 3; //任务总计数
  int64 TaskAddCount = 4; //任务增加计数
}

// 重新进入神战
message J2CSZRelogin {
}

// 体力信息
message J2CSZStrength {
  int32 Strength = 1; //当前体力值
  int32 RecoverTime = 2; //恢复时间
}

message J2CSZBuff {
  int32 BuffId = 1; //buffId
  int32 ExpireTime = 2; //到期时间
  int64 Value = 3; //buff值
}

// BUFF列表
message J2CSZBuffs {
  repeated J2CSZBuff Buffs = 1;
}

/**排行系统相关**********/
message SZPlayerShow {
  int64 UserId = 1; //ID
  string Nick = 2; //昵称
  int32 RoleId = 3; //角色ID
  int64 GodLevel = 4; //境界等级
  int64 AreaId = 5; //区编号
  int32 Head = 6; //发送人头像资源ID
  int32 HeadFrame = 7; //发送人头像框资源ID
  int32 ChatFrame = 8; //发送人聊天框资源ID
  int32 Title = 9; //发送人称号皮肤ID
  int32 VIP = 10; //发送人VIP
  string Xianzong = 11; //仙宗名字
  int32 Camp = 12; //阵营
  string WorldName = 13; //世界名称
  int64 LoginMergeAreaId = 14; //合服后区编号
  string MergeWorldName = 15; //合服后世界名称
  int32 HideVIP = 16; //隐藏VIP
}

message SZRanking {
  int32 Sort = 1; //排名
  string Name = 2; //仙宗名字
  int32 Camp = 3; //阵营
  int64 RankValue = 4; //排行数据
  SZPlayerShow Show = 5; //显示信息
  int64 UserId = 6; //玩家ID，发奖励使用
  int64 Xianzong = 7; //仙宗ID，发奖励使用
  int64 AreaId = 8; //区域ID
  string WorldName = 9; //世界名称
  int64 LoginMergeAreaId = 10; //合服后区编号
  string MergeWorldName = 11; //合服后世界名称
}

//仙宗信息
message S2JSZXianzong {
  int64 XianzongId = 1; //仙宗ID
  string Name = 2; //仙宗名字
  int32 Camp = 3; //仙宗阵营
  int64 ZongzhuId = 4; //宗主ID
  int64 AreaId = 5; //区域ID
  PlayerShow Show = 6; // 宗主显示信息
  string World = 7; // 世界信息
  int64 LoginMergeAreaId = 8; //合服后区编号
  string MergeWorldName = 9; //合服后世界名称
  int32 HideVIP = 10; //隐藏VIP
}

//排行榜
message C2JSZRanking {
  int32 RankingId = 1; //排行榜类型
  int32 Start = 2; //开始
  int32 Length = 3; //长度
}

//排行榜
message J2CSZRanking {
  int32 RankingId = 1; //排行榜类型
  repeated SZRanking Ranking = 2; //排行
  int32 Index = 3; //排行名次
  int32 Count = 4; //总数量
  int32 RankingPrize = 5; //排行榜是否已经领奖
}

//领取排行榜奖励
message C2JSZGetRankingPrize {
  int32 RankingId = 1; //排行榜类型
}

//领取排行榜奖励
message J2CSZGetRankingPrize {
  int32 Tag = 1; //操作结果
  int32 RankingId = 2; //排行榜类型
  repeated ItemInfo Prize = 3; //奖励数组
}

// 第一信息
message SZTopOne {
  int64 MapId = 1; //跨服地图ID，神域id
  string Name = 2; //仙宗名字
  int32 Camp = 3; //阵营
  int64 RankValue = 4; //排行数据
  PlayerShow Show = 5; //显示信息
  int64 UserId = 6; //玩家ID，发奖励使用
  int64 Xianzong = 7; //仙宗ID，发奖励使用
  int32 Shenwei = 8; //神位
}

//神兽伤害排行榜
message J2CSZShenshouRanking {
  repeated SZRanking Ranking = 1; //排行
}

//神兽伤害排行
message J2CSZShenshouDamage {
  SZRanking Ranking = 1; //排行
}

//神兽伤害
message J2CSZMyShenshouDamage {
  int64 Damage = 1; //伤害
}

/**聊天分享战报系统相关**********/

//聊天
message S2JSZChat {
  int32 ChannelId = 1; //频道ID
  string Content = 2; //消息内容
  int64 AtUserId = 3; //@的玩家id
}

//聊天
message J2CSZChat {
  int32 Tag = 1; //错误
  int32 ChannelId = 2; //频道ID
  string Content = 3; //内容
  SZPlayerShow Show = 4; //显示信息
  int32 AtUserShowAreaId = 5; //@的人的区服id
  string AtUserNick = 6; //@的人的昵称
  int64 AtUserId = 7; //@的人的id
  string AtUserWorldName = 8; //世界名称
  int64 AtUserLoginMergeAreaId = 9; //合服后区编号
  string AtUserMergeWorldName = 10; //合服后世界名称
}

//公告
message J2SSZNotice {
  int32 NoticeId = 1; //公告ID
  repeated string parameters = 2; //参数
}

//聊天历史
message C2JSZChats {
  int32 ChannelId = 1; //频道ID
}

//聊天历史
message J2CSZChats {
  repeated J2CSZChat chats = 1; //聊天信息
}


message SZReports {
  int32 ReportId = 1; //战报ID
  int32 ReportTplId = 2; //战报模板ID
  repeated string TitleParams = 3; //标题参数
  repeated string ContentParams = 4; //内容参数
  repeated string LeftButtonParams = 5; //左按钮参数
  repeated string RightButtonParams = 6; //标题参数
  int32 ReportTime = 7; //战报时间
  int32 IsRead = 8; // 1:未读 2:已读
}

//战报
message J2CSZReports {
  repeated SZReports reports = 1;
}

//阅读战报
message C2JSZReadReport {
  repeated int32 ReportId = 1; //战报ID
}

//阅读战报
message C2JSZDeleteReport {
  repeated int32 ReportId = 1; //战报ID
}

/**副本系统相关**********/

//进入副本
message C2JSZZoneEnter {
  int32 ZoneState = 1; //副本状态
}

//玩家状态信息
message SZZone {
  int32 ZoneState = 1; //副本状态
  int64 UserId = 2;
  int32 Site = 3; // 位置
  int64 Sex = 4; // 性别
  int32 MovingEndTime = 5; // 移动中冷却到期时间
  int32 MoveEndTime = 6; // 移动冷却到期时间
  int32 AttackEndTime = 7; // 攻击冷却到期时间
  int32 Hp = 8;
  int32 Point = 9;
  int32 ZoneEndTime = 10; //副本结束时间
  int32 DieEndTime = 11; // 死亡冷却到期时间
}

//进入副本
message J2CSZZoneEnter {
  int32 Tag = 1; //错误信息
  SZZone zone = 2; //本人副本信息
}

//副本附近玩家信息
message C2JSZZonePlayers {
  int32 ZoneState = 1; //副本状态
  int32 ZoneSite = 2; //副本位置
}

message SZZonePlayer {
  int64 UserId = 1;
  string Nick = 2;
  int64 Power = 3;
  int64 AreaId = 4; //区编号
  string XianzongName = 5;
  int32 Camp = 6;
  int32 Hp = 7;
  int64 Sex = 8; // java复制的roleId属性
  int32 MovingEndTime = 9; // 移动中冷却到期时间
  string WorldName = 10; //世界名称
  int64 LoginMergeAreaId = 11; //合服后区编号
  string MergeWorldName = 12; //合服后世界名称
  int64 LoginAreaId = 13; //区编号
}

//副本附近玩家信息
message J2CSZZonePlayers {
  int32 Tag = 1; //错误信息
  repeated SZZonePlayer players = 2; //附近玩家信息
}

//副本移动
message C2JSZZoneMove {
  int32 ZoneState = 1; //副本状态
  int32 TargetSite = 2; //目标位置
}

//副本移动
message J2CSZZoneMove {
  int32 Tag = 1; //错误信息
  SZZonePlayer player = 2; //本人副本信息
  int32 SrcSite = 4; // 原始位置
  int32 TargetSite = 5; // 原始位置
  int32 MoveEndTime = 6; // 移动冷却到期时间
  int32 DieEndTime = 7; // 死亡冷却到期时间
}

//副本进攻
message C2JSZZoneAttack {
  int32 ZoneState = 1; //副本状态
  int64 TargetId = 2; //目标ID，npc为0
}

//副本进攻
message J2CSZZoneAttack {
  int32 Tag = 1; //错误信息
  SZZone zone = 2; //本人副本信息
  int64 TargetId = 3;  //目标ID，npc为0
  int32 Attack = 4;  //0-主动攻击，1-被攻击
}

//进入人数
message J2CSZZonePlayerNumber {
  int32 Number = 1; //人数
}

//伤害信息
message SZZoneDamage {
  int64 AreaId = 1; //区编号
  string XianzongName = 2;
  int32 Camp = 3;
  int64 Damage = 4; //伤害
  int64 DamageTime = 5; //伤害时间
  string WorldName = 6; //世界名称
  int64 LoginMergeAreaId = 7; //合服后区编号
  string MergeWorldName = 8; //合服后世界名称
  int64 Xianzong = 9; //仙宗编号
  int64 LoginAreaId = 10; //区编号
}

//伤害排名信息
message J2CSZZoneDamageRanking {
  repeated SZZoneDamage rankings = 1; //伤害信息
  int32 RankingType = 2; //排行榜类型
}

//伤害排名信息变化
message J2CSZZoneDamageRankingChange {
  SZZoneDamage ranking = 1; //伤害信息
  int32 RankingType = 2; //排行榜类型
}

//boss占领信息
message J2CSZZoneBossOcuppy {
  int32 BossId = 1; //boss编号
  int32 BossTime = 2; // boss死亡时间
  int32 BossIndex = 3; // boss序号
  int32 BossRefreshTime = 4; // boss刷新时间
}
//副本积分变化
message J2CSZZonePoint {
  int32 Point = 1; //积分信息
  int32 Add = 2;//积分增加
  int32 Reason = 3;//积分原因:击杀boss奖励 1,攻击boss奖励 2,玩家之间胜利奖励 3,玩家之间失败奖励 4
}

//副本血量变化
message J2CSZZoneHp {
  int64 UserId = 1;
  int64 Hp = 2; //血量信息
}

//副本公告
message J2CSZAnnouncement {
  int32 NoticeId = 1; //公告ID
  repeated string parameters = 2; //公告参数
  SZPlayerShow show = 3; //人物信息
}

//副本各地点人数
message C2JSZZonePlayerInSiteNumber {
  int32 ZoneState = 1; //副本状态
}

//副本各地点人数
message J2CSZZonePlayerInSiteNumber {
  int32 Tag = 1; //错误信息
  repeated IntAttr Numbers = 2; //各地点人数
}

//副本PVP信息
message J2CSZZonePVP {
  int64 AttackerId = 1; //攻击者ID
  int32 AttackerCamp = 2; //攻击者阵营
  int64 AttackerHpReduce = 3; //攻击者hp减少
  int64 AttackerHp = 4; //攻击者hp
  PlayerShow Attacker = 5; //攻击者信息
  int64 DefenderId = 6; //防御者ID
  int32 DefenderCamp = 7; //防御者阵营
  int64 DefenderHpReduce = 8; //防御者hp减少
  int64 DefenderHp = 9; //防御者hp
  PlayerShow Defender = 10; //防御者信息
  int32 Win = 11; // 胜利者 1-attacker 2-defender
}

//获取排行榜
message C2JSZGetZoneRanking {
  int32 RankingId = 1; //排行榜类型
  int32 Start = 2; //开始
  int32 Length = 3; //长度
}

//获取排行榜
message J2CSZGetZoneRanking {
  int32 Tag = 1; //操作结果
  int32 RankingId = 2; //排行榜类型
  repeated SZRanking Ranking = 3; //排行
  int32 Index = 4; //排行名次
  int32 Count = 5; //总数量
  int32 RankingPrize = 6; //排行榜是否已经领奖
  int64 Point = 7; //自己的积分
}

//领取排行榜奖励
message C2JSZGetZoneRankingPrize {
  int32 RankingId = 1; //排行榜类型
}

//领取排行榜奖励
message J2CSZGetZoneRankingPrize {
  int32 Tag = 1; //操作结果
  int32 RankingId = 2; //排行榜类型
  repeated ItemInfo Prize = 3; //奖励数组
}

//神战副本任务信息
message J2CSZZoneTask {
  repeated SZTask T = 1; //任务
}

message J2CSZZoneTaskChange {
  repeated SZTask T = 1; //任务
}
//领取副本任务奖励
message C2JSZGetZoneTaskPrize {
  int32 TaskId = 1; //任务ID
}

//领取副本任务奖励
message J2CSZGetZoneTaskPrize {
  int32 Tag = 1; //操作结果
  int32 TaskId = 2; //任务ID
  repeated ItemInfo Prize = 3; //奖励数组
}

//boss狂暴通知
message J2CSZZoneBossViolentNotify {
  int32 Time = 1; //狂暴剩余时间
}

//boss狂暴
message J2CSZZoneBossViolent {
}

/**显示信息系统相关**********/
message SZPlayerShowDetailed {
  int64 UserId = 1; //ID
  string Nick = 2; //昵称
  int32 RoleId = 3; //角色ID
  int64 GodLevel = 4; //境界等级
  int64 AreaId = 5; //区编号
  int32 Head = 6; //发送人头像资源ID
  int32 HeadFrame = 7; //发送人头像框资源ID
  int32 ChatFrame = 8; //发送人聊天框资源ID
  int32 Title = 9; //发送人称号皮肤ID
  int32 VIP = 10; //发送人VIP
  string Xianzong = 11; //仙宗名字
  int32 Zongzhu = 12; //是否是宗主
  int64 Power = 13; //战力
  int64 Military = 14; //战功
  string WorldName = 15; //世界名称
  int64 LoginMergeAreaId = 16; //合服后区编号
  string MergeWorldName = 17; //合服后世界名称
  int32 HideVIP = 18; //隐藏VIP
}

// 获得阵营主城信息
message C2JSZCampMainCity {
  int32 SzState = 1; //神域战阶段
  int32 Block = 2; //地块ID
}

// 返回阵营主城信息
message J2CSZCampMainCity {
  int32 Tag = 1;
  int32 SzState = 2; //神域战阶段
  int32 Camp = 3; //阵营
  int32 PlayerNumber = 4; //玩家数量
  int32 XianzongNumber = 5; //仙宗数量
  int32 BlockNumber = 6; //空地数量
  int64 TotalBlockNumber = 7; //空地总数量
  repeated SZPlayerShowDetailed show = 8; // 玩家显示信息
}

// 获得开采收成信息
message C2JSZMineInfo {
  int32 SzState = 1; //神域战阶段
}

// 返回开采收成信息
message J2CSZMineInfo {
  int32 Tag = 1;
  int32 SzState = 2; //神域战阶段
  int64 MainCity = 3; //主城产出数量
  int64 Mine = 4; //祭坛产出数量
}

message SZPlayerMapShow {
  int64 UserId = 1;      //ID
  string Nick = 2;    //昵称
  int32 RoleId = 3;    //角色ID
  int64 GodLevel = 4;  //境界等级
  int64 AreaId = 5;    //区编号
  int64 Horse = 6;    //坐骑
  int64 Skin = 7;  //时装
  int64 God = 8;  //武器
  int64 Wing = 9;    //翅膀
  string WorldName = 10;  //世界名称
  int64 LoginMergeAreaId = 11; //合服后区编号
  string MergeWorldName = 12; //合服后世界名称
  string Xianzong = 13;  //仙宗名字
  int64 Suit = 14;    //仙装
}

message SZPlayerMap {
  int64 UserId = 1; //ID
  int32 position = 2; //位置
}

// 玩家地图显示
message C2JSZPlayerMapShow {
  repeated int64 UserIds = 1; //ID
}

// 玩家地图显示
message J2CSZPlayerMapShow {
  repeated SZPlayerMapShow Players = 1; //显示玩家
}

// 玩家神兽领奖
message C2JSZShenshouReward {
  int32 SzState = 1;  //神域战阶段
  int32 Block = 2;  //地块ID
  int32 RewardId = 3;  //奖励ID
}

// 玩家神兽领奖
message J2CSZShenshouReward {
  int32 Tag = 1;
  int32 SzState = 2;  //神域战阶段
  int32 RewardId = 3;  //奖励ID
  repeated ItemInfo Prize = 4; //奖励数组
}

// 玩家神兽领奖信息
message C2JSZShenshouRewardInfo {
}

// 玩家神兽领奖信息
message J2CSZShenshouRewardInfo {
  repeated int32 Prizes = 1; //奖励数组
}

// 神域心跳
message C2JSZHeart {
}

// 神域心跳
message J2CSZHeart {
  int32 Time = 1;//时间
}
// 阵营BUFF
message J2CSZCampBuff {
  int32 BuffId = 1;    //
  int32 ExpireTime = 2;  //到期时间
  int64 Value = 3;    //值
}
// 阵营BUFF列表
message J2CSZCampBuffs {
  repeated J2CSZBuff Buffs = 1;
}

/**************************神域活动系统相关*****************************/
// 神域活动信息
message ShenYuActInfo {
  int32 ActId = 1; // 活动id
  int32 ActType = 2; // 活动类型
  int32 Open = 3; // 是否开启
  int64 StartTime = 4; // 开启时间
  int64 EndTime = 5; // 结束时间
  int64 CloseTime = 6; // 关闭时间
}

// 神域活动任务信息
message ShenYuActTask {
  int32 TaskId = 1; // 任务ID
  int32 ActId = 2; // 活动ID
  int32 Type = 3; // 任务类型
  int32 State = 4; // 任务状态 0-未领奖，1-已领奖
  int64 Count = 5; // 任务计数
}

// 返回神域活动信息
message J2CSZActInfos {
  repeated ShenYuActInfo T = 1;
}

// 返回活神域动任务信息
message J2CSZActTaskInfos {
  repeated ShenYuActTask T = 1;
}

// 返回神域活动任务更新
message J2CSZActTaskChange {
  repeated ShenYuActTask T = 1;
}

// 请求领取神域活动任务奖励
message C2JSZGetActTaskPrize {
  int32 ActTaskId = 1; // 活动任务id
}

// 返回领取神域活动任务奖励
message J2CSZGetActTaskPrize {
  int32 Tag = 1; //操作结果
  int32 TaskId = 2; //任务ID
  repeated ItemInfo Prize = 3; //奖励数组
  int32 ActId = 4; // 活动
}

// 神域期间充值
message S2JSZActRecharge {

}

// 请求神域许愿排行活动信息
message C2JSZActWishRankInfo {
  int32 ActId = 1; // 活动id
}

// 返回神域许愿排行活动信息
message J2CSZActWishRankInfo {
  int32 Tag = 1;
  int32 ActId = 2; // 活动id
  int32 MySort = 3; // 我的排名
  int64 MyWish = 4; // 当前许愿值
  int64 ReceiveAward = 5; // 上榜需要许愿值
  repeated WishRankInfo RankInfo = 6; // 排行榜
}

// 请求领取神域许愿排行奖励
message C2JSZGetActWishRankPrize {
  int32 ActId = 1; // 活动id
}

// 返回领取神域许愿排行奖励
message J2CSZGetActWishRankPrize {
  int32 Tag = 1; //操作结果
  int32 ActId = 2; // 活动id
  repeated ItemInfo Prize = 3; //奖励数组
}

// 神域许愿排行信息
message WishRankInfo {
  int32 Sort = 1; // 排名
  int64 AreaId = 2; // 出生服id
  string Name = 3; // 玩家名称
  int32 Camp = 4; // 阵营
  int64 Wish = 5; // 许愿值
  string WorldName = 6; // 世界名称
}

message PlayerSYWishData {
  int64 WishValue = 1;
  int32 Term = 2;
  int64 RKWishValue = 3;
  int32 RKTerm = 4;
}

// 请求通行证信息
message C2JSZPassCheckInfo {
}

// 返回通行证信息
message J2CSZPassCheckInfo {
  int32 Tag = 1; // 操作结果
  int32 BuyTimes = 2; // 累计购买次数
  int32 BuyPrize = 3; // 是否购买进阶宝藏
  int64 Exp = 4; // 当前经验值
  repeated SZTask T = 5; // 任务
  int32 GR = 6; // 普通奖励已领取等级
  int32 SR = 7; // 进阶奖励已领取等级
  int32 buyExp = 8; // 已购买的经验值
}

// 返回通行证任务变化
message J2CSZPassCheckTaskChange {
  repeated SZTask T = 1;//任务
}

// 请求领取通行证任务奖励
message C2JSZGetPassCheckTaskPrize {
  int32 TaskId = 1; // 任务id
}

// 返回领取通行证任务奖励
message J2CSZGetPassCheckTaskPrize {
  int32 Tag = 1; // 操作结果
  int32 TaskId = 2; //任务ID
  int32 Exp = 3; // 增加经验值
  repeated ItemInfo Prize = 4; // 奖励数组
}

// 返回零点自动领取通行证任务奖励
message J2CSZAutoGetPassCheckTaskPrize {
  repeated int32 TaskId = 1; // 重置的任务ID
  int64 Exp = 2; // 增加经验值
  repeated ItemInfo Prize = 3; // 奖励数组
}

// 请求领取通行证奖励
message C2JSZGetPassCheckPrize {

}

// 返回领取通行证奖励
message J2CSZGetPassCheckPrize {
  int32 Tag = 1; // 操作结果
  int32 GR = 6; // 普通奖励已领取等级
  int32 SR = 7; // 进阶奖励已领取等级
  repeated ItemInfo Prize = 4; // 奖励数组
}

// 请求领取通行证循环奖励
message C2JSZGetPassCheckLoopPrize {
  int32 Step = 1; // 是否进阶奖励
}

// 返回领取通行证循环奖励
message J2CSZGetPassCheckLoopPrize {
  int32 Step = 1; // 是否进阶奖励
  int32 LoopLevel = 2; // 循环奖励已领取等级
  repeated ItemInfo Prize = 3; // 奖励数组
}

// 推送购买进阶宝藏
message S2JSZPassCheckBuyPrize {
}

// 推送购买进阶宝藏人数更新
message J2CSZPassCheckBuyTimesUpdate {
  int32 BuyTimes = 1; // 累计购买次数
}

// 请求购买神域宝藏等级经验
message C2SSZPassCheckBuyLevelExp {
  int64 LevelExp = 1;
}

// 返回购买神域宝藏等级经验
message S2CSZPassCheckBuyLevelExp {
  int32 Tag = 1;
  int64 LevelExp = 2;
}

// 请求获取神域活动信息
message S2PSZInfo {
}

// 返回获取神域活动信息
message P2SSZInfo {
  int32 Error = 1;
  int32 Term = 2;    //第几期
  int32 Group = 3;
  repeated ShenYuActInfo ActList = 4;
  int32 StartTime = 5;  // 神域开启时间
  int32 EndTime = 6;  // 神域结束时间
}

// 推送玩家登录任务（在神域中跨天）
message C2JSZLogin {
}

// 推送购买神域进阶宝藏
message S2CSZPassCheckBuyTimes {

}

message S2JAddSzBuff {
  repeated IntAttr buffs = 1; //增加buff  buff id，buff level
}

//Go通知JAVA清除某玩家的神域聊天记录
message S2JSZDeleteChatRecord {
  int64 PlayerId = 1; //玩家ID
}

//Go通知JAVA清除某玩家的异界聊天记录
message S2JYJDeleteChatRecord {
  int64 PlayerId = 1; //玩家ID
}

// 请求神域祭坛奖励信息
message C2JSZMineRewardInfo {
}
// 返回神域祭坛奖励信息
message J2CSZMineRewardInfo {
  int32 Tag = 1; //错误信息
  repeated ItemInfo Items = 2;  //奖励物品
}

// 请求领取神域祭坛奖励
message C2JSZMineReceiveReward {
}
// 返回领取神域祭坛奖励
message J2CSZMineReceiveReward {
  int32 Tag = 1; //错误信息
  repeated ItemInfo Items = 2;  //奖励物品
}

/************************ 神域帮助说明  ***************************/
message C2SShenYuHelpReward {
}
// 返回每个标签的奖励领取状态
message S2CShenYuHelpReward {
  repeated int32 Reward = 1;
  int32 Tag = 2;
  int32 Id = 3; // 标签序号
}
message C2SShenYuHelpGetReward {
  int32 Id = 1; // 标签序号
}

/************************ 神域殿堂  ***************************/
message DBPlayerShenYuHall {
  repeated int32 ShenYuId = 2; // 每期加入的神域id
  int32 Prayed = 3;
  int32 Blessed = 4;
}

message DBShenYuSeasonData {
  int32 Season = 1;
  repeated ShenYuRankData Rank = 2;
}

message ShenYuRankData {
  int64 UserId = 1; //玩家ID
  int32 ShenYuId = 2; // 神域id
  int64 RankValue = 3; //排行数据，战功
  PlayerShow Show = 4; //显示信息
  int32 ShenWei = 5; // 神位
  int32 Season = 6; //神域赛季
}

message ShenYuHallRankItem {
  int32 Rank = 1; // 排名
  string Name = 2; // 名字
  int32 ShenYuId = 3; // 神域id
  int64 Military = 4; // 战功
}

// 请求最新一期神域第一名
message C2SShenYuHallTopPlayer {

}

message S2CShenYuHallTopPlayer {
  ShenYuRankData Top = 1; // 第一名玩家，如果当前是第一期，这个玩家为空
  int32 CanBless = 2; // 赐福状态：0，不可赐福，1：可赐福
  int32 CanPray = 3; // 膜拜状态：0，不可膜拜，1：可膜拜，
  int32 Season = 4; // 这个玩家是第几赛季的
  repeated  int32 AllSeasonIds = 5;//所有赛季
}

message C2SCollectBox {
  int32 Id = 1; // 对应S2CMonsterEnterMap协议中的Id
}

message S2CCollectBox {
  int32 Tag = 1;
  repeated ItemInfo Award = 2; // 奖励数组
}

message C2SShenYuHallEnter {

}

message S2CShenYuHallEnter {
  int32 Tag = 1;
  int32 From = 2; // 0: 野外; 1：神域
}

message C2SShenYuHallLeave {

}

message S2CShenYuHallLeave {
  int32 Tag = 1;
}

// 进入副本时请求神域殿堂数据
// message C2SGetShenYuHallData {
// }

// 膜拜
message C2SShenYuHallPray {
  int32 Season = 1;
}

message S2CShenYuHallPray {
  int32 Tag = 1;
}

// 赐福
message C2SShenYuHallBless {
}

message S2CShenYuHallBless {
  int32 Tag = 1;
}

// 请求所有赛季第一名
// message C2SShenYuHallTopList {
// }

message S2CShenYuHallTopList {
  repeated ShenYuRankData Player = 1; // 第一名的列表
}

// 请求某个赛季排行榜
message C2SShenYuHallSeasonRank {
  int32 Season = 1;
}

message S2CShenYuHallSeasonRank {
  int32 Season = 1;
  int32 MyShenYuId = 2; // 我所属神域Id
  repeated ShenYuHallRankItem Player = 3;
}

message C2SShenYuHallSeasonTop {
}
// 当前神域的神王诞生
message S2CShenYuHallSeasonTop {
  ShenYuRankData Top = 1;
}

/******************************************随机商店***********************************************/
// 随机商店商品数据
message RandomShop {
  int32 Id = 1; //商品id
  int64 State = 2; //0可购买，1已购买
}

message DBRandomShop {
  int32 ShopId = 1; // 商店id
  repeated RandomShop Goods = 2; // 商品列表
}

message C2SRandomShopList {
  int32 ShopId = 1; // 商店id
}

//上线推送、随时推送的商店数据
message S2CRandomShopList {
  int32 ShopId = 1; // 商店id
  repeated RandomShop List = 2; //随机商店商品列表
  int64 NextTime = 3; //下次刷新时间戳
  int32 Tag = 4;
  ItemInfo FreeItem = 5; // 免费商品
}

//购买
message C2SRandomShopBuy {
  int32 ShopId = 1; // 商店id
  int32 GoodID = 2; //商品id
}
message S2CRandomShopBuy {
  int32 Tag = 1; //标志
  int32 ShopId = 2; //商店id
  int32 GoodID = 3; //商品id
  string TagP = 4; //错误参数
}

//手动刷新
message C2SRandomShopRefresh {
  int32 ShopId = 1; // 商店id
}
message S2CRandomShopRefresh {
  int32 Tag = 1; //标志
  string TagP = 2; //错误参数
}

//点开神秘商店时往服务端发包
message C2SRandomShopOpen {
  int32 ShopId = 1; // 商店id
}

//领取免费道具
message C2SRandomShopFreeItem {
  int32 ShopId = 1; // 商店id
}
//领取免费道具回包
message S2CRandomShopFreeItem {
  int32 Tag = 1;
}

/****************************************圣物*********************************************/
message DBShengWuData {
  repeated EquipAllData ShengHen = 1; // 圣痕列表
}
message C2SShengHenData {
  int32 Id = 1; // 圣痕 id
}
message C2SGetAllShengHen {

}
message S2CGetAllShengHen {
  int32 Tag = 1;
  repeated EquipAllData ShengHen = 2; // 圣痕列表
}
// 圣物分解
message C2SShengWuSmelt {
  repeated string Id = 1; // 要分解的装备id
}
message S2CShengWuSmelt {
  int32 Tag = 1;
}
// 圣痕觉醒
message C2SShengHenLevelUp {
  int32 Id = 1; // 圣痕id
}
message S2CShengHenLevelUp {
  int32 Tag = 1;
}
// 技能升级
message C2SShengHenSkillUp {
  int32 ShengHenId = 1; // 圣痕id
  int32 SkillPos = 2; // 技能格子
}
message S2CShengHenSkillUp {
  int32 Tag = 1;
  int32 SkillPos = 2; // 技能格子
}

/****************************************超级Vip*********************************************/
//超级vip渠道充值奖励
message SurperVipChannelReward {
  int32 ChannelId = 1; //渠道编号
  int32 TodayRecharge = 2; //单日充值
  int32 TotalRecharge = 3; //历史累计充值
  string Reward = 4; //奖励
}

message C2SGetSurperVipChannelReward {
}
message S2CGetSurperVipChannelReward {
  repeated SurperVipChannelReward data = 1; //
}

//超级vip渠道客服信息
message SurperVipInfo {
  int32 Sn = 1; //索引
  int32 AreaId = 2; //区服ID--未配置的默认显示同渠道最小区服的配置
  string ChannelId = 3; //渠道编号
  string WeiXin = 4; //微信号
  string QQ = 5; //QQ号
  string ChatAccount = 6; //聊天账号(微信号:123456|qq号:1234|陌陌号:789456)
}

message C2SGetSurperVipInfo {
}
message S2CGetSurperVipInfo {
  repeated SurperVipInfo data = 1; //
}

/******************************************转端有礼****************************************************/
//转端有礼
message AccountTransfer {
  int32 ChannelId = 1;
  int32 Level = 2;
  int32 Online = 3;
  int32 Show = 4;
  int32 Charge = 5;
  string Reward = 6;
  string Rewardcode = 7;
}
message C2SGetAccountTransfer {
}
message S2CGetAccountTransfer {
  int32 Tag = 1;
  AccountTransfer Data = 2; //数据
}

/****************************************征战九州*********************************************/
message DBPrefectWarData {
  repeated PrefectWarCpData Items = 1;
  int32 CurCpId = 2; //当前通关的关卡
  int32 State = 3; //状态  0初始状态 1通关状态
  int64 StateResetTimestamp = 4; //每日状态重置时间戳
  int32 HaveReset = 5; //每日状态已经重置
  int32 TodayHelpTimes = 6; //玩家今日协助次数
  int32 PassTimes = 7; //玩家总的通关次数
  int32 TabId = 8; //副本页签Id
}

//征战九州副本数据
message C2SGetPrefectWarData {
}
message S2CGetPrefectWarData {
  repeated PrefectWarTabData TabItems = 8;
  //    repeated PrefectWarCpData Items = 1;
  //    int32 CurCpId = 2; //当前通关的关卡
  //    int32 State = 3; //状态  0初始状态 1通关状态
  //    int64 StateResetTimestamp = 4; //每日状态重置时间戳
  //    int32 PassTimes = 5; //玩家的通关次数
  //    int32 TabId = 6; //副本页签Id
  //    int32 Tag = 7;
}

//征战九州单个副本数据
message PrefectWarTabData {
  repeated PrefectWarCpData Items = 1;
  int32 CurCpId = 2; //当前通关的关卡
  int32 State = 3; //状态  0初始状态 1通关状态
  int64 StateResetTimestamp = 4; //每日状态重置时间戳
  int32 PassTimes = 5; //玩家的通关次数
  int32 TabId = 6; //副本页签Id
  int32 UnlockState = 7; //副本的解锁状态 0未解锁， 1解锁
}

//关卡数据
message PrefectWarCpData {
  int32 CpId = 1; //关卡Id
  int32 Star = 2; //关卡星星
}

//获取征战九州副本的可雇佣的列表
message C2SGetPrefectWarHireList {
  int32 CpId = 1; //关卡Id
  int32 TabId = 2; //副本页签Id
}
message S2CGetPrefectWarHireList {
  int32 Tag = 1;
  int32 CpId = 2; //关卡Id
  repeated HirePlayer List = 3; //大佬列表
  int32 TabId = 4; //副本页签Id
}
message HirePlayer {
  TeamPlayer Player = 1;
  int32 HireState = 2; //雇佣状态 0未被雇佣  1已被雇佣
}

//雇佣大佬
message C2SPrefectWarHire {
  int32 CpId = 1; //关卡Id
  int64 UserId = 2; //大佬玩家Id
  int32 TabId = 3; //副本页签Id
}
message S2CPrefectWarHire {
  int32 Tag = 1;
  int32 CpId = 2; //关卡Id
  int64 UserId = 3; //大佬玩家Id
  int32 TabId = 4; //副本页签Id
}

//关卡战斗
message C2SPrefectWarFight {
  int32 CpId = 1; //关卡Id
  int32 BossId = 2; //BossId
  int32 TabId = 3; //副本页签Id
}
message S2CPrefectWarFight {
  int32 Tag = 1;
  int32 CpId = 2; //关卡Id
  int32 BossId = 3; //BossId
  int32 TabId = 4; //副本页签Id
}

//征战九州雇佣大佬数据
message HireUserData {
  int32 CpId = 1; //关卡Id
  int64 UserId = 2; //玩家Id
  int32 HeroId = 3; //出战英雄Id
  int32 HireState = 4; //雇佣状态 0未被雇佣  1已被雇佣 2雇佣中
  int32 TabId = 5; //副本页签Id
}
message DBPrefectWarHireData {
  repeated HireUserData HireUserData = 1;
  bool HaveReset = 2; //今天是否已经重置
}

/****************************************组队伙伴自定义*********************************************/
//拉取数据
message TeamUnit {
  int32 Pos = 1; //组队出战位置，1，2，3，若要下阵则此值传0
  int32 Type = 2; //伙伴类型（取功能表ID），11宠物，24天仙，11161战神，14001仙童，15000偃甲，14115英雄，14500异兽
  string Id = 3; //宠物唯一Id
}
message C2STeamUnit {
}
message S2CTeamUnit {
  int32 Tag = 1;
  repeated TeamUnit Unit = 2; //已设置的出战单位

}
//设置出战单位
message C2SSetTeamUnit {
  //若要下阵某单位，Pos传0；若要替换某位置，传新的单位数据
  //若要出战仙童，则传任意一个仙童数据
  TeamUnit Unit = 1; //要出战的单位数据
}
message S2CSetTeamUnit {
  int32 Tag = 1;
  repeated TeamUnit Unit = 2; //修改后的已设置的出战单位
}

/****************************************异兽*********************************************/
//异兽数据
message PlayerAlien {
  int32 Id = 1; //异兽Id
  int32 Active = 2; //异兽激活
  int32 Star = 3; //异兽星级
  int32 Lev = 4; //异兽等级
  int32 LevExp = 5; //异兽等级经验
  int32 MPId = 6; //铭牌Id
  repeated PosData PosData = 7; //铭牌中镶嵌位置信息
  int32 SMLev = 8; //铭牌强化大师等级
}

//铭牌位置数据
message PosData {
  int32 Pos = 1; //位置
  int32 Wear = 2; //镶嵌
  int32 SL = 3; //强化等级
  int32 Star = 4; //星级
}

//获取异兽数据
message C2SGetAlienData {
}
message S2CGetAlienData {
  repeated PlayerAlien PlayerAlien = 1; //数据
}

//异兽激活
message C2SAlienActive {
  int32 Id = 1; //异兽Id
}
message S2CAlienActive {
  int32 Tag = 1;
  int32 Id = 2; //异兽Id
}

//异兽出站
message C2SAlienIntoBattle {
  int32 Id = 1; //异兽Id
}
message S2CAlienIntoBattle {
  int32 Tag = 1;
  int32 Id = 2; //异兽Id
}

//异兽升级
message C2SAlienLev {
  int32 Id = 1; //异兽Id
  int32 ItemId = 2; //道具Id
  int32 Type = 3; //1:单个吃 2:一键吃
}
message S2CAlienLev {
  int32 Tag = 1;
  int32 Id = 2; //异兽Id
  int32 ItemId = 3; //道具Id
  int32 Type = 4; //1:单个吃 2:一键吃
}

//铭牌列表中的八卦位一键穿戴
message C2SMPOneKeyWear {
  int32 MPId = 1; //铭牌Id
}
message S2CMPOneKeyWear {
  int32 Tag = 1;
  int32 MPId = 2; //
}

//一键强化
message C2SMPOneKeyStrength {
  int32 MPId = 1; //铭牌Id
}
message S2CMPOneKeyStrength {
  int32 Tag = 1;
  int32 MPId = 2; //铭牌Id
}

//强化大师
message C2SMPStrengthMaster {
  int32 MPId = 1; //铭牌Id
}
message S2CMPStrengthMaster {
  int32 Tag = 1;
  int32 MPId = 2; //铭牌Id
  int32 SL = 3; //强化大师等级
}

//铭牌升星
message C2SMPStar {
  int32 MPId = 1; //铭牌Id
  int32 Pos = 2; //(1--8)
}
message S2CMPStar {
  int32 Tag = 1;
  int32 MPId = 2; //铭牌Id
  int32 Pos = 3; //(1--8)
}

/******************************************红包提现****************************************************/
message S2CRedBag {
  repeated int32 Id = 1; //可开启的红包档位Id数组，为空，代表没有可开启的档位了
}

/******************************************角色技能--仙术****************************************************/
message C2SRoleGodSkillActive {
  int32 Id = 1; //仙术Id
}

message S2CRoleGodSkillActive {
  int32 Tag = 1;
  string RoleGodSkill = 2; //激活所有仙术技能Id|Id
}

/****************************************仙林狩猎副本*********************************************/
//数据库存储仙林狩猎关卡镜像数据
message DBJungleHuntMirrorData {
  RoleDbInfo RoleDbInfo = 1; //镜像数据
  int64 HostUserId = 2; //镜像所属玩家
  int32 ExistDays = 3; //存在天数
  int32 CpId = 4;     //镜像所在关卡
  int64 AttrHit = 5;  //镜像主人的命中属性
  int64 AttrAvd = 6;  //镜像主人的闪避属性
}

//数据库存储仙林狩猎数据
message DBJungleHuntData {
  repeated JungleHuntCpData Items = 1;
  int32 CurCpId = 2; //当前通关的关卡
  bool TodayHavePass = 3; //今天是否通关
  int64 ResetTimestamp = 4;//今天重置时间戳
  bool HaveReset = 5;     //今天已经重置
  int64 RandomRefreshTimestamp = 6;//今天重置后随机一个重置时间到开启时间的一个时间戳
  bool HaveRandomRefresh = 7;     //今天已经重置后随机刷新
}
//关卡数据
message JungleHuntCpData {
  int32 CpId = 1; //关卡Id
  int32 BoxOpenState = 2; //关卡宝箱开启状态 0宝箱不能开启 1宝箱可以开启 2宝箱已经开启
  repeated int32 BuffIds = 3; //关卡可选的buff组
  int32 PickedBuffId = 4; //已经选择的BuffId
  int32 ElvesGoodsId = 5; //精灵购买商品Id
  int32 ElvesBuyState = 6; //精灵购买状态 0不能购买 1可以购买 2已经购买
  int32 CpState = 7; //关卡状态 0不可挑战 1可挑战 2已经挑战
  int32 MirrorRank = 8; //镜像的排名
  int32 FirstOpenBox = 9; //可以开首通宝箱 0正常宝箱， 1开首通宝箱
}

//仙林狩猎副本数据
message C2SJungleHuntData {
}
message S2CJungleHuntData {
  repeated JungleHuntCpData Items = 1;
  int32 CurCpId = 2; //当前通关的关卡
  repeated int32 UseBuffIds = 3; //生效的BuffId数组
  int32 HavePass = 4; //是否已通关的标识
}

//仙林狩猎关卡战斗
message C2SJungleHuntFight {
  int32 CpId = 1; //关卡Id
}
message S2CJungleHuntFight {
  int32 Tag = 1;
  int32 CpId = 2; //关卡Id
  int32 Pass = 3; //副本通关  0未通关 1通关
  int32 Win = 4; //战斗结果  0失败  1胜利
}

//仙林狩猎血量回血
message C2SJungleHuntTreat {
}
message S2CJungleHuntTreat {
  int32 Tag = 1;
}

//仙林狩猎副本重置
message C2SJungleHuntReset {
}
message S2CJungleHuntReset {
  int32 Tag = 1;
}

//仙林狩猎开启宝箱
message C2SJungleHuntOpenBox {
  int32 CpId = 1; //关卡Id
}
message S2CJungleHuntOpenBox {
  int32 Tag = 1;
  int32 CpId = 2; //关卡Id
}

//仙林狩猎刷新祝福
message C2SJungleHuntBlessRefresh {
  int32 CpId = 1; //关卡Id
}
message S2CJungleHuntBlessRefresh {
  int32 Tag = 1;
  int32 CpId = 2; //关卡Id
  repeated int32 BuffIds = 3; //刷出的buff列表
}

//仙林狩猎选定祝福
message C2SJungleHuntBlessPick {
  int32 CpId = 1; //关卡Id
  int32 BuffId = 2; //刷出的buffId
}
message S2CJungleHuntBlessPick {
  int32 Tag = 1;
  int32 CpId = 2; //关卡Id
  int32 BuffId = 3; //刷出的buffId
}

//仙林狩猎精灵离开
message C2SJungleHuntElvesLeave {
  int32 CpId = 1; //关卡Id
  int32 ElvesGoodsId = 2; //精灵购买商品Id
}
message S2CJungleHuntElvesLeave {
  int32 Tag = 1;
  int32 CpId = 2; //关卡Id
  int32 ElvesGoodsId = 3; //精灵购买商品Id
  int32 ElvesBuyState = 4; //精灵购买状态 0不能购买 1可以购买 2已经购买
}

//仙林狩猎精灵购买
message C2SJungleHuntElvesBuy {
  int32 CpId = 1; //关卡Id
  int32 ElvesGoodsId = 2; //精灵购买商品Id
}
message S2CJungleHuntElvesBuy {
  int32 Tag = 1;
  int32 CpId = 2; //关卡Id
  int32 ElvesGoodsId = 3; //精灵购买商品Id
  int32 ElvesBuyState = 4; //精灵购买状态 0不能购买 1可以购买 2已经购买
}

//仙林狩猎一键扫荡
message C2SJungleHuntSweep {
}
message S2CJungleHuntSweep {
  int32 Tag = 1;
}

//仙林狩猎副本阵容上阵
message C2SJungleHuntSetPartnerPos {
  int32 PType = 1; //伙伴类型(1宠物,2仙侣,,4仙童,5偃甲,6异兽,7英雄)
  int32 Id = 2; //可读表的Id
  string IdStr = 3; //全局唯一Id(宠物使用)
  int32 Pos = 4; //出战位置，1，2，3(宠物使用)
}
message S2CJungleHuntSetPartnerPos {
  int32 Tag = 1;
  int32 PType = 2; //伙伴类型(1宠物,2仙侣,,4仙童,5偃甲,6异兽,7英雄)
  int32 Id = 3; //可读表的Id
  string IdStr = 4; //全局唯一Id(宠物使用)
  int32 Pos = 5; //出战位置，1，2，3(宠物使用)
}

//仙林狩猎副本玩家的阵容
message C2SJungleHuntBattleArr {
  int32 CpId = 1; //关卡Id  cpId==0时，表示自己的阵容，否则表示对应关卡的战斗对象的阵容
}
message S2CJungleHuntBattleArr {
  int32 Tag = 1;
  int32 CpId = 2;
  ShowUserInfo User = 3;
  repeated JhFightHpData Items = 4;
}
message JhFightHpData {
  int32 UnitType = 1; //战斗单位类型  0主角 1宠物 2仙侣 3战神 4仙童 5偃甲 6幻灵 7英雄 8怪物
  int64 Id = 2; //助战单位Id
  string IdStr = 3; //字符串类ID，用于宠物
  int32 Pos = 4; //出战位置，1，2，3(宠物使用)
  int32 HpPercent = 5; //助战单位血量百分比
  int32 SkinId = 6; //皮肤Id(用于偃甲和仙童)
  int32 Rarity = 7; //稀有度
  int32 Quality = 8; //品质
  int32 PetType = 27; // 宠物类型 1野生 2宝宝 3变异 4神兽 5一变 6二变
}

//神丹
message PlayerGoldDrug {
  int32 Type = 1;
  int32 Grade = 2;
  int32 Exp = 3;
  int32 IsBreak = 4;
  int32 Sum = 5;
}

message C2SPlayerGoldDrugGradeUp {
  int32 Type = 1;
  int32 Op = 2; //1 升级 2突破
}

message S2CPlayerGoldDrugGradeUp {
  int32 Tag = 1;
  int32 Type = 2;
  int32 Op = 3; //1 升级 2突破
}

message C2SPlayerGetAllGoldDrug {
}

message S2CPlayerGetAllGoldDrug {
  repeated PlayerGoldDrug PlayerAllGoldGrade = 1;
}

//打开陌陌消息提醒
message C2SOpenMomoMsg {
  int32 Open = 1; //是否打开，0关闭，1打开
}

//领取陌陌消息盒子奖励
message C2SGetMomoPrize {
}
message S2CGetMomoPrize {
  int32 Tag = 1;
}

message PartenInfo {
  int32 T = 1; //类型
  int32 Id = 2; //系统ID，不同类型的伙伴ID会重复
  repeated IntAttr Attr = 3; //属性包和属性倍率
  int64 FV = 4; //战力
  repeated Skill AS = 5; //主动技能列表
  repeated Skill PS = 6; //被动技能列表
  repeated Skill SS = 7; //特殊技能列表
  int32 Skin = 8; //外显id
  int32 Quality = 9; //品质
  int32 Star = 10; //星级
  int32 Level = 11; //等级
  int32 Grade = 12; //阶级
}

/****************************************奇门遁甲*********************************************/
//数据库存储奇门遁甲数据
message DBQiMenDunJiaData {
  repeated PlayerZhenFa List = 1; //阵法列表
  repeated ZhenFaPartner PartnerList = 2; //需要存储的助战单位列表
}

//阵法数据结构
message PlayerZhenFa {
  int32 Id = 1; //阵法Id
  int32 Active = 2; //阵法激活(0未激活 1激活 2可以幻化)
  int32 Lev = 3; //阵法等级
  int32 DrugLevel = 4; //吃丹个数(遁甲之魂)
  repeated ZhenWei ZhenWei = 5; //阵位
  int32 Star = 6; //阵法星级
}

//阵位数据结构
message ZhenWei {
  int32 Pos = 1; //阵位位置
  int32 Active = 2; //阵位激活(0未激活 1可激活 2已激活)
  //    ZhenFaPartner Partner = 3; //激活阵位使用的助战单位
}

//阵法助战单位
message ZhenFaPartner {
  int32 PType = 1;  //伙伴类型(1宠物 2仙侣 3战神 4仙童 5偃甲 6异兽 7英雄)
  int32 PId = 2;    //助战单位Id
  int32 Param1 = 3;  //伙伴的上阵条件参数1 该参数代表意义跟PType相关
}

//获取奇门遁甲数据
message C2SGetQiMenDunJiaData {
}
message S2CGetQiMenDunJiaData {
  repeated PlayerZhenFa PlayerZhenFa = 1; //数据
}

//阵法幻化
message C2SZhenFaHuanHua {
  int32 Id = 1; //阵法Id
}
message S2CZhenFaHuanHua {
  int32 Tag = 1;
  int32 Id = 2; //阵法Id
}

//阵法激活
message C2SZhenFaActive {
  int32 Id = 1; //阵法Id
}
message S2CZhenFaActive {
  int32 Tag = 1;
  int32 Id = 2; //阵法Id
}

//阵位激活
message C2SZhenWeiActive {
  int32 Id = 1; //阵法Id
  int32 Pos = 2; //阵位位置
  //    ZhenFaPartner Partner = 3; //激活阵位使用的助战单位
}
message S2CZhenWeiActive {
  int32 Tag = 1;
  int32 Id = 2; //阵法Id
  int32 Pos = 3; //阵位位置
  //    ZhenFaPartner Partner = 4; //激活阵位使用的助战单位
}

////阵枢上阵
//message C2SZhenShuBattle {
//    int32 ZhenFaId = 1; //阵法Id
//    int32 BattleType = 2; //阵枢上阵类型(0下阵 1上阵)
//    ZhenFaPartner Partner = 3; //阵枢上阵使用的助战单位，如果是下阵，则不需要
//}
//message S2CZhenShuBattle {
//    int32 Tag = 1;
//    int32 ZhenFaId = 2; //阵法Id
//    int32 BattleType = 3; //阵枢上阵类型(0下阵 1上阵)
//    ZhenFaPartner Partner = 4; //阵枢上阵使用的助战单位，如果是下阵，则不需要
//}

//阵法升级
message C2SZhenFaLevelUp {
  int32 Id = 1; //阵法Id
}
message S2CZhenFaLevelUp {
  int32 Tag = 1;
  int32 Id = 2; //阵法Id
}

//遁甲之魂(阵法吃丹)
message C2SZhenFaEatDrug {
  int32 Id = 1; //阵法Id
}
message S2CZhenFaEatDrug {
  int32 Tag = 1;
  int32 Id = 2; //阵法Id
}

//阵法升星
message C2SZhenFaStarUp {
  int32 Id = 1; //阵法Id
}
message S2CZhenFaStarUp {
  int32 Tag = 1;
  int32 Id = 2; //阵法Id
}

/*******************************************异界妖门*********************************************/

message DBYJYMData {
  int32 AwardId = 1; // 奖励id
  repeated YJReward ItemList = 2; // 转发到异界妖门的奖励队列
  int32 AddItemIndex = 3; // 发到异界妖门的奖励index
  int32 Season = 4; //神域期数
  int32 IsExistYJYM = 5;//是否进入异界妖门
}

message C2SEnterYJYM {
}

message S2CEnterYJYM {
  int32 Tag = 1;
  int32 YjState = 2;  //异界之门阶段
  int32 Grid = 3;  //所在格子
  int32 Camp = 4;     // 玩家所属阵营
  int32 WorldLevel = 5; // 世界等级
}

message C2SLeaveYJYM {
}

message S2CLeaveYJYM {
  int32 Tag = 1;
}

message S2PYJCrossServer {
  string version = 1;
}

message P2SYJCrossServer {
  int32 Error = 1;
  int32 ServerId = 2; //跨服服务器ID
  int64 MapId = 3;  //跨服地图ID
  int32 Camp = 4;    //跨服阵营
  int32 Term = 5;    //第几期
  int32 Level = 6;  //世界等级
}

message C2SYJInfo {
}

message S2CYJInfo {
  int32 Error = 1;
  int32 Term = 2;    //第几期
  int32 PrepareStartTime = 3;    //神战准备开启时间
  int32 PrepareEndTime = 4;    //神战准备结束时间
  int32 StartTime = 5;    //神战开启时间
  int32 EndTime = 6;    //神战结束时间
  int32 FirstEndTime = 7;    //第一阶段结束时间
  int32 SecondEndTime = 8;    //第二阶段结束时间
}

message S2JYJPrepare {
  int32 Term = 1;    //第几期
  int32 Level = 2;  //世界等级
}

message J2SYJPrepare {
  int32 Tag = 1;
}

message S2JYJJoin {
  int32 Camp = 1;    //跨服阵营
  PlayerShow show = 2; // 玩家显示信息
  bytes ShowOther = 3; // 玩家显示的其它信息
  int32 HideVIP = 4; //隐藏VIP
}

message StrIntAttr {
  string k = 1;
  int32 v = 2;
}

message J2SYJJoin {
  int32 Tag = 1;
  int32 YjState = 2;  //异界之门阶段
  int32 Grid = 3;  //所在格子
  int32 Camp = 4;     // 玩家所属阵营
}

// 奖励信息
message YJReward {
  int32 RewardId = 1;    //奖励ID
  repeated ItemInfo Items = 2;  //奖励物品
  int32 ItemChangeType = 3;  //变化原因
  int64 ActionId = 4;      //编号
}

// 获得奖励
message J2SYJReward {
  repeated YJReward Rewards = 1;  //奖励信息
}

// 返回获得奖励成功
message S2JYJReward {
  int32 RewardId = 1;    //最后领取成功奖励ID
}

message S2JYJGM {
  string Command = 1;  //GM命令
}

// 重新进入神战
message J2CYJRelogin {
}

message J2CYJState {
  int32 YjState = 1;  //异界之门阶段
}

/***********************************************地图系统相关*******************************************************/

message YJPlayer {
  int64 UserId = 1;//唯一id
  int32 Grid = 2;//所在格子
}

message YJMonster {
  int64 MonsterId = 1;//唯一id
  int32 MonsterModelId = 2;//模板id
  int32 Grid = 3;//所在格子
  int64 Hp = 4;//剩余HP
  int64 MAXHp = 5;//最大HP
}

message YJBoss {
  int64 MonsterId = 1;//唯一id
  int32 MonsterModelId = 2;//模板id
  int32 Grid = 3;//所在格子
  int64 Hp = 4;//剩余HP
  int64 MAXHp = 5;//最大HP
  int64 Shield = 6;//剩余Shield
  int64 MAXShield = 7;//最大Shield
  int64 InvincibleShield = 8;//无敌盾剩余时间
}

// 进入异界之门周围信息
message J2CYJRound {
  repeated YJPlayer Players = 1;//周围玩家
  repeated YJMonster Monsters = 2;//周围怪物
  repeated YJBoss Bosses = 3;//周围BOSS
}

// 出现玩家
message J2CYJAppearPlayer {
  YJPlayer Players = 1;//周围玩家
}

// 出现怪物
message J2CYJAppearMonster {
  repeated YJMonster Monsters = 1;//周围怪物
}

// 出现Boss
message J2CYJAppearBoss {
  repeated YJBoss Bosses = 1;//周围BOSS
}

// 消失玩家
message J2CYJDisappearPlayer {
  int64 Players = 1;//周围玩家
}

// 消失怪物
message J2CYJDisappearMonster {
  repeated int64 Monsters = 1;//周围怪物
}

// 消失Boss
message J2CYJDisappearBoss {
  repeated int64 Bosses = 1;//周围BOSS
}

message C2JYJOther {
  int64 UserId = 1;
}

message J2CYJOther {
  int32 Tag = 1;
  int64 UserId = 2;
  int32 Camp = 3; //阵营
  PlayerShow show = 4; // 玩家显示信息
  int32 Grid = 5;//所在格子
  repeated int32 Steps = 6;//移动路径
}

message S2JYJQuit {
}

// CD列表
//  异界之门怪物攻击 YJ_MONSTER_ATTACK
//	异界之门boss攻击 YJ_BOSS_ATTACK
//	异界之门死亡 YJ_DIE
message J2CYJCooldown {
  repeated StrIntAttr Cooldown = 1;
}
/***********************************************地图移动系统相关*******************************************************/
message C2JYJMove {
  int32 Grid = 1;//开始格子
  repeated int32 Steps = 2;//移动路径
}

message J2CYJMove {
  int32 Tag = 1;
  int64 UserId = 2;
  int32 Grid = 3;//开始格子
  repeated int32 Steps = 4;//移动路径
}

message C2JYJMoving {
  int32 Grid = 1;//移动到格子
}

message C2JYJStop {
  int32 Grid = 1;//停止到格子
}

message J2CYJStop {
  int32 Tag = 1;
  int64 UserId = 2;
  int32 Grid = 3;//停止到格子
}

/***********************************************地图攻击系统相关*******************************************************/
message C2JYJAttackMonster {
  int64 MonsterId = 1;
}

message J2CYJAttackMonster {
  int32 Tag = 1;
  int64 MonsterId = 2;
  StrIntAttr Cooldown = 3;//冷却
}

message C2JYJAttackBoss {
  int64 MonsterId = 1;
}

message J2CYJAttackBoss {
  int32 Tag = 1;
  int64 MonsterId = 2;
  StrIntAttr Cooldown = 3;//冷却
}

//boss血量变化
message J2CYJBossHp {
  YJBoss Boss = 1;
}

//monster血量变化
message J2CYJMonsterHp {
  YJMonster Monster = 1;
}

message C2JYJCollect {
  int64 MonsterId = 1;
}

message J2CYJCollect {
  int32 Tag = 1;
  int64 MonsterId = 2;
  StrIntAttr Cooldown = 3;//冷却
}

message C2SYJOpen {
  int64 MonsterId = 1;
  int32 Type = 2;
}

message S2CYJOpen {
  int32 Tag = 1;
  int64 MonsterId = 2;
  int32 Type = 3;
  StrIntAttr Cooldown = 4;//冷却
}

message S2JYJOpen {
  int64 MonsterId = 1;
  int32 Type = 2;
}

message J2SYJOpen {
  int32 Tag = 1;
  int64 MonsterId = 2;
  int32 Type = 3;
  StrIntAttr Cooldown = 4;//冷却
}

/***********************************************排行系统相关*******************************************************/
message YJRanking {
  int64 RankKey = 1;  //主键
  int64 RankValue = 2;  //排行数据
  int64 RankTime = 3;  //排行时间
}

//仙宗信息
message S2JYJXianzong {
  int64 XianzongId = 1; //仙宗ID
  string Name = 2; //仙宗名字
  int32 Camp = 3; //仙宗阵营
  int64 ZongzhuId = 4;  //宗主ID
  int64 AreaId = 5;  //区域ID
  PlayerShow Show = 6; // 宗主显示信息
  string WorldName = 7; //世界名称
  int64 LoginMergeAreaId = 8; //合服后区编号
  string MergeWorldName = 9; //合服后世界名称
}

//排行榜
message J2CYJRanking {
  int32 RankingId = 1; //排行榜类型
  repeated YJRanking Ranking = 2; //排行
}

//排行榜变化
message J2CYJRankingChange {
  int32 RankingId = 1; //排行榜类型
  YJRanking Ranking = 2; //排行
}

/***********************************************阶段系统相关*******************************************************/

//妖王之怒
message J2CYJBossAnger {
  int32 Anger = 1; //怒气
}

//妖王伤害加成
message J2CYJBossAddition {
  int32 Addition = 1; //加成
}

//奖励次数
message J2CYJDrops {
  repeated IntAttr DropItems = 1; //奖励
}

//奖励次数变化
message J2CYJDrop {
  IntAttr DropItem = 1; //奖励
}

//自己血量变化等
message J2CYJPlayer {
  YJPlayer Player = 1; //自己
}

//boss出现提醒
message J2CYJBossNotice {
  int32 Time = 1; //剩余秒数
}


/***********************************************聊天分享战报系统相关*******************************************************/

message YJPlayerShow {
  int64 UserId = 1; //ID
  string Nick = 2; //昵称
  int32 RoleId = 3; //角色ID
  int64 GodLevel = 4; //境界等级
  int64 AreaId = 5; //区编号
  int32 Head = 6; //发送人头像资源ID
  int32 HeadFrame = 7; //发送人头像框资源ID
  int32 ChatFrame = 8; //发送人聊天框资源ID
  int32 Title = 9; //发送人称号皮肤ID
  int32 VIP = 10; //发送人VIP
  string Xianzong = 11;//仙宗名字
  int32 Camp = 12;    //阵营
  string WorldName = 13;  //世界名称
  int64 LoginMergeAreaId = 14; //合服后区编号
  string MergeWorldName = 15; //合服后世界名称
  int32 HideVIP = 16; //隐藏VIP
}

//聊天
message S2JYJChat {
  int32 ChannelId = 1; //频道ID
  string Content = 2; //消息内容
  int64 AtUserId = 3; //@的玩家id
}

//聊天
message J2CYJChat {
  int32 Tag = 1;//错误
  int32 ChannelId = 2; //频道ID
  string Content = 3; //内容
  YJPlayerShow Show = 4;  //显示信息
  int32 AtUserShowAreaId = 5; //@的人的区服id
  string AtUserNick = 6; //@的人的昵称
  int64 AtUserId = 7; //@的人的id
  string AtUserWorldName = 8;  //世界名称
  int64 AtUserLoginMergeAreaId = 9; //合服后区编号
  string AtUserMergeWorldName = 10; //合服后世界名称
}

//公告
message J2SYJNotice {
  int32 NoticeId = 1; //公告ID
  repeated string parameters = 2;  //参数
}

//开启拍卖行(跨服服务器向游戏服务器转发)
message J2SStartAuction {
  int32 AuctionId = 1; //拍卖行ID
}

//聊天历史
message C2JYJChats {
  int32 ChannelId = 1; //频道ID
}

//聊天历史
message J2CYJChats {
  repeated J2CYJChat chats = 1; //聊天信息
}

//副本公告
message J2CYJAnnouncement {
  int32 NoticeId = 1;            //公告ID
  repeated string parameters = 2;  //公告参数
  YJPlayerShow show = 3;      //人物信息
}

// 异界妖门心跳
message C2JYJHeart {
}

// 异界妖门心跳
message J2CYJHeart {
  int32 Time = 1;//时间
}

message C2JYJOtherInfo {
  int32 UserId = 1; // 获取某个玩家的外显信息
}

message J2SYJShowOther {
  bytes ShowOther = 1; // 玩家显示的其它信息
}

message S2CYJKeyTip{
  int32 Tag = 1;
}

message J2CYJChest {
  int32 YjChestTimes = 1; //异界之门宝箱开启次数
}

message S2NLogin {
  int64 AreaId = 1;
  int64 AccountId = 2;
  string Token = 3;
  int64 UserId = 4;
  int32 Fcm = 5; //防沉迷状态，0无，1未满18,2满18
  string LoginPf = 6; //平台类型   ios:1<<0, android: 1<<1, h5: 1<<2, xyx_android: 1<<3, xyx_ios: 1<<4
  int64 Timestamp = 7;
  int32 ServerId = 8;
  string CheckWordUrl = 9;
  string AreaName = 10;
}

message N2SLogout {
  int64 UserId = 1;
}

message N2SAddTouristTime {
  string Imei = 1;
  int64 Time = 2;
  int64 AreaId = 3;
}

/******************************************御剑飞仙***********************************************/
//数据库数据
message DBYJFXData {
  repeated YJFXSectData YJFXSectData = 1;//仙宗数据
  repeated YJFXSectRankData YJFXSectRankData = 2;//仙宗排行数据
}

//仙宗排行数据
message YJFXSectRankData {
  int64 SectId = 1; //仙宗Id
  string SectName = 2; //仙宗名字
  int32 SectAreaId = 3; //仙宗区Id
  string WorldName = 4; //世界名称
  int32 DengJianCount = 5;//登剑人数
  int32 Rank = 6; //排名
  int32 Complete = 7;//是否完成
  int64 UseTimes = 8;//走完路程已用时间(秒)
  float Distance = 9;//已走距离
}

//仙宗数据
message YJFXSectData {
  int64 SectId = 1; //仙宗Id
  string SectName = 2; //仙宗名字
  int32 SectAreaId = 3; //仙宗区Id
  repeated SectPlayer Players = 4; //报名玩家数据
  float Speed = 6;   // 飞剑速度
  int32 Durable = 7;   // 飞剑耐久度
  float Distance = 8; // 已走路程
  int64 UseTimes = 9; // 走完路程已用时间
  int32 Complete = 10; // 是否完成
  int32 Rank = 11; // 排名
  repeated ItemInfo UseItem = 12; //每秒道具使用情况
  int32 JieSuan = 13; //本tick是否结算
  int32 Id = 14;             //boss编号
  int64 BossHp = 15;
  int64 BossMaxHp = 16;
  int64 BossDownTimes = 17; //boss减速有效时间
  int64 BossUpTimes = 18;   //boss加速时间
  int64 PVECD = 19;         //PVE冷却倒计时，到期时间戳
  int64 YuJian = 20;      //被使用羽箭
  int64 QiangHuaTimes = 21; // 强化道具有效时间
  int64 ZhangQiTimes = 22; // 瘴气有效时间
  int64 HuDunTimes = 23; // 护盾有效时间
  int64 DurableTimes = 24; // 耐久度为0时减速有效时间
  int64 HuDunCount = 25;  // 护盾有效次数
  repeated SectBoss BossState = 30;   //boss状态
}

//玩家数据
message SectPlayer {
  int64 UserId = 1; //玩家ID
  int32 State = 2;  // 1:进入 2:离开
  int32 DengJian = 3; //登剑
  int32 YunGong = 4; //运功
  int64 YunGongTimes = 5; //运功时间
  repeated ItemData BagItems = 6;  //临时背包
}

message SectBoss {
  int32 Id = 1;             //boss编号
  int32 State = 2;         //1:死亡 2：逃走
}

//显示仙宗排行数据
message ShowYJFXSectRankData {
  int64 SectId = 1; //仙宗Id
  string SectName = 2; //仙宗名字
  int32 SectAreaId = 3; //仙宗区Id
  string WorldName = 4; //世界名称
  int32 DengJianCount = 5;//登剑人数
  int32 Rank = 6; //排名
  int32 Complete = 7;//是否完成
  int64 UseTimes = 8;//走完路程已用时间(秒)
  int32 Distance = 9;//已走距离(*100)
}

//显示玩家登剑数据
message ShowDengJianInfo {
  int64 UserId = 1; //玩家ID
  string WorldName = 2; //玩家世界名称
  string Nick = 3; //玩家昵称
  repeated IntAttr A = 5; //
  repeated StrAttr B = 6; //
}

//显示玩家运功数据
message ShowYunGongInfo {
  int64 UserId = 1; //玩家ID
  string WorldName = 2; //世界名称
  string Nick = 3; //玩家昵称
  int32 VIP = 4;  //vip
  int32 HideVIP = 5;//
}

//显示玩家比赛数据
message ShowMatchInfo {
  int64 SectId = 1; //仙宗Id
  string WorldName = 2; //世界名称
  string SectName = 3; //仙宗名字
  int32 DengJianCount = 4; //登剑人数
  int32 Speed = 6; //当前速度(*100)
  int32 Distance = 7; // 已走路程(*100)
  int32 Complete = 8;//完成
  int32 Rank = 9; // 排名
  int32 Id = 10; //boss编号
  int64 BossHp = 11; //
  repeated ShowDengJianInfo ShowDengJianInfo = 12;  //登剑玩家数据
  int32 Durable = 13;   // 飞剑耐久
  int64 UseTimes = 14; //用时
  int32 JieSuan = 15; //本tick是否结算
  int64 YuJian = 20; //被使用羽箭
  int64 QiangHuaTimes = 21; // 强化道具有效时间
  int64 ZhangQiTimes = 22; // 瘴气有效时间
  int64 HuDunTimes = 23; // 护盾有效时间
  int64 DurableTimes = 24; // 耐久度为0时减速有效时间
  int64 BossDownTimes = 25; //boss减速有效时间
  int64 BossUpTimes = 26;   //boss加速时间
  int64 HuDunCount = 27;  // 护盾有效次数
  repeated SectBoss BossState = 30;   //boss状态
}


//显示boss数据
message ShowBossInfo {
  int32 Id = 1; //boss编号
  int64 Hp = 2;
  int64 MaxHp = 3;
  int64 BossDownTimes = 4; //boss减速有效时间
  int64 BossUpTimes = 5;   //boss加速时间
  //repeated ShowAttackPlayer ShowAttackPlayer = 6;
  repeated ShowAttackPlayer PlayerHurts = 8; //玩家伤害
}

//攻击玩家数组
message ShowAttackPlayer {
  string Nick = 1;
  int64 Hurt = 2; //伤害
}

//显示能攻击的仙宗
message ShowAttack {
  int64 SectId = 1; //仙宗Id
  string WorldName = 2; //世界名称
  string SectName = 3; //仙宗名字
  int32 Rank = 4; //名次
}


//进入
message C2SYJFXEnter {
}
message S2CYJFXEnter {
  int32 Tag = 1;
}

//离开
message C2SYJFXLeave {
}
message S2CYJFXLeave {
  int32 Tag = 1;
}

//获取比赛阶段
message C2SYJFXMatchStage {
}
message S2CYJFXMatchStage {
  int32 State = 1; //状态(0:未开启；1：报名阶段；2：比赛阶段)
  int64 EndTimes = 2; //根据游戏状态 报名截止和比赛结束
  int32 SectDengJian = 3; //本仙宗是否有玩家登剑
  int32 RewardTips = 4; //比赛开始奖励提示
  repeated ItemInfo RewardItems = 5; //比赛开始奖励
}

//获取登剑
message C2SYJFXGetDengJianInfo {
}
message S2CYJFXGetDengJianInfo {
  int64 SectId = 1; //仙宗Id
  string WorldName = 2; //世界名称
  string SectName = 3; //仙宗名字
  int32 DengJianCount = 4; //登剑人数
  int32 Speed = 5; //当前速度(*100)
  int32 YunGong = 6; //当前运功
  int64 TotalFv = 7; //总战力
  repeated ShowDengJianInfo ShowDengJianInfo = 8;  //登剑玩家数据
}

//登剑
message C2SYJFXDengJian {
}
message S2CYJFXDengJian {
  int32 Tag = 1;
}

//获取运功数据
message C2SYJFXGetYunGongInfo {
}
message S2CYJFXGetYunGongInfo {
  repeated ShowYunGongInfo ShowYunGongInfo = 1;  //运功玩家数据
  int32 PlayerYunGong = 2;  //自己是否运功
}

//运功
message C2SYJFXYunGong {
}
message S2CYJFXYunGong {
  int32 Tag = 1;
}

//获取比赛数据
message C2SYJFXMatchData {
}
message S2CYJFXMatchData {
  repeated ShowMatchInfo ShowMatchInfo = 1;  //显示玩家比赛数据
}

//获取个人活动背包
message C2SYJFXMatchBag {
}
message S2CYJFXMatchBag{
  repeated ItemData BagItems = 1;  //临时背包
}


//玩家遇怪--刷新血量
message S2CYJFXMatchBoss {
  ShowBossInfo ShowBossInfo = 1;
}

//道具功能使用
message C2SYJFXUseItem {
  int32 ItemId = 1; //ID
  uint32 ItemNum = 2; //数量
  int64 SectId = 3; //仙宗Id
}
message S2CYJFXUseItem {
  int32 Tag = 1;
  int32 ItemId = 2; //ID
  int32 ItemNum = 3; //数量
  int64 SectId = 4; //仙宗Id
}

////比赛完成
//message S2CYJFXMatchComplete {
//  int64 SectId = 1; //仙宗Id
//  string WorldName = 2; //世界名称
//  string SectName = 3; //仙宗名字
//  int32 Complete = 4;//完成
//  int64 UseTimes = 5; //用时
//  float Distance = 6; //已走距离
//  int32 Rank = 7; //名次
//}

//查看排行榜
message C2SYJFXRank {
}
message S2CYJFXRank {
  //repeated YJFXSectRankData YJFXSectRankData = 1;//仙宗排行数据
  repeated ShowYJFXSectRankData ShowYJFXSectRankData = 1;//仙宗排行数据
  int32 Dengjian = 2; //
  int32 State = 3; //0:活动未开启；1:报名阶段；2:活动开始
}

//获取可以攻击的仙宗列表
message C2SYJFXGetCanAttackList {
}
message S2CYJFXGetCanAttackList {
  repeated ShowAttack ShowAttack = 1;//数据
}

/**********************************专属福利*************************************/
//拉取数据
message C2SGetChannelGiftInfo {
}
message S2CGetChannelGiftInfo {
  int32 Tag = 1;
  string TagP = 2;
  repeated ItemInfo Prize = 3;//奖励配置
}

//领取奖励
message C2SGetChannelGiftPrize {
}
message S2CGetChannelGiftPrize {
  int32 Tag = 1;
  string TagP = 2;
}

/**********************************创建角色(在主线任务中)*************************************/
message C2SCreateRoleTask {
  string Nick = 1;
  int32 RoleId = 2; //改后的种族ID
}
message S2CCreateRoleTask {
  int32 Tag = 1;
}
/********************************自选奖励***************************/

message ActTaskChoosePrize {
  int32 TaskId = 1;//活动任务ID
  int32 Order = 2;//奖励顺序
  ItemInfo Prize = 3;//玩家已选择奖励
}

//活动任务自选奖励
message C2SActTaskChoosePrize {
  int32 TaskId = 1;//活动任务ID
  int32 Order = 2;//奖励顺序
  ItemInfo Prize = 3;//玩家已选择奖励
}
message S2CActTaskChoosePrize {
  int32 Tag = 1;
  string TagP = 2;
}

//玩家上线时、数据变更时推送所有已选择的奖励数据
message S2CActTaskChoosePrizeSend {
  //  repeated C2SActTaskChoosePrize Prize = 1;
  int32 ChangeTaskId = 2;//触发变化的任务ID
  repeated ActTaskChoosePrize Choose = 3;
}


/*------------------------渠道红包-----------------------*/
//角色加入活动
message C2SCpsRPPlayerJoin {
}
message S2CCpsRPPlayerJoin {
  int32 Tag = 1;
}

message CpsRPPlayerTask {
  int32 TaskId = 1;
  int32 Count = 2;
  int32 FinishFlag = 3; // 0 未领奖 1已领奖
}

message CpsRPPlayerExchange {
  int32 Id = 1;
  int32 Type = 2;
  int32 Cost = 3;
  int32 Add = 4; //现金
  int32 ConditionType = 5;
  int32 ConditionParam = 6;
  int64 Timestamp = 7;
  int32 Status = 8; //0已提交 1提现成功 2提现失败
  string OrderId = 9; //订单号
}

message CpsRPPlayerInfo {
  int64 PlayerId = 1;
  int32 AreaId = 2;
  string AreaName = 3;
  int32 Level = 4;
  int64 JoinTimestamp = 5;
  int32 Charge = 6;
  int32 XianJin = 7;          // 任务完成给的货币
  int32 FreezeXianJin = 8;    // 任务完成给的货币,提现时冻结的
  repeated CpsRPPlayerTask TaskData = 9;
  string PlayerNick = 10;
  int32 ActEnd = 11; //活动时间结束，0：未结束 1结束
  int64 FinishTimestamp = 12; //玩家活动到期时间
}

message CpsRPAccountInfo {
  int64 AccountId = 1;
  int64 SelectPlayerId = 2;
  int32 ActId = 3;
  int32 BondStatus = 4; // 绑定状态 0 未绑定 1 绑定
  repeated CpsRPPlayerExchange ExchangeData = 5; //兑换会绑定角色，兑换信息放到account上
}

message S2CCpsRPPlayerData {
  repeated CpsRPPlayerInfo PlayerData = 1;
  CpsRPAccountInfo AccountData = 2;
}

//切换加入活动角色
message C2SCpsRPPlayerSwitch {
  int64 PlayerId = 1;
}
message S2CCpsRPPlayerSwitch {
  int32 Tag = 1;
}

message CpsRPTask {
  int32 TaskId = 1;
  string TaskName = 2;
  string TaskContent = 3;
  int32 TaskIcon = 4;
  int32 TaskClientType = 5;     // 前端显示任务类型
  int32 TaskType = 6;           // 任务类型：1登录奖励 2冲级红包 3累充返利
  int32 Param = 7;
  int32 FixPrize = 8;             // 积分奖励
  int32 RandPrizeMin = 9;         // 随机奖励最小值 100=1元
  int32 RandPrizeMax = 10;        // 随机奖励最大值 100=1元
  int32 FuncId = 11;  //跳转功能id
}

message CpsRPExchange {
  int32 Id = 1;
  int32 LimitNum = 2;     // 提现次数限制 0不限制
  int32 LimitDays = 3;    // 限制几天一次 0-不限制
  int32 ConditionType = 4;    // 兑换条件类型：1等级 2钱包余额达到
  int32 ConditionParam = 5;
  int32 Need = 6;         // 兑换需要
  int32 Type = 7;         // 兑换货币：1仙玉2现金
  int32 Coin = 8;         // 兑换价格
}

message C2SCpsRPGetCfgInfo {
}

message S2CCpsRPGetCfgInfo {
  int32 ActId = 1;
  int64 StartDate = 2;    // 活动开启时间
  int64 EndDate = 3;      // 活动截止时间
  int32 IsBegin = 4;      // 活动开关
  int32 LimitAccountNum = 5;     // 同渠道内参活动账号数量
  int32 ActTime = 6;      // 活动期数,用于前端展示
  int32 LimitTiXian = 7;   // 活动期间内，账号提现总次数限制
  int32 LimitTiXianType1 = 8;  // 活动期间内，账号1类型提现次数限制
  int32 LimitTiXianType2 = 9;  // 活动期间内，账号1类型提现次数限制
  int32 ActDuration = 10; //活动持续时间(天),每个开区第一天算起
  string ActXuanChuanYu = 11;  //活动宣传语
  string WeChatName = 12;  //微信公众号名称
  repeated CpsRPTask TaskInfo = 13; //活动任务配置
  repeated CpsRPExchange ExchangeInfo = 14; //活动兑换配置
  int32 ActXuanChuanPrize = 15; //活动宣传金额
}

message C2SCpsRPPlayerFinishTask {
  int32 TaskId = 1;
}

message S2CCpsRPPlayerFinishTask {
  int32 Tag = 1;
}

message C2SCpsRPPlayerExchange {
  int32 ExchangeId = 1;
}

message S2CCpsRPPlayerExchange {
  int32 Tag = 1;
}


//根据客户端登录机型屏蔽设置
message C2SPhonePBSetting {
  string PhoneType = 1;   //机型
}

message S2CPhonePBSetting {
  string PhoneType = 1;     //机型
  repeated int32 List = 2;  //屏蔽的属性Id列表
}

/*------------------------战队-----------------------*/
//战队数据
message DBFightTeam {
  string Id = 1; //战队ID
  string Name = 2; //战队名称
  int64 CreateTime = 3;//战队创建时间
  string Declaration = 4; //战队宣言
  int64 NextChangeNameTime = 5;//下一次家族改名时间戳
  repeated DBFTMember Members = 6; //所有成员
  repeated DBFTApply Applys = 7; //申请成员
  int64 AccuseUid = 8; //弹劾玩家Id
  int64 AccuseEndTime = 9; //弹劾结束时间，未弹劾为0
  int32 AutoAgree = 10; //是否自动同意战队申请
  int64 AutoAgreeFv = 11; //自动同意战队申请的战力值
}

//战队成员
message DBFTMember {
  int64 Uid = 1; //玩家ID
  int32 Pos = 2; //10:队员 20:队长
}

//战队申请列表
message DBFTApply {
  int64 Uid = 1; // 玩家ID
  int64 CreateTime = 2; //申请时间戳
}

//战队列表数据（发给前端）
message FTListInfo {
  string Id = 1; //ID
  string Name = 2; //名称
  string World = 3; //区
  int64 CreateTime = 4;//战队创建时间
  string Declaration = 5; //宣言
  int32 MemberCount = 6; //当前人数
  int64 LeaderUid = 7; //队长uid
  int32 LeaderHeadImg = 8; //队长头像
  int32 HeadFrame = 9; //头像框资源ID
  int32 LeaderVip = 10; //队长Vip
  int32 LeaderHideVip = 11; //队长Vip是否屏蔽
  int64 Fv = 12; //总战力
  int32 State = 13; // 1:可以申请 2：申请中 3：已满员
}

//战队成员（发给前端）
message FTMember {
  int64 Uid = 1; //玩家ID
  string Nick = 2; //玩家昵称
  string WorldName = 3; //玩家世界名字
  repeated IntAttr A = 4; //
  repeated StrAttr B = 5; //
  int32 Pos = 6; //10:队员 20:队长
  int64 OfflineTime = 7; //离线时间点（秒级时间戳，不是离线时长）
  string SectName = 8; //仙宗名字
  string SectWorldName = 9; //仙宗世界名字
}

//申请成员（发给前端）
message FTApplyMember {
  int64 Uid = 1; // 玩家ID
  string Nick = 2; //玩家昵称
  string World = 3; //玩家世界名字
  int32 Head = 4; //头像资源ID
  int32 HeadFrame = 5; //头像框资源ID
  int64 FV = 6; //战力
  int64 CreateTime = 7; //申请时间
}


//获取所有战队数据
message C2SGetAllFTList {
}

message S2CGetAllFTList {
  repeated FTListInfo FTListInfo = 1;
}

//获取战队数据
message C2SGetFTInfo {
  string Id = 1; //战队ID
}

message S2CGetFTInfo {
  int32 Tag = 1; //结果
  string Id = 2; //战队ID
  string Name = 3; //战队名称
  string World = 4; //战队世界名字
  string Declaration = 5; //战队宣言
  repeated FTMember Members = 6; //所有成员
  int64 AccuseEndTime = 7; //弹劾结束时间，未弹劾为0
  int64 NextChangeNameTime = 8; //下一次可改名时间戳
  int32 AutoAgree = 9; //1-自动审核  0-不自动审核
  int64 AgreeFv = 10; //最低战力时
  int32 ExistApplys = 11; //1:此战队有玩家申请
}

//创建战队
message C2SCreateFT {
  string Name = 1; //战队名字
  string Declaration = 2; //战队宣言
}

message S2CCreateFT {
  int32 Tag = 1; //结果
}

//获取申请列表
message C2SGetApplyList {
}

message S2CGetApplyList {
  int32 Tag = 1; //结果
  repeated FTApplyMember ApplyMembers = 2; //所有申请成员
}

// 申请加入
message C2SApplyJoinFT {
  string Id = 1; //要申请的战队Id
}
message S2CApplyJoinFT {
  int32 Tag = 1; //结果
}

// 审核加入
message C2SAgreeJoinFT {
  int64 Id = 1; //待审核玩家ID, 如果id为0, 则为一键处理
  int32 State = 2; // 1 同意；2 拒绝
}
message S2CAgreeJoinFT {
  int32 Tag = 1; //结果
}

//解散战队
message C2SDeleteFT {
}

message S2CDeleteFT {
  int32 Tag = 1; //结果
}

//战让队长
message C2SChangeLeader {
  int64 Uid = 1; //新队长uid
}

message S2CChangeFTLeader {
  int32 Tag = 1; //结果
  int64 Uid = 2; //新队长uid
}

//踢出战队
message C2SKickOutFT {
  int64 Uid = 1; //uid
}

message S2CKickOutFT {
  int32 Tag = 1; //结果
  int64 Uid = 2; //uid
}

//退出战队
message C2SLeaveFT {
}

message S2CLeaveFT {
  int32 Tag = 1; //结果
}

//弹劾队长
message C2SAccuseLeader {
}

message S2CAccuseLeader {
  int32 Tag = 1; //结果
  int64 AccuseEndTime = 2; //弹劾结束时间，未弹劾为0
}

//战队改名
message C2SFTChangeName {
  string FTName = 1;
}
message S2CFTChangeName {
  int32 Tag = 1; //结果
  string FTName = 2;
  int64 NextChangeNameTime = 3; //下一次可改名时间戳
}

//改变自动审核
message C2SFTChangeAutoAgree {
  int32 AutoAgree = 1; //1-自动审核  0-不自动审核
  int64 AgreeFv = 2; //最低战力
}
message S2CFTChangeAutoAgree {
  int32 Tag = 1; //结果
  int32 AutoAgree = 2; //1-自动审核  0-不自动审核
  int64 AgreeFv = 3; //最低战力
}

//战队宣言
message C2SFTChangeDeclaration {
  string FTDeclaration = 1;
}
message S2CFTChangeDeclaration {
  int32 Tag = 1; //结果
  string FTDeclaration = 2;
}

//战队光环
message C2SGetFTHaloInfo {
}
message S2CGetFTHaloInfo {
  int32 Tag = 1; //结果
  int32 PeopleNum = 2; //在线人数
  repeated Skill Skills = 5; //觉醒技能
}

//战队搜索
message C2SGetFTSearch {
  string FTName = 1;   //战队名字
}
message S2CGetFTSearch {
  int32 Tag = 1; //结果
  repeated FTListInfo FTListInfo = 2;
}

//战队提示（加入和离开）
message S2CFTTips {
  string Tips = 1; //提示语
}

//行动值购买
message C2SShenYuGodActionBuy {
  int32 Type = 1;
}

message S2CShenYuGodActionBuy {
  int32 Type = 1;
  int32 Tag = 2;
}

//神域保存弹窗状态
message C2SShenYuSaveTigs {
  repeated ShenYuTipsState data = 1;
  int32 IsClean = 2;
}
message S2CShenYuSaveTigs {
  int32 Tag = 1;
}

message C2SShenYuGetSaveTigs {
}
message S2CShenYuGetSaveTigs {
  repeated ShenYuTipsState data = 1;
}

message ShenYuTipsState {
  string Name = 1;
  int32 Status = 2;
}

message WarriorGoldChange {
  int32 Id = 1;
  int32 Grade = 2;
  int32 Level = 3;
  int32 Status = 4;
}

message C2SWarriorGoldChange {
  int32 Skin = 1;
  int32 Grade = 2;
  int32 Level = 3;
  string CostSkin = 4; // 1:1|2:1
}

message S2CWarriorGoldChange {
  int32 Tag = 1;
}

message C2SWarriorGCUnlock {
  int32 Skin = 1;
}

message S2CWarriorGCUnlock {
  int32 Tag = 1;
}

//全部数据
message S2CWarriorGoldChangeGetInfo {
  repeated WarriorGoldChange WarriorGoldChangeData = 1;
}

//单个皮肤数据
message S2CWarriorGCSingleData {
  WarriorGoldChange WarriorGoldChangeData = 1;
}

/*------------------------皮肤额外-----------------------*/
message SkinsExtData {
  int32 FuncId = 1; //功能ID
  int32 Id = 2;     //皮肤ID
  int32 Grade = 3;
  int32 Level = 4;
  int32 Status = 5;
}

//潜能解锁
message C2SSkinsExtUnlock {
  int32 FuncId = 1;
  int32 SkinId = 2;
}

message S2CSkinsExtUnlock {
  int32 Tag = 1;
}

//潜能升级
message C2SSkinsExtLev {
  int32 FuncId = 1;
  int32 SkinId = 2;
  int32 Grade = 3;//(弃用)
  int32 Level = 4;//(弃用)
}

message S2CSkinsExtLev {
  int32 Tag = 1;
}

//全部皮肤数据
message S2CSkinsExtAllData {
  repeated SkinsExtData SkinsExtData = 1;
}

//单个皮肤数据
message S2CSkinsExtSingleData {
  SkinsExtData SkinsExtData = 1;
}

//神器技能选择
message C2SGodSkillSelect {
  int32 FuncId = 1;
  int32 SkillId = 2;
}

message S2CGodSkillSelect{
  int32 Tag = 1;
}

/*------------------------神龙系统-----------------------*/
//神龙数据
message PlayerSL {
  int32 Grade = 1; //阶级
  int32 Lev = 2; //等级
  int32 LevExp = 3; //经验
  int32 Star = 4;     //星级
  int32 Node = 5;     //节点
  repeated SLMosaicInfo SLMosaicInfo = 6;  //镶嵌信息
  int32 Call = 7;     //召唤
}

//镶嵌信息
message SLMosaicInfo {
  int32 Pos = 1;  //镶嵌位置（1--3）
  string Id = 2;  //道具id
  int32 Active = 3; //解锁激活
}

//降临--确定
message C2SSLFallOK {
}

message S2CSLFallOK {
  int32 Tag = 1;
}

//神龙数据
message C2SSLGetData {
}

message S2CSLGetData {
  PlayerSL Data = 1; //数据
}

//神龙--升级
message C2SSLLev {
  int32 ItemId = 1; //道具ID
  int32 Type = 2; //1:单个吃 2:一键吃
}

message S2CSLLev {
  int32 Tag = 1;
  int32 ItemId = 2; //道具ID
  int32 Type = 3; //1:单个吃 2:一键吃
}

//神龙--进阶
message C2SSLGrade {
}

message S2CSLGrade {
  int32 Tag = 1;
}

//神龙--点亮
message C2SSLLight {
}

message S2CSLLight {
  int32 Tag = 1;
  int32 Star = 2; //
  int32 Node = 3; //
}

//神龙--升星
message C2SSLStar {
}

message S2CSLStar {
  int32 Tag = 1;
  int32 Star = 2; //
  int32 Node = 3; //
}

//神龙-召唤
message C2SSLCall {
}

message S2CSLCall {
  int32 Tag = 1;
}

//龙魂--镶嵌
message C2SSLMosaic {
  int32 Pos = 1;//镶嵌位置（1--3）
  string Id = 2;//道具id
}

message S2CSLMosaic {
  int32 Tag = 1;
  int32 Pos = 2;//镶嵌位置（1--3）
  string Id = 3;//道具id
}

//龙魂分解
message C2SSLSoulResolve {
  repeated string ItemIds = 1; //龙魂道具唯一id的数组
}
message S2CSLSoulResolve {
  int32 Tag = 1;
  repeated string ItemIds = 2; //龙魂道具唯一id的数组
}

//龙魂吞噬
message C2SSLSoulHeCheng {
  string ItemId = 1;            //目标龙魂道具id
  repeated ItemInfo Items = 2;  //选择消耗的经验龙魂
}
message S2CSLSoulHeCheng {
  int32 Tag = 1;
  string ItemId = 2;            //目标龙魂道具id
  repeated ItemInfo Items = 3;  //选择消耗的经验龙魂
  int32 LevelUp = 4;            //目标龙魂是否升级 0没升级、1升级
}

//神龙龙魂许愿
message C2SSLSoulWish {
  int32 Type = 1; //抽奖类型，1单次许愿，2十连许愿
}
message S2CSLSoulWish {
  int32 Tag = 1; //结果
  repeated ItemInfo Prize = 3; //抽到奖项
}

//神龙战报
message C2SSLFightReport {
  int32 Id = 1;
}

message S2CSLFightReport {
  string Value = 1;
}

/*------------------------Vip信息-----------------------*/
//数据
message VipInfo {
  int64 UserId = 1; //
  int32 VIP = 2; //vip
  int32 HideVIP = 3; //隐藏VIP
}
/*----------------------剑阵-------------------------*/

message C2SSwordZhenActive {
  int32 Id = 1;
}

message S2CSwordZhenActive {
  int32 Tag = 1;
  SwordZhenData_New SwordZhenData = 2;
}

message C2SSwordZhenStar {
  int32 Id = 1;
  int32 Times = 2; //升星次数
}

message S2CSwordZhenStar {
  int32 Tag = 1;
  SwordZhenData_New SwordZhenData = 2;
}

message SwordZhenData {
  int32 Id = 1;           //剑阵Id
  int32 Star = 2;         //剑阵星级
}

message SwordZhenData_New {
  int32 Id = 1;           //剑阵Id
  int32 Grade = 2;        //剑阵阶数
  int32 Star = 3;         //剑阵星级
  int32 Exp = 4;          //剑阵经验
}

message S2CSwordZhenData {
  repeated SwordZhenData_New SwordZhenData = 1;
}

message C2SSwordZhenGradeUp {
  int32 Id = 1; //剑阵Id
}

message S2CSwordZhenGradeUp {
  int32 Tag = 1;
  SwordZhenData_New SwordZhenData = 2;
}

/*------------------------切磋-----------------------*/
//切磋记录数据结构(数据库存储)
message DbQieCuoLog {
  int64 UserId1 = 1;          //切磋玩家Id
  int64 UserId2 = 2;          //被切磋玩家Id
  string User2Nick = 3;       //被切磋玩家的昵称
  int32 Win = 4;              //是否胜利
  int64 FightTimestamp = 5;   //切磋时间戳
  S2CBattlefieldReport Report = 6; //战报
}

//切磋
message C2SQieCuo {
  int64 UserId = 1;             //切磋对象
}
message S2CQieCuo {
  int32 Tag = 1;
  int64 UserId = 2;             //切磋对象
}

//切磋记录数据结构
message QieCuoLog {
  int64 UserId1 = 1;          //切磋玩家Id
  int64 UserId2 = 2;          //被切磋玩家Id
  string User2Nick = 3;       //被切磋玩家的昵称
  int32 Win = 4;              //是否胜利
  int64 FightTimestamp = 5;   //切磋时间戳
}
//获取切磋记录
message C2SGetQieCuoLog {}
message S2CGetQieCuoLog {
  int32 Tag = 1;
  repeated QieCuoLog List = 2;    //切磋日志列表
}

//获取切磋战报
message C2SGetQieCuoReport {
  int64 UserId1 = 1;          //切磋玩家Id
  int64 UserId2 = 2;          //被切磋玩家Id
  int64 FightTimestamp = 3;   //切磋时间戳
}
message S2CGetQieCuoReport {
  int32 Tag = 1;
  S2CBattlefieldReport Report = 2; //战报
}
//java 通知go 邮件
message J2SSendMail {
}
// 返回龙脉信息
message J2CSZLMInfo {
  int32 StartTime = 1; // 进度条开启时间
  int32 EndTime = 2; // 进度条结束时间
  int32 LmEndTime = 3; // 正在开启的龙脉结束时间，没有则为0
  repeated IntAttr BlockIds = 4; // 阵营 -> 龙脉地块id
}

// 返回龙脉进度条更新
message J2CSZLMProgressInfo {
  int32 Progress = 1; // 进度条
  int32 AddTime = 2; // 上一次龙脉进度值增加时间戳
}

// 返回龙脉开启
message J2CSZLMStart {
  int32 Camp = 1; // 阵营
  int32 BlockId = 2; // 龙脉中心地块id
  int32 LmEndTime = 3; // 正在开启的龙脉结束时间，没有则为0
  int32 MyCamp = 4; // 自身阵营
}

// 请求龙脉副本信息
message C2JSZLMDungeonInfo {
}

// 返回龙脉副本消息
message J2CSZLMDungeonInfo {
  int32 Tag = 1;
  int32 NormalKillNum = 2; // 小怪击杀奖励次数
  int32 ElitePartakeNum = 3; // 精英怪参与奖励次数
  int32 EliteKillNum = 4; // 精英怪击杀奖励次数
  int32 GuwuNum = 5; // 已鼓舞次数
  repeated LMNormalMonster NormalMonster = 6; // 普通怪信息
  repeated LMEliteMonster EliteMonster = 7; // 精英怪信息
  repeated string UsedPartnerIds = 8; // 已经使用的伙伴id，宠物为宠物id
}

// 请求龙脉鼓舞
message S2JSZLMGuwu {
  int32 GuwuNum = 1; // 已鼓舞次数
}

// 返回龙脉鼓舞
message J2CSZLMGuwu {
  int32 Tag = 1;
  int32 GuwuNum = 2; //已鼓舞次数
}

// 返回Go龙脉鼓舞失败
message J2SSZLMGuwuFail {
  int32 Tag = 1;
  int32 GuwuNum = 2; // 发过来的鼓舞次数
  int32 RightGuwuNum = 3; // 正确的鼓舞次数
}

// 请求重置龙脉普通怪
message S2JSZLMResetMonster {
  int32 Id = 1; // 怪物id
  int32 ResetNum = 2; // 已重置次数
}

// 返回重置龙脉普通怪
message J2CSZLMResetMonster {
  int32 Tag = 1;
  int32 PreId = 2; // 之前的怪物id
  LMNormalMonster monster = 3; // 重置后的怪物数据
}

// 返回Go重置龙脉普通怪失败
message J2SSZLMResetMonsterFail {
  int32 Tag = 1;
  int32 Id = 2; // 怪物id
  int32 ResetNum = 3; // 发过来的重置次数
  int32 RightResetNum = 4; // 正确的重置次数
}

// 请求挑战龙脉怪
message C2JSZLMChallenge {
  int32 Id = 1; // 怪物id
  repeated LMXieZhan xiezhan = 2; // 协战信息
}

// 返回挑战龙脉怪
message J2CSZLMChallenge {
  int32 Tag = 1;
  int32 Id = 2; // 怪物id
  int32 Kill = 3; // 是否击杀 1 击杀
  int64 Hp = 4; // 血量
  int32 ChallengeNum = 5; // 剩余挑战次数
  int32 NormalKillNum = 6; // 小怪击杀奖励次数
  int32 ElitePartakeNum = 7; // 精英怪参与奖励次数
  int32 EliteKillNum = 8; // 精英怪击杀奖励次数
}

// 龙脉普通怪信息
message LMNormalMonster {
  int32 Id = 1; // 配置id
  int64 Fighting = 2; // 战力
  repeated int32 XiezhanId = 3; // 协战id
  int32 ResetNum = 4; // 已重置次数
  int32 Kill = 5; // 是否击杀 1 击杀
}

// 龙脉精英怪信息
message LMEliteMonster {
  int32 Id = 1; // 配置id
  PlayerShow Show = 2; // 外显信息
  string ServerName = 3; // 区服名
  int32 camp = 4; // 阵营id
  int64 Hp = 5; // 血量
  int32 ChallengeNum = 6; // 剩余挑战次数
  int32 Kill = 7; // 是否击杀 1 击杀
  int32 shield = 8; // 无敌盾结束时间，0表示没有盾
  int64 MaxHp = 9; // 最大血量
}

// 龙脉协战信息
message LMXieZhan {
  int32 xiezhanId = 1; // 协战id
  repeated int32 PartenType = 2; // 伙伴类型
  int32 PartnerNum = 3; // 上阵伙伴数量
  repeated int32 PartnerId = 4; // 伙伴Id
  repeated int32 Quality = 5; // 品质
  repeated string PetId = 6; // 宠物Id
}

// 龙脉击杀精英怪奖励
message J2CSZLMKillBoss {
  repeated ItemInfo Prize = 1; //奖励数组
}
// 刷新龙脉精英怪信息
message J2CSZLMEliteMonsterInfo {
  int32 Id = 1; // 配置id
  int64 Hp = 2; // 血量
  int32 Kill = 3; // 是否击杀 1 击杀
  int32 shield = 4; // 无敌盾结束时间，0表示没有盾
  int64 MaxHp = 5; // 最大血量
}
//客户端发送龙脉鼓舞
message C2SSZLMGuwu {
  int32 GuwuCount = 1;//鼓舞次数
}
//客户端发送龙脉重置
message C2SSZLMResetMonster{
  int32 MonsterId = 1;//怪物ID
  int32 ResetCount = 2;//重置次数
}

message S2CSZLMGuwu {
  int32 Tag = 1;
  int32 GuwuNum = 2; // 发过来的鼓舞次数
  int32 RightGuwuNum = 3; // 正确的鼓舞次数
}
//客户端发送龙脉重置
message S2CSZLMResetMonster{
  int32 Tag = 1;
}
// 请求龙脉信息
message C2JSZLMInfo {
}

// 返回龙脉结束
message J2CSZLMEnd {
  int32 Camp = 1; // 阵营
  int32 BlockId = 2; // 龙脉中心地块id
  int32 MyCamp = 3; // 自身阵营
}
/*------------------------邀请有礼-----------------------*/
//微信分享成功
message C2SWeiXinShareSuccess {
  int32 Typ = 1; //分享类型 1邀请有礼 2每日邀请 3好友助力
}
//好友助力抽奖
message C2SFriendHelpDraw {}
message S2CFriendHelpDraw {
  int32 Tag = 1;
}

//风雨同舟请求绑定
message C2SFYTZRequestBind {
  int64 BindTargetUserId = 1;   //绑定目标玩家Id
  //  int64 RequestUserId = 2;      //请求绑定玩家Id
  string RequestUserNick = 2;   //请求绑定玩家昵称
}
//回包给请求者
message S2CFYTZRequestBind {
  int32 Tag = 1;
  int64 BindTargetUserId = 2;   //绑定目标玩家Id
}
//回包给被请求者
message S2CFYTZRequestBindO {
  int64 RequestUserId = 1;   //请求绑定玩家Id
  string RequestUserNick = 2;   //请求绑定玩家昵称
}

//风雨同舟响应绑定
message C2SFYTZResponseBind {
  int64 RequestUserId = 1;    //请求绑定玩家Id
  int32 Op = 2;               //相应操作 1同意绑定 2拒绝绑定
}
//回包给处理请求者
message S2CFYTZResponseBind {
  int32 Tag = 1;
  int64 RequestUserId = 2;    //请求绑定玩家Id
  int32 Op = 3;               //相应操作 1同意绑定 2拒绝绑定
}
//回包给请求者
message S2CFYTZResponseBindO {
  int32 Tag = 1;
  int64 BindTargetUserId = 2;       //绑定目标玩家Id
  int32 Op = 3;               //相应操作 1同意绑定 2拒绝绑定
}

//风雨同舟解除绑定
message C2SFYTZUnBind {
  //    int64 BindUserId = 1;   //绑定玩家Id
}
message S2CFYTZUnBind {
  int32 Tag = 1;
  //    int64 BindUserId = 2;   //绑定玩家Id
}

//风雨同舟获取绑定玩家的信息
message C2SFYTZGetBindUserInfo {
  //    int64 BindUserId = 1;   //绑定玩家Id
}
message S2CFYTZGetBindUserInfo {
  int32 Tag = 1;
  int64 BindUserId = 2;   //绑定玩家Id
  string Nick = 3;        //昵称
  int32 Level = 4;        //等级
  int64 OfflineTime = 5;  //玩家在线值为0 离线值为离线的时间戳
  //    int64 Recharge = 6;     //累充金额
}

//获取玩家展示信息
message C2SGetShowUserInfo {
  int64 UserId = 1;   //玩家Id
}
message S2CGetShowUserInfo {
  int32 Tag = 1;
  ShowUserInfo ShowUserInfo = 2;
}

// 获取助力寻宝活动中的玩家数据
message C2SGetHelpXunBaoData {
  int64 ActId = 1;
}
message S2CGetHelpXunBaoData {
  int32 Tag = 1;
  int32 ActId = 2;
  int32 TotalTimes = 3; // 助力寻宝剩余抽奖次数
  int32 BigPrizeNum = 4; // 全服剩余大奖个数
  int32 TodayDrawTimes = 5; // 玩家今天已经抽过几次奖
}

//服务器端口
message ServerPortInfo {
  int32 WsPort = 1;
  int32 HttpPort = 2;
}

//炼化
message C2SItemLianHua {
  repeated string Items = 1; //要炼化的物品ID数组
}
message S2CItemLianHua {
  int32 Tag = 1;
  int32 CurrLevel = 2;
  int32 CurrExp = 3;
}

//炼化系统列表
message C2SListLianHua {
}
message S2CListLianHua {
  repeated SysState SysState = 1;
}

message SysState{
  int32 Type = 1;
  string Value = 2;
}

/****************新战斗 start********************/

message SkillIDataInfo  {
  int32 Id = 1;
  int32 SkillId = 2;
  int32 Level = 3;
  int32 EffectType = 4;
  int32 TargetNum = 5;                   //攻击数量
  repeated int64 Params = 6;
  repeated int32 SkillAddParam1 = 7; //技能提升参数万分比
  repeated int32 SkillAddParam2 = 8; //技能提升参数固定值
}

message HuanLingSkinSkill {
  int32 Id = 1;
  int32 ObjId = 2;
  string Name = 3;
  string Desc = 4;
  int32 IsSelf = 5;
  int32 Type = 6;
  int32 SkillId = 7;
  int32 RoleSkillId = 8;
  int64 UnlockItem = 9;
  int32 UnlockItemNum = 10;
  int32 Unlock = 11;
  int32 ItemId = 12;
  int32 ItemNum = 13;
  int32 ItemNumInc = 14;
  int32 AttrBase = 15;
  int32 AttrLevel = 16;
  int32 MinLevel = 17;
  int32 MaxLevel = 18;
  int32 SkinSkillId = 19;
}

message FightUnitMsg {
  repeated IntAttr IntAttr = 1;
  repeated IntAttr ItemIntAttr = 2;
  repeated StrAttr StrAttr = 3;
  int64 Id = 4;
  string ThirdUid = 6;
  int32 UnitType = 7;
  string IdStr = 8;

  int64 UserId = 18;
  int32 Pos = 19;
  int64 UnitIdx = 20; // 单位出战的顺序
  bool IsCall = 21;    //自己是不是召唤物
  int32 SectPetId = 22;  // 灵兽园序号ID
  int32 KidSex = 23;     //仙童性别
  int32 CampId = 24;
  int64 addMaxHp = 25;   //增加的最大血量
  int64 CurrHp = 26;
  //boss护盾Hp1
  int64 MaxHp1 = 27;                                 //最大护盾
  int64 CurrHp1 = 28;                               //剩余护盾
  bool IsHp1 = 29;                                  //是否使用护盾
  int32 CurrUseHp1 = 30;                               //当前已开启护盾次数
  int32 MaxUseHp1 = 31;                             //最大开启护盾次数
  repeated IntAttr BuffIntAttr = 32;               //buff增加的属性
  repeated IntAttr IntFightShow = 33;              //战斗显示属性
  repeated StrAttr StrFightShow = 34;               //战斗显示属性
  repeated SkillIDataInfo ActiveSkill = 35;    //主动技能
  repeated HuanLingSkinSkill HLActiveSkill = 36;//幻灵主动技能
  repeated HuanLingSkinSkill HLLWSkill = 37;  //幻灵灵武技能
  int32 ActiveSkillIdx = 38;                         //使用技能顺序
  int32 HLActiveSkillIdx = 39;                        //使用技能顺序
  repeated SkillIDataInfo PassiveSkill = 40;    //被动技能
  //Buff             []I.IBuff
  bool Weakness = 41;         //是否触发弱点攻击
  //DoubleHit       I.IBuff                 //连击buff
  repeated SkillIDataInfo CurrSkillData = 42; //当前技能数据
  // CurrSkill       *cfgInfo.SkillInfo      //当前技能数据
  //      AbsorbHp        int64                   //吸血血量
  //      reboundHp       int64                   //反弹血量
  //      immuneReboundHp bool                    //是否免疫反弹
  //      invincible      int64                   //无敌BUFF 0：无；1：有；
  //      reliveM         int64                   //复活小弟BUFF 0：无；1：有；
  //      addHurt         int64                   //增加伤害
  //      baseDamage      int64
  //      reliveTimes     int32
  //      reliveHp        int64                                 //复活恢复血量
  //      returnHp        int64                                 //每回合回复血量
  //      returnHp_Sl     int64                                 //每回合神龙恢复回复血量
  //      OnAddBuff       func(unit I.IFightUnit, buffId int64) //增加buff事件
  //  revenge         int32                                 // 是否触发了复仇
  //  isGoWar         bool                                  //是否出战过
  //  isFight         bool                                  //是否战斗过
  //  isAlienFight 	bool 								  //是否异兽战斗过
  //  purify          int32                                  //1出手净化、2出手后净化
  //  protectPos      int64                                 //保护者的位置（这个位置的人会保护我一次）
  //  fightData       I.IFightData
  //      isBoss          bool            //是否是boss， boss计算伤害
  //      AtkAttr         map[int32]int64 //攻击前附加临时属性，攻击后清空。k：属性ID,v：增幅万分比
  //      RoundAttr       map[int32]int64 //回合开始前临时属性，回合结束后清空。k：属性ID,v：增幅万分比
  //
  //      ShieldCState bool  //玩家伤害量护盾状态，false无护盾，true有护盾
  //      ShieldTState bool  //玩家伤害次数护盾状态，false无护盾，true有护盾
  //      ShieldC      int64 //玩家剩余的 抵挡伤害值   护盾
  //      ShieldCRound int64 //玩家剩余的 抵挡伤害值   护盾回合数
  //      ShieldT      int64 //玩家剩余的 抵挡伤害次数 护盾
  //      ShieldTTimes int64 //玩家本场战斗触发获得次数护盾的次数
  //  //冰盾，攻击者给被攻击者增加；有冰盾不能出手
  //      ShieldIState bool  //玩家冰护盾状态，false无护盾，true有护盾
  //      ShieldI      int64 //玩家剩余的 抵挡伤害冰盾   护盾
  //      ShieldIRound int64 //玩家剩余的 抵挡伤害冰盾   护盾回合数
  //
  //      Defence bool //是否触发招架
  //
  int32 RealmOrder = 49; //大境界等级
  int64 Reborn = 50;      //转生等级
  int32 FlyLevel = 51;    //飞升等级
  int32 PetPos = 52;      //宠物的出战位置，用来对出手排序
  //
  //      SuperDoubleHitTime      int64 //无限连击触发次数
  //      SuperDoubleHitDamageAdd int64 //无限连击伤害递增万分比
  //
  //      IsBitch            bool            //是否被魅惑
  bool  IsMergePetA = 53;                   //是否是合体天仙
  //      TogetherAtk        int64           //触发合击，伤害万分比
  //      IsAtkWeak          bool            //本次出手是否攻击血量最低的单位
  //      IsAtkContinue      bool            //是否追击
  //      AtkContinueTime    int32           //本回合追击次数
  //      AtkContinueTarget  []I.IFightUnit  //追击目标
  //      AtkContinueOneTime map[int32]int32 //本回合对单目标的追击次数
  //      AtkContinueOneMax  int32           //对单目标攻击次数上限
  //      NoContinueFont     bool            //屏蔽追击飘字
  //
  int32 IsHLAtk = 54;                     //是否是幻灵攻击
  //  repeated int32 SkillOnStart = 35;    //战斗开始前释放的技能ID
  //      UseHeroSkill          bool       //标记此单位是否已使用了英雄组合技
  //  repeated Skill HeroSkill = 36; //英雄组合技
  //      IsAddVertigoLeftRound bool       //本回合结束时,是否增加眩晕持续回合
  //      IsAddBitchLeftRound   bool       //本回合结束时,是否增加魅惑持续回合
  //
  repeated  int64 HLSkin = 55; //回合内幻灵id对应皮肤
  repeated SkillExtra NoSureSkills1 = 56;  //英雄组合技被动技能
  //
  //  int32 AngerValue = 39;			 			//受到一次攻击（被连击算多次）增加怒气值
  //  int32 AlienCurSkin = 40;					//异兽当前
  int32 AlienSkin = 57;            //异兽萌宠皮肤
  int32 AlienSkin2 = 58;          //异兽猛兽皮肤
  //      SwallowStatus		int32 			//吞噬状态 0正常 1吞噬 2吐出 3被吞噬
  int32 AngerValuePVPMax = 59;        //pvp怒气值最大值
  int32 AngerValuePVEMax = 60;        //pve怒气值最大值
  repeated Skill AlienActiveSkill = 61;  //异兽主动技能 0吞噬 1吐出
  repeated Skill AlienPassiveSkill = 62;  //异兽被动技能 基础被动 0是基础被动，其他是铭牌技能
  //      ActionBeforeEaten	bool			//单位在被异兽吞噬前是否出手
  //      AlienVomitRound		int32			//吞噬吐出回合
  //
  //      NoDieTimes			int32			//免死触发次数
  //
  int32 PetAwaken = 63;            //神宠觉醒等级
  //      NowDead				bool			//立刻死亡， 被秒杀时为true
  //
  //  repeated Skill SLSoulSkill = 47;	//神龙龙魂技能
  //  repeated Skill SLSoulTriggerRatio	= 48;		//神龙龙魂技能触发概率
  //  repeated int32 SLSoulWeakRatio = 49;			//神龙龙魂技能衰减概率
  //      SLAtkType			int32 			//神龙攻击类型
  //
  //      RoundsDropbHp		int64			//流血buff
  //      RoundsDropbHpTimes	int32			//流血buff持续回合数
  int32 SLActiveSkill = 64;          //神龙激活技能
  //
  //      DecSpeed			bool 			//减速
  //      Frozen				bool			//冰冻
  int32 SLSkinStartSkill = 65;        //神龙皮肤开场技能技能
  int32 SLSkinStartEffect = 66;          //神龙皮肤开场技能效果
  int32 SLSkinStartParam = 67;        //神龙皮肤开场技能参数

  //  int32 KidsMark = 54;		 			//仙童标记
  //  int32 CHD_DamageMin	= 55;				//当前血量伤害-伤害万分比最小值
  //  int32 CHD_DamageMax	= 56;				//当前血量伤害-伤害万分比最大值
  //  int32 CHD_CurHpRatio = 57;					//当前血量伤害-当前血量万分比

  int32 ActiveSKillExtraFix = 68;      //主动技能提升固定值
  int32 ActiveSKillExtraPer = 69;      //主动技能提升万分比

  int32 SpeUnitFlag = 70;              //出站单位特殊身份标记  1-神兽天蓬
  //  int32 LastAtkRound = 61;		 			//上次攻击回合,用于神兽-天蓬的休息判断
  //  int32 TianPengShapeContinueRound = 62; 	//神兽-天蓬，变身持续到第N回合结束，变身期间增加被动buff
  //  int32 DoubleHitRoundNum = 63; 			//限制天蓬单回合连击次数最多一次

  repeated Skill FattrSkill = 71;  //助战羁绊技能 战神-天仙互加
  int32 ClientShowSkill = 72;

  //      DebuffProbability	int32			//异常buff概率，回合结束清掉
  //      ShapeStage			int32			//变身阶段 表示神兽-二郎真君与哮天犬切换
  //      XTQAtkContinueDamageP int32 		//哮天犬追击伤害提升比例
  //      XTQAtkContinueDamageFix int32 		//哮天犬追击伤害提升固定值
}

message FightDataReqMsg {
  int64 refreshId = 1;
  repeated FightUnitMsg allunits = 2;
  repeated FightUnitMsg units = 3;
  repeated FightUnitMsg unitsCover = 4;
  //    report       *msg.S2CBattlefieldReport //战报
  //      win          int64                     //星星数量
  //      draw         bool                      //是否平局（指30回合，战斗结束后，双方都有人）
  int32 playerNum = 5;
  int32 enemyNum = 6;
  //      round        int32           //回合
  //      useHpKey     consts.HpType   //是否记录hp
  //      pHurts       map[int64]int64 // 每个人的伤害统计,只计算对boss的伤害
  //      pKillNums    map[int64]int64 // 每个人的击杀数
  int64 leaderId = 10;
  int32 instanceType = 11; //战斗类型
  //      instanceInfo *cfgInfo.FightSceneInfo //战斗场景配置
  //      isDestory    bool                //是否销毁
  //      triggerBuff  []I.IBuff
  //      OnlyFightBoss bool //只打Boss，不扣血不往前端发战报
  //      PrintReport   bool
  repeated int32 ShieldTrigger = 12;
  int32 TotalShieldMath = 13;
  int32 OnceShieldMath = 14;
  int32 BreakShield = 15;
  int32 LockBloodPercent = 16; //无敌状态触发条件：血量降低至万分比以下，锁血
  //      IsLockBlood      bool  //本次战斗是否触发了锁血
  //      LastDamage       int64 //上一个step中最终造成的伤害值
  //      Relation     map[int32]map[consts.UnitType][]I.IFightUnit //记录双方所有的出战单位类型，用于计算羁绊，防止多层for循环
  //      HaveRelation map[int32]map[int32][]I.IFightUnit           //已生效的所有羁绊
  //      PlayerAtkTimes map[int64]int32 //每个玩家及其助战单位的总攻击次数
  //      HeroSkill1     bool            //战斗中双方是否已经释放了组合技
  //      HeroSkill2     bool            //战斗中双方是否已经释放了组合技
  //      SamePlayFlag   int32		   //把一组Effect效果打上标记，用于客户端连续加速播放
  //      SLUnit				[]I.IFightUnit //战斗中双方触发神龙龙魂技能，按顺序均加入到数组中，按顺序执行
  //      SLRoundSkillInfo 	[]int32
  //      SLRoundSkillTmp 	[]SLUnitAtk  // 单位每次出手触发的龙魂技能事件
  //      ImagePlayerTotalHP 	int64  // campid=2 的玩家作为boss，总血量
  //      ImagePlayerBossWudi int32 // 玩家镜像BOSS无敌标记，1表示处于无敌状态
  //      ImagePlayerBossWudiStep   int32 // 龙脉镜像BOSS无敌盾阶段 0未触发过 1已触发70盾 2已触发30盾
  //      ImagePlayerBossWudiStep2   int32 // 龙脉镜像BOSS无敌盾阶段 0未触发过 1已触发70盾 2已触发30盾, 回传java

}

message FightDataResMsg {
  S2CBattlefieldReport report = 1;
}


/****************新战斗 end********************/

/**************************周年庆**************************/

message WishTreeItemStatus {
  int32 Item1Id = 1;
  int32 Status1 = 2;
  int32 Item2Id = 3;
  int32 Status2 = 4;
  int32 Item3Id = 5;
  int32 Status3 = 6;
  int32 Item4Id = 7;
  int32 Status4 = 8;
}

// 获取许愿树信息
message C2SGetWishTreeInfo {
  int32 ActId = 1;
}
message S2CGetWishTreeInfo {
  int32 Tag = 1;
  int32 ActId = 2;
  WishTreeItemStatus TreeInfo = 3;
  int32 Times = 4;
  int32 IsOpen = 5;
}

// 领取奖励
message C2SReceiveWishTreeReward {
  int32 ActId = 1;
}
message S2CReceiveWishTreeReward {
  int32 Tag = 1;
}

// 选择奖励
message C2SSelectWishTreeReward {
  int32 ActId = 1;
  int32 Type = 2; // 奖池类型
  int32 Id = 3; // 奖项序号ID
}
message S2CSelectWishTreeReward {
  int32 Tag = 1;
}

// 周年蛋糕
message C2SBirthday {
  int32 ActId = 1;
}
message S2CBirthday {
  int32 Tag = 1;
  int64 Score = 2;
  repeated int32 Reward = 3;
  int32 ActId = 4;
}

// 做蛋糕
message C2SDoCake {
  int32 ActId = 1; //活动Id
  int32 ItemId = 2; //道具Id
  int32 Auto = 3; //是否一键使用
}
message S2CDoCake {
  int32 Tag = 1;
  int32 ActId = 2; //活动Id
  int32 ItemId = 3; //道具Id
}

message C2SReceiveAllCake {
  int32 ActId = 1; //活动Id
}
message S2CReceiveAllCake {
  int32 Tag = 1;
  int32 ActId = 2; //活动Id
}

// 获取普天同庆活动中的玩家数据
message C2SGetPuTianTongQingData {
  int64 ActId = 1;
}
message S2CGetPuTianTongQingData {
  int32 Tag = 1;
  int32 ActId = 2;
  int32 Day = 3;//活动开启第几天
  repeated RecDays RecDays = 4; //单天领奖记录  state 0：不能领  1:能领   2：领过
  repeated RecDays RecCumDays = 5; //累计领奖记录  state 0：不能领  1:能领   2：领过
}

message RecDays {
  int32 Day = 1; // 天数
  int32 State = 2; // 领取状态
}

// 领取普天同庆
message C2SRecPuTianTongQing {
  int64 ActId = 1;
  int32 Types = 2; // 类型 1：单天领奖  2：累计领奖
  int32 Day = 3; // 领取天数
}
message S2CRecPuTianTongQing {
  int32 Tag = 1;
}

//一路有你--获取活动中的玩家数据
message C2SGetYiLuYouNiData {
  int64 ActId = 1;
}
message S2CGetYiLuYouNiData {
  int32 Tag = 1;
  int32 ActId = 2;
  int64 Score = 3;//1:领过
}

//一路有你--领取
message C2SRecYiLuYouNi {
  int64 ActId = 1;
}
message S2CRecYiLuYouNi {
  int32 Tag = 1;
}

// 神兽阵营PK
message C2SCampPKInfo {
  int32 ActId = 1;
}
message S2CCampPKInfo {
  int32 Tag = 1;
  int32 ActId = 2;
  int64 AScore = 3; // 阵营积分
  int64 BScore = 4; // 阵营积分
  int64 MyScore = 5; // 我的积分
  repeated int32 Rewards = 6; // 以领取的个人奖励
  int32 MyCamp = 7; // 我的阵营 1 vs 2
  repeated int32 ServerRewards = 8; // 以领取的全服奖励
  int32 ANum = 9; // 阵营宝箱数量
  int32 BNum = 10; // 阵营宝箱数量
}

// 选择阵营
message C2SSelectCamp {
  int32 ActId = 1;
  int32 Camp = 2;
}
message S2CSelectCamp {
  int32 Tag = 1;
  int32 ActId = 2;
  int32 Camp = 3;
}

// 投票
message C2SDoVote {
  int32 ActId = 1;
  int32 ItemId = 2;
  int32 Auto = 3; // 是否自动使用
}
message S2CDoVote {
  int32 Tag = 1;
  int32 ActId = 2;
  int64 MyScore = 3; // 我的积分，大庆典阵营PK无视这个字段
  int64 Score = 4; // 我的阵营积分，大庆典阵营PK无视这个字段
}

message CampRewardRecords {
  int32 Camp = 1; // 阵营 1 左 2 右
  int64 UserId = 2; // 角色ID
  string Nick = 3; // 昵称
  string World = 4; // 世界前缀
  int32 Num = 5; // 宝箱数量
}
message C2SCampRewardRecords {
  int32 ActId = 1;
}
message S2CCampRewardRecords {
  int32 Tag = 1;
  int32 ActId = 2;
  repeated CampRewardRecords Records = 3; // 获奖记录
}

// 充值类礼包兑换
message C2SExchangeAtRShop {
  int32 ActId = 1;
  int32 Gid = 2; // 礼包ID
}
message S2CExchangeAtRShop {
  int32 Tag = 1;
}

// 周年庆时光机
message YearTimeShop {
  int32 GoodId = 1;
  int32 Status = 2; //状态 0 未购买；1 已购买，未领取；2 已领取
}

message C2SGetYearTimeShop {
  int32 ActId = 1;
}
message S2CGetYearTimeShop {
  int32 Tag = 1;
  int32 ActId = 2;
  repeated YearTimeShop Items = 3;
}

message C2SYearTimeShopRefresh {
  int32 ActId = 1;
}
message S2CYearTimeShopRefresh {
  int32 Tag = 1;
}

message C2SYearTimeShopExchange {
  int32 ActId = 1;
  int32 GoodId = 2;
}
message S2CYearTimeShopExchange {
  int32 Tag = 1;
}

// 1元神兽
message Act1RMBPetRecord {
  int64 UserId = 1;
  string Nick = 2;
  int32 AreaId = 3;
  int32 PetIndexId = 4; // 神兽索引ID
}
message C2S1RMBPet {
  int32 ActId = 1;
}
message S2C1RMBPet {
  int32 Tag = 1;
  int32 ActId = 2;
  int32 PetId = 3; // 神兽序号ID
  int32 Amount = 4; // 当前份额
  int64 Timestamp = 5; // 当前神兽刷新倒计时时间戳
  int64 PublicityTime = 6; // 当前神兽奖励公示倒计时时间戳
  repeated Act1RMBPetRecord Records = 7; // 获奖记录
  int64 MyAmount = 8; // 我的份额
}

message C2SHiedActRed {
  int32 ActId = 1;
}

//----------------------------------------------------------榜单竞技--------------------------------------

//榜单竞技阵容上阵
message C2SBangDanJJSetPartnerPos {
  int32 JJId = 1;                  //榜单竞技配置Id
  BangDanJJUnitData UnitData = 10; //阵容信息
}

message S2CBangDanJJSetPartnerPos {
  int32 Tag = 1;
  int32 JJId = 2;                    //榜单竞技配置Id
  BangDanJJUnitData UnitData = 10;   //阵容信息
}

//获取榜单竞技信息
message C2SBangDanJJInfo {
}

message S2CBangDanJJInfo {
  int32 Tag = 1;
  repeated BangDanJJData AllData = 3; //所有榜单信息
}

//榜单竞技信息
message BangDanJJData {
  int32 JJId = 1;                       //榜单竞技配置Id
  bool HaveFight = 3;                   //是否战斗过
  int32 ETime = 4;                      //结束时间
  int32 State = 5;                      //Boss状态  0,沉睡  1,苏醒
  int32 LeftTimes = 6;                  //剩余挑战次数
  int32 MyRank = 7;                     //自身的排名
  int64 Damage = 8;                     //自身本期最高伤害
  int64 TDamage = 9;                    //下一目标的伤害(当MyRank==1此字段无效)
  BangDanJJUnitData UnitData = 10;      //阵容信息
}

//榜单竞技战斗单位信息
message BangDanJJUnitData {
  int32 HeroId = 10;   //出战英雄Id
  string PetId1 = 11;  //位置1出战宠物唯一Id
  string PetId2 = 12;  //位置2出战宠物唯一Id
  string PetId3 = 13;  //位置3出战宠物唯一Id
  int32 PetAId = 14;   //要激活的天仙ID
  int32 AlienId = 15;  //异兽Id
}

//榜单竞技开始战斗
message C2SBangDanJJFight {
  int32 JJId = 1;      //榜单竞技配置Id
}

message S2CBangDanJJFight {
  int32 Tag = 1;
  int32 JJId = 2;
  int64 FirstTotalNum = 3;  //第一名的伤害
  int32 MyRank = 4;         //我的排名
  int64 MyTotalNum = 5;     //我的伤害
  repeated ItemData ItemData = 6; //奖品展示
}

//战斗对象信息
message BangDanJJUnitDamage {
  int32 UnitType = 1; //战斗单位类型  0主角 1宠物 2仙侣 3战神 4仙童 5偃甲 6幻灵 7英雄
  int64 Id = 2; //模板ID
  int64 Damage = 3;//造成的伤害
  int32 SkinId = 6; //皮肤Id(用于偃甲和仙童)
  int32 Rarity = 7; //稀有度
  int32 Quality = 8; //品质
  int32 PetType = 27; // 宠物类型 1野生 2宝宝 3变异 4神兽 5一变 6二变
}

//榜单排名战报
message BangDanRankReport {
  int64 Id = 1;                           //玩家Id
  repeated BangDanJJUnitDamage Units = 2; //战斗对象信息
  S2CBattlefieldReport Report = 3;        //战报
}

//榜单竞技排行榜
message BangDanJJRank {
  int64 Id = 1;        //玩家ID
  int32 Rank = 2;      //排名
  int64 AreaId = 3;    //玩家区服ID
  int32 Head = 4;      //头像
  int32 HeadFrame = 5; //头像框
  string Nick = 6;     //昵称
  int64 Damage = 7;    //输出伤害
  string World = 9;    //世界简称
  int32 Vip = 10;      //Vip等级
  int32 HideVIP = 11;  //Vip等级是否屏蔽  0正常显示  1屏蔽
}

message C2SBangDanJJRankInfo {
  int32 JJId = 1; ////榜单竞技配置Id
  int32 Type = 2; //排行榜类型，0为本周排名，1为上周排名
}

message S2CBangDanJJRankInfo {
  int32 Tag = 1;
  int32 JJId = 2;                         //榜单竞技配置Id
  int32 Type = 3;                         //排行榜类型，0为本周排名，1为上周排名
  repeated BangDanJJRank List = 4;        //排行榜数据
  int32 MyRank = 5;                       //自身的排名
  int64 Damage = 6;                       //自身本期最高伤害
  int64 TDamage = 7;                      //下一目标的伤害(当MyRank==1此字段无效)
}

//请求榜单竞技战斗详情
message C2SBangDanJJViewFight {
  int32 JJId = 1;                         //榜单竞技配置Id
  int32 Type = 2;                         //排行榜类型，0为本周排名，1为上周排名
  int64 PlayerId = 3;                     //玩家Id
}

//返回榜单竞技战斗详情
message S2CBangDanJJViewFight {
  int32 Tag = 1;
  int32 JJId = 2;                         //榜单竞技配置Id
  int32 Type = 3;                         //排行榜类型，0为本周排名，1为上周排名
  int64 PlayerId = 4;                     //玩家Id
  BangDanRankReport Report = 5;           //战报
}

//更新榜单竞技次数
message S2CBangDanJJTimesInfo {
  int32 JJId = 1;
  int32 LeftTimes = 2; //剩余挑战次数
  bool HaveFight = 3;  //是否战斗过
}

//更新榜单竞技状态信息
message S2CBangDanJJStateInfo {
  int32 JJId = 1;
  int32 ETime = 2;                      //结束时间
  int32 State = 3;                      //Boss状态  0,沉睡  1,苏醒
}

//榜单竞技扫荡
message C2SBangDanJJSweep {
  int32 JJId = 1;
}

//榜单竞技扫荡
message S2CBangDanJJSweep {
  int32 Tag = 1;
  int32 JJId = 2;
  int32 Times = 3;                //扫荡次数
  int32 MyRank = 4;               //排名提升
  int64 MaxDamage = 5;            //最高伤害
  repeated ItemData ItemData = 6; //奖品展示
}


message BangDanJJPlayerData {
  int64 Id = 1;                      //玩家Id
  int32 AreaId = 2;                  //所属区服
  int32 LeftTimes = 3;               //玩家剩余挑战次数
  int32 AwardTimes = 4;              //玩家战斗奖励次数
  bool HaveFight = 5;                //是否战斗过
}

message BangDanJJDBData {
  int32 JJId = 1;                           //榜单竞技配置Id
  int32 BossState = 2;                      //boss状态(0-沉睡,1-苏醒)
  int64 ETime = 3;                          //状态结束时间
  int64 FTLastRecoveryTime = 4;             //战斗次数上次恢复时间点
  int64 RTLastResetTime = 5;                //奖励重置次数上次恢复时间点

  repeated BangDanJJPlayerData PlayerData = 8;   //玩家活动数据
  repeated BangDanJJRank RankList = 9;       //排行榜数据
  repeated BangDanRankReport Reports = 10;   //战报
  repeated BangDanJJRank LastRankList = 11;  //上次排行榜数据
  repeated BangDanRankReport LastReports = 12;//上次的战报
}

//-----------------------------------------宠物装备-----------------------------------

//宠物装备-打造
message C2SPetEquipBuild {
  int32 Id = 1;              //锻造Id
  int32 EffectId = 2;        //选择的专属效果Id
}

message S2CPetEquipBuild {
  int32 Tag = 1;
  string Id = 2; //打造出来的新装备
}

//宠物装备-升星
message C2SPetEquipStarUp {
  string ItemId = 1;        //目标装备Id
}

message S2CPetEquipStarUp {
  int32 Tag = 1;
}

//宠物装备-提品
message C2SPetEquipQualityUp {
  string ItemId = 1;         //目标装备Id
}

message S2CPetEquipQualityUp {
  int32 Tag = 1;
}

//宠物装备-分解
message C2SPetEquipSmelt {
  repeated string ItemIds = 1; //分解的装备唯一Id
}

message S2CPetEquipSmelt {
  int32 Tag = 1;
}

//宠物装备-穿戴
message C2SPetEquipWear {
  string PetId = 1;             //宠物Id
  string ItemId = 2;            //装备ID
}

message S2CPetEquipWear {
  int32 Tag = 1;
  Pet2 Pet2 = 2;                //宠物信息
  string ItemId = 3;            //装备ID
}

//宠物装备-替换穿戴
message C2SPetEquipExchangeWear {
  string PetId = 1;             //宠物Id
  string ItemId = 2;            //装备ID
}

//宠物装备-替换穿戴
message S2CPetEquipExchangeWear {
  int32 Tag = 1;
  string ItemId = 3;            //要替换的装备ID
  Pet2 DPet2 = 5;               //现在穿戴此装备的宠物
  Pet2 TPet2 = 6;               //之前穿戴此装备的宠物(之前没宠物穿戴则是空)
  string ItemId2 = 7;           //被替换的装备ID
}

//宠物装备-脱下
message C2SPetEquipTakeOff {
  string PetId = 1;             //宠物Id
  string ItemId = 2;            //装备ID
}

message S2CPetEquipTakeOff {
  int32 Tag = 1;
  Pet2 Pet2 = 2;                //宠物信息
  int32 Part = 3;               //部位
}

//宠物装备-一键穿戴
message C2SPetEquipOneKeyWear {
  string PetId = 1;             //宠物Id
}

message S2CPetEquipOneKeyWear {
  int32 Tag = 1;
  Pet2 Pet2 = 2;                 //宠物信息
}

//宠物装备-一键卸下
message C2SPetEquipOneKeyTakeOff {
  string PetId = 1;             //宠物Id
}

message S2CPetEquipOneKeyTakeOff {
  int32 Tag = 1;
  Pet2 Pet2 = 2;                 //宠物信息
}

//宠物装备-保存信息
message C2SPetEquipSaveInfo {
  repeated int32 List = 1;       //选项列表
}

//宠物装备-下发保存的信息
message S2CPetEquipSaveInfo {
  repeated int32 List = 1;       //选项列表
}

//宠物装备上锁或解锁
message C2SPetEquipLock {
  string Id = 1; //装备Id
}

//宠物装备上锁或解锁
message S2CPetEquipLock {
  int32 Tag = 1; //结果
  string Id = 2; //装备Id
  int32 Lock = 3; //当前状态，是否已锁，0否1是
}

//宠物装备-飘字
message S2CPetEquipFly {
  repeated string Ids = 1;        //对应的物品Id
}

//-----------------------------------------大庆典-----------------------------------
//烟花福袋--获取活动数据
message C2SGetFuDaiData{
  int32 ActId = 1;
}
message S2CGetFuDaiData {
  int32 Tag = 1;
  int32 ActId = 2;
  repeated FuDaiData FuDaiData = 3;
}

//福袋活动数据
message FuDaiData {
  int32 ActId = 1; // 活动Id
  int32 Types = 2; // 类型 1:小福袋 2:大福袋
  int32 Id = 3; //福袋编号
  int32 DayTimes = 4; //当天购买次数
  int32 LifeTimes = 5; //终身购买次数
}

//烟花福袋--购买
message C2SBuyFuDai {
  int32 ActId = 1;
  int32 Types = 2;// 类型 1:小福袋 2:大福袋
  int32 Id = 3; //福袋编号
}
message S2CBuyFuDai {
  int32 Tag = 1;
  int32 ActId = 2;
  int32 Types = 3;
  int32 Id = 4;
  repeated ItemInfo Prize = 5; //奖励
}

//烟花之夜--点击页签
message C2SGetNightData{
  int32 ActId = 1;
}
message S2CGetNightData {
  int32 Tag = 1;
  int32 ActId = 2;
}

//烟花之夜--制作
message C2SNightMake {
  int32 ActId = 1;
  int32 Id = 2; //编号
}
message S2CNightMake {
  int32 Tag = 1;
  int32 ActId = 2;
  int32 Id = 3;
}

//获奖记录log
message RewardLog{
  int32 PlayerId = 1; //玩家Id
  string Nick = 2;    //玩家昵称
  int64 AreaId = 3;   //玩家区服
  string World = 4;   //世界等级
  int64 Timestamp = 5; //获得道具的时间戳
  int32 ItemId = 6;   //道具Id
  int32 ItemNum = 7;  //道具数量
}

//烟花之夜--获取奖励记录
message C2SNightRewardLog{
  int32 ActId = 1;
}
message S2CNightRewardLog {
  int32 Tag = 1;
  int32 ActId = 2;
  repeated RewardLog RewardLog = 3;
}

/***********************************后端计算战力推前端***********************************/
message Attr{
  repeated string Key = 1; //此属性KEY
  int64 AttrId = 2; //属性ID
  int64 Multi = 3; // 属性倍数，需除1万
  int64 ExtMulti = 5; //此系统额外加成倍数，需除1万
  repeated IntAttr Attrs = 6;//具体加成的细节属性值
  int64 FV = 7;//此属性的最终战力，包含固定属性和百分比加成属性
}
message C2SGetAttr{
  repeated string Keys = 1; //取单系统战力的key组合，需同后端确认组合方式
}
message S2CGetAttr {
  repeated Attr Attrs = 1;//此系统所有属性
  int64 FV = 2;//此系统总战力
}



message S2CSendActiveNotice {
  int32 ActiveId  = 1;
  string PicPath  = 2;
  string IconPath = 3;
  string TitlePath = 4;
  int64 StartDate = 5;
  int64 EndDate   = 6;
  int32 State     = 7; //0 删除 1 显示 2显示并弹框

}
